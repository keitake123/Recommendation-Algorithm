{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/event-target-shim/dist/event-target-shim.mjs","../../node_modules/flatbuffers/js/flatbuffers.mjs","../../node_modules/text-encoding-utf-8/lib/encoding.lib.mjs","../../node_modules/apache-arrow/util/utf8.mjs","../../node_modules/apache-arrow/io/interfaces.mjs","../../node_modules/apache-arrow/util/compat.mjs","../../node_modules/apache-arrow/util/buffer.mjs","../../node_modules/apache-arrow/io/adapters.mjs","../../node_modules/apache-arrow/vector.mjs","../../node_modules/apache-arrow/fb/Schema.mjs","../../node_modules/apache-arrow/fb/Message.mjs","../../node_modules/apache-arrow/enum.mjs","../../node_modules/apache-arrow/util/bit.mjs","../../node_modules/apache-arrow/visitor.mjs","../../node_modules/apache-arrow/visitor/typecomparator.mjs","../../node_modules/apache-arrow/type.mjs","../../node_modules/apache-arrow/data.mjs","../../node_modules/apache-arrow/util/pretty.mjs","../../node_modules/apache-arrow/builder/valid.mjs","../../node_modules/apache-arrow/builder/buffer.mjs","../../node_modules/apache-arrow/builder.mjs","../../node_modules/apache-arrow/builder/bool.mjs","../../node_modules/apache-arrow/builder/null.mjs","../../node_modules/apache-arrow/builder/date.mjs","../../node_modules/apache-arrow/builder/decimal.mjs","../../node_modules/apache-arrow/builder/dictionary.mjs","../../node_modules/apache-arrow/builder/fixedsizebinary.mjs","../../node_modules/apache-arrow/util/math.mjs","../../node_modules/apache-arrow/builder/float.mjs","../../node_modules/apache-arrow/util/bn.mjs","../../node_modules/apache-arrow/builder/int.mjs","../../node_modules/apache-arrow/builder/time.mjs","../../node_modules/apache-arrow/builder/timestamp.mjs","../../node_modules/apache-arrow/builder/interval.mjs","../../node_modules/apache-arrow/builder/binary.mjs","../../node_modules/apache-arrow/builder/utf8.mjs","../../node_modules/apache-arrow/builder/run.mjs","../../node_modules/apache-arrow/vector/row.mjs","../../node_modules/apache-arrow/util/vector.mjs","../../node_modules/apache-arrow/vector/chunked.mjs","../../node_modules/apache-arrow/column.mjs","../../node_modules/apache-arrow/util/args.mjs","../../node_modules/apache-arrow/schema.mjs","../../node_modules/apache-arrow/builder/list.mjs","../../node_modules/apache-arrow/builder/fixedsizelist.mjs","../../node_modules/apache-arrow/builder/map.mjs","../../node_modules/apache-arrow/builder/struct.mjs","../../node_modules/apache-arrow/builder/union.mjs","../../node_modules/apache-arrow/visitor/set.mjs","../../node_modules/apache-arrow/visitor/builderctor.mjs","../../node_modules/apache-arrow/fb/File.mjs","../../node_modules/apache-arrow/builder/index.mjs","../../node_modules/apache-arrow/ipc/metadata/file.mjs","../../node_modules/apache-arrow/io/stream.mjs","../../node_modules/apache-arrow/io/file.mjs","../../node_modules/apache-arrow/util/int.mjs","../../node_modules/apache-arrow/visitor/vectorloader.mjs","../../node_modules/apache-arrow/visitor/typeassembler.mjs","../../node_modules/apache-arrow/ipc/metadata/json.mjs","../../node_modules/apache-arrow/ipc/metadata/message.mjs","../../node_modules/apache-arrow/ipc/message.mjs","../../node_modules/apache-arrow/visitor/vectorassembler.mjs","../../node_modules/apache-arrow/ipc/writer.mjs","../../node_modules/apache-arrow/util/recordbatch.mjs","../../node_modules/apache-arrow/vector/base.mjs","../../node_modules/apache-arrow/vector/binary.mjs","../../node_modules/apache-arrow/vector/bool.mjs","../../node_modules/apache-arrow/vector/date.mjs","../../node_modules/apache-arrow/vector/decimal.mjs","../../node_modules/apache-arrow/vector/dictionary.mjs","../../node_modules/apache-arrow/vector/fixedsizebinary.mjs","../../node_modules/apache-arrow/vector/fixedsizelist.mjs","../../node_modules/apache-arrow/vector/float.mjs","../../node_modules/apache-arrow/vector/interval.mjs","../../node_modules/apache-arrow/vector/int.mjs","../../node_modules/apache-arrow/vector/list.mjs","../../node_modules/apache-arrow/vector/map.mjs","../../node_modules/apache-arrow/vector/null.mjs","../../node_modules/apache-arrow/vector/struct.mjs","../../node_modules/apache-arrow/vector/timestamp.mjs","../../node_modules/apache-arrow/vector/time.mjs","../../node_modules/apache-arrow/vector/union.mjs","../../node_modules/apache-arrow/vector/utf8.mjs","../../node_modules/apache-arrow/util/fn.mjs","../../node_modules/apache-arrow/visitor/get.mjs","../../node_modules/apache-arrow/visitor/indexof.mjs","../../node_modules/apache-arrow/visitor/iterator.mjs","../../node_modules/apache-arrow/visitor/toarray.mjs","../../node_modules/apache-arrow/visitor/bytewidth.mjs","../../node_modules/apache-arrow/visitor/vectorctor.mjs","../../node_modules/apache-arrow/vector/index.mjs","../../node_modules/apache-arrow/table.mjs","../../node_modules/apache-arrow/recordbatch.mjs","../../node_modules/apache-arrow/ipc/reader.mjs","../../node_modules/apache-arrow/io/whatwg/builder.mjs","../../node_modules/apache-arrow/compute/predicate.mjs","../../node_modules/apache-arrow/compute/dataframe.mjs","../../node_modules/apache-arrow/Arrow.dom.mjs","../../node_modules/apache-arrow/io/whatwg/iterable.mjs","../../node_modules/apache-arrow/io/whatwg/reader.mjs","../../node_modules/apache-arrow/io/whatwg/writer.mjs","../../src/streamlit/ArrowTable.ts","../../src/streamlit/streamlit.ts","../../src/streamlit/WithStreamlitConnection.svelte","../../src/streamlit/setStreamlitLifecycle.ts","../../src/ImageGallery.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\nfunction is_promise(value) {\n    return !!value && (typeof value === 'object' || typeof value === 'function') && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\nfunction split_css_unit(value) {\n    const split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n    return split ? [parseFloat(split[1]), split[2] || 'px'] : [value, 'px'];\n}\nconst contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\n/**\n * Resize observer singleton.\n * One listener per element only!\n * https://groups.google.com/a/chromium.org/g/blink-dev/c/z6ienONUb5A/m/F5-VcUZtBAAJ\n */\nclass ResizeObserverSingleton {\n    constructor(options) {\n        this.options = options;\n        this._listeners = 'WeakMap' in globals ? new WeakMap() : undefined;\n    }\n    observe(element, listener) {\n        this._listeners.set(element, listener);\n        this._getObserver().observe(element, this.options);\n        return () => {\n            this._listeners.delete(element);\n            this._observer.unobserve(element); // this line can probably be removed\n        };\n    }\n    _getObserver() {\n        var _a;\n        return (_a = this._observer) !== null && _a !== void 0 ? _a : (this._observer = new ResizeObserver((entries) => {\n            var _a;\n            for (const entry of entries) {\n                ResizeObserverSingleton.entries.set(entry.target, entry);\n                (_a = this._listeners.get(entry.target)) === null || _a === void 0 ? void 0 : _a(entry);\n            }\n        }));\n    }\n}\n// Needs to be written like this to pass the tree-shake-test\nResizeObserverSingleton.entries = 'WeakMap' in globals ? new WeakMap() : undefined;\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentNode !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    if (node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction comment(content) {\n    return document.createComment(content);\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_immediate_propagation(fn) {\n    return function (event) {\n        event.stopImmediatePropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set && always_set_through_set_attribute.indexOf(key) === -1) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data_map(node, data_map) {\n    Object.keys(data_map).forEach((key) => {\n        set_custom_element_data(node, key, data_map[key]);\n    });\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction set_dynamic_element_data(tag) {\n    return (/-/.test(tag)) ? set_custom_element_data_map : set_attributes;\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction init_binding_group(group) {\n    let _inputs;\n    return {\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            _inputs.forEach(input => group.push(input));\n        },\n        /* remove */ r() {\n            _inputs.forEach(input => group.splice(group.indexOf(input), 1));\n        }\n    };\n}\nfunction init_binding_group_dynamic(group, indexes) {\n    let _group = get_binding_group(group);\n    let _inputs;\n    function get_binding_group(group) {\n        for (let i = 0; i < indexes.length; i++) {\n            group = group[indexes[i]] = group[indexes[i]] || [];\n        }\n        return group;\n    }\n    function push() {\n        _inputs.forEach(input => _group.push(input));\n    }\n    function remove() {\n        _inputs.forEach(input => _group.splice(_group.indexOf(input), 1));\n    }\n    return {\n        /* update */ u(new_indexes) {\n            indexes = new_indexes;\n            const new_group = get_binding_group(group);\n            if (new_group !== _group) {\n                remove();\n                _group = new_group;\n                push();\n            }\n        },\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            push();\n        },\n        /* remove */ r: remove\n    };\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction claim_comment(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 8, (node) => {\n        node.data = '' + data;\n        return undefined;\n    }, () => comment(data), true);\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    text.data = data;\n}\nfunction set_data_contenteditable(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable(text, data);\n    }\n    else {\n        set_data(text, data);\n    }\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value == null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value, mounting) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    if (!mounting || value !== undefined) {\n        select.selectedIndex = -1; // no option should be selected\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked');\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_iframe_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n            // make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n            // see https://github.com/sveltejs/svelte/issues/4233\n            fn();\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nconst resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'content-box' });\nconst resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'border-box' });\nconst resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'device-pixel-content-box' });\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nfunction head_selector(nodeId, head) {\n    const result = [];\n    let started = 0;\n    for (const node of head.childNodes) {\n        if (node.nodeType === 8 /* comment node */) {\n            const comment = node.textContent.trim();\n            if (comment === `HEAD_${nodeId}_END`) {\n                started -= 1;\n                result.push(node);\n            }\n            else if (comment === `HEAD_${nodeId}_START`) {\n                started += 1;\n                result.push(node);\n            }\n        }\n        else if (started > 0) {\n            result.push(node);\n        }\n    }\n    return result;\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            /** #7364  target for <template> may be provided as #document-fragment(11) */\n            else\n                this.e = element((target.nodeType === 11 ? 'TEMPLATE' : target.nodeName));\n            this.t = target.tagName !== 'TEMPLATE' ? target : target.content;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\nfunction construct_svelte_component(component, props) {\n    return new component(props);\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs#run-time-svelte-beforeupdate\n */\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs#run-time-svelte-onmount\n */\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n */\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs#run-time-svelte-ondestroy\n */\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * https://svelte.dev/docs#run-time-svelte-createeventdispatcher\n */\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-setcontext\n */\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-getcontext\n */\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs#run-time-svelte-getallcontexts\n */\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-hascontext\n */\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nlet render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    // Do not reenter flush while dirty components are updated, as this can\n    // result in an infinite loop. Instead, let the inner flush handle it.\n    // Reentrancy is ok afterwards for bindings etc.\n    if (flushidx !== 0) {\n        return;\n    }\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        try {\n            while (flushidx < dirty_components.length) {\n                const component = dirty_components[flushidx];\n                flushidx++;\n                set_current_component(component);\n                update(component.$$);\n            }\n        }\n        catch (e) {\n            // reset dirty state to not end up in a deadlocked state and then rethrow\n            dirty_components.length = 0;\n            flushidx = 0;\n            throw e;\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n */\nfunction flush_render_callbacks(fns) {\n    const filtered = [];\n    const targets = [];\n    render_callbacks.forEach((c) => fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c));\n    targets.forEach((c) => c());\n    render_callbacks = filtered;\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    const options = { direction: 'in' };\n    let config = fn(node, params, options);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config(options);\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    const options = { direction: 'out' };\n    let config = fn(node, params, options);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config(options);\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    const options = { direction: 'both' };\n    let config = fn(node, params, options);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config(options);\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    const updates = [];\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            // defer updates until all the DOM shuffling is done\n            updates.push(() => block.p(child_ctx, dirty));\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    run_all(updates);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\nconst _boolean_attributes = [\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'inert',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n];\n/**\n * List of HTML boolean attributes (e.g. `<input disabled>`).\n * Source: https://html.spec.whatwg.org/multipage/indices.html\n */\nconst boolean_attributes = new Set([..._boolean_attributes]);\n\n/** regex of all html void element names */\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules. Otherwise you may need to fix a <${name}>.`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${escape_attribute_value(style_object[key])};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n            // if the component was destroyed immediately\n            // it will update the `$$.on_destroy` reference to `null`.\n            // the destructured on_destroy may still reference to the old array\n            if (component.$$.on_destroy) {\n                component.$$.on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        flush_render_callbacks($$.after_update);\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: [],\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            if (!is_function(callback)) {\n                return noop;\n            }\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        if (!is_function(callback)) {\n            return noop;\n        }\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.59.2' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation, has_stop_immediate_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    if (has_stop_immediate_propagation)\n        modifiers.push('stopImmediatePropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_contenteditable_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable_dev(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable_dev(text, data);\n    }\n    else {\n        set_data_dev(text, data);\n    }\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        console.warn(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\nfunction construct_svelte_component_dev(component, props) {\n    const error_message = 'this={...} of <svelte:component> should specify a Svelte component.';\n    try {\n        const instance = new component(props);\n        if (!instance.$$ || !instance.$set || !instance.$on || !instance.$destroy) {\n            throw new Error(error_message);\n        }\n        return instance;\n    }\n    catch (err) {\n        const { message } = err;\n        if (typeof message === 'string' && message.indexOf('is not a constructor') !== -1) {\n            throw new Error(error_message);\n        }\n        else {\n            throw err;\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, ResizeObserverSingleton, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_iframe_resize_listener, add_location, add_render_callback, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_comment, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, comment, component_subscribe, compute_rest_props, compute_slots, construct_svelte_component, construct_svelte_component_dev, contenteditable_truthy_values, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, flush_render_callbacks, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, head_selector, identity, init, init_binding_group, init_binding_group_dynamic, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, resize_observer_border_box, resize_observer_content_box, resize_observer_device_pixel_content_box, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_custom_element_data_map, set_data, set_data_contenteditable, set_data_contenteditable_dev, set_data_dev, set_data_maybe_contenteditable, set_data_maybe_contenteditable_dev, set_dynamic_element_data, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, split_css_unit, spread, src_url_equal, start_hydrating, stop_immediate_propagation, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","/**\n * @author Toru Nagashima <https://github.com/mysticatea>\n * @copyright 2015 Toru Nagashima. All rights reserved.\n * See LICENSE file in root directory for full license.\n */\n/**\n * @typedef {object} PrivateData\n * @property {EventTarget} eventTarget The event target.\n * @property {{type:string}} event The original event object.\n * @property {number} eventPhase The current event phase.\n * @property {EventTarget|null} currentTarget The current event target.\n * @property {boolean} canceled The flag to prevent default.\n * @property {boolean} stopped The flag to stop propagation.\n * @property {boolean} immediateStopped The flag to stop propagation immediately.\n * @property {Function|null} passiveListener The listener if the current listener is passive. Otherwise this is null.\n * @property {number} timeStamp The unix time.\n * @private\n */\n\n/**\n * Private data for event wrappers.\n * @type {WeakMap<Event, PrivateData>}\n * @private\n */\nconst privateData = new WeakMap();\n\n/**\n * Cache for wrapper classes.\n * @type {WeakMap<Object, Function>}\n * @private\n */\nconst wrappers = new WeakMap();\n\n/**\n * Get private data.\n * @param {Event} event The event object to get private data.\n * @returns {PrivateData} The private data of the event.\n * @private\n */\nfunction pd(event) {\n    const retv = privateData.get(event);\n    console.assert(\n        retv != null,\n        \"'this' is expected an Event object, but got\",\n        event\n    );\n    return retv\n}\n\n/**\n * https://dom.spec.whatwg.org/#set-the-canceled-flag\n * @param data {PrivateData} private data.\n */\nfunction setCancelFlag(data) {\n    if (data.passiveListener != null) {\n        if (\n            typeof console !== \"undefined\" &&\n            typeof console.error === \"function\"\n        ) {\n            console.error(\n                \"Unable to preventDefault inside passive event listener invocation.\",\n                data.passiveListener\n            );\n        }\n        return\n    }\n    if (!data.event.cancelable) {\n        return\n    }\n\n    data.canceled = true;\n    if (typeof data.event.preventDefault === \"function\") {\n        data.event.preventDefault();\n    }\n}\n\n/**\n * @see https://dom.spec.whatwg.org/#interface-event\n * @private\n */\n/**\n * The event wrapper.\n * @constructor\n * @param {EventTarget} eventTarget The event target of this dispatching.\n * @param {Event|{type:string}} event The original event to wrap.\n */\nfunction Event(eventTarget, event) {\n    privateData.set(this, {\n        eventTarget,\n        event,\n        eventPhase: 2,\n        currentTarget: eventTarget,\n        canceled: false,\n        stopped: false,\n        immediateStopped: false,\n        passiveListener: null,\n        timeStamp: event.timeStamp || Date.now(),\n    });\n\n    // https://heycam.github.io/webidl/#Unforgeable\n    Object.defineProperty(this, \"isTrusted\", { value: false, enumerable: true });\n\n    // Define accessors\n    const keys = Object.keys(event);\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i];\n        if (!(key in this)) {\n            Object.defineProperty(this, key, defineRedirectDescriptor(key));\n        }\n    }\n}\n\n// Should be enumerable, but class methods are not enumerable.\nEvent.prototype = {\n    /**\n     * The type of this event.\n     * @type {string}\n     */\n    get type() {\n        return pd(this).event.type\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     */\n    get target() {\n        return pd(this).eventTarget\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     */\n    get currentTarget() {\n        return pd(this).currentTarget\n    },\n\n    /**\n     * @returns {EventTarget[]} The composed path of this event.\n     */\n    composedPath() {\n        const currentTarget = pd(this).currentTarget;\n        if (currentTarget == null) {\n            return []\n        }\n        return [currentTarget]\n    },\n\n    /**\n     * Constant of NONE.\n     * @type {number}\n     */\n    get NONE() {\n        return 0\n    },\n\n    /**\n     * Constant of CAPTURING_PHASE.\n     * @type {number}\n     */\n    get CAPTURING_PHASE() {\n        return 1\n    },\n\n    /**\n     * Constant of AT_TARGET.\n     * @type {number}\n     */\n    get AT_TARGET() {\n        return 2\n    },\n\n    /**\n     * Constant of BUBBLING_PHASE.\n     * @type {number}\n     */\n    get BUBBLING_PHASE() {\n        return 3\n    },\n\n    /**\n     * The target of this event.\n     * @type {number}\n     */\n    get eventPhase() {\n        return pd(this).eventPhase\n    },\n\n    /**\n     * Stop event bubbling.\n     * @returns {void}\n     */\n    stopPropagation() {\n        const data = pd(this);\n\n        data.stopped = true;\n        if (typeof data.event.stopPropagation === \"function\") {\n            data.event.stopPropagation();\n        }\n    },\n\n    /**\n     * Stop event bubbling.\n     * @returns {void}\n     */\n    stopImmediatePropagation() {\n        const data = pd(this);\n\n        data.stopped = true;\n        data.immediateStopped = true;\n        if (typeof data.event.stopImmediatePropagation === \"function\") {\n            data.event.stopImmediatePropagation();\n        }\n    },\n\n    /**\n     * The flag to be bubbling.\n     * @type {boolean}\n     */\n    get bubbles() {\n        return Boolean(pd(this).event.bubbles)\n    },\n\n    /**\n     * The flag to be cancelable.\n     * @type {boolean}\n     */\n    get cancelable() {\n        return Boolean(pd(this).event.cancelable)\n    },\n\n    /**\n     * Cancel this event.\n     * @returns {void}\n     */\n    preventDefault() {\n        setCancelFlag(pd(this));\n    },\n\n    /**\n     * The flag to indicate cancellation state.\n     * @type {boolean}\n     */\n    get defaultPrevented() {\n        return pd(this).canceled\n    },\n\n    /**\n     * The flag to be composed.\n     * @type {boolean}\n     */\n    get composed() {\n        return Boolean(pd(this).event.composed)\n    },\n\n    /**\n     * The unix time of this event.\n     * @type {number}\n     */\n    get timeStamp() {\n        return pd(this).timeStamp\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     * @deprecated\n     */\n    get srcElement() {\n        return pd(this).eventTarget\n    },\n\n    /**\n     * The flag to stop event bubbling.\n     * @type {boolean}\n     * @deprecated\n     */\n    get cancelBubble() {\n        return pd(this).stopped\n    },\n    set cancelBubble(value) {\n        if (!value) {\n            return\n        }\n        const data = pd(this);\n\n        data.stopped = true;\n        if (typeof data.event.cancelBubble === \"boolean\") {\n            data.event.cancelBubble = true;\n        }\n    },\n\n    /**\n     * The flag to indicate cancellation state.\n     * @type {boolean}\n     * @deprecated\n     */\n    get returnValue() {\n        return !pd(this).canceled\n    },\n    set returnValue(value) {\n        if (!value) {\n            setCancelFlag(pd(this));\n        }\n    },\n\n    /**\n     * Initialize this event object. But do nothing under event dispatching.\n     * @param {string} type The event type.\n     * @param {boolean} [bubbles=false] The flag to be possible to bubble up.\n     * @param {boolean} [cancelable=false] The flag to be possible to cancel.\n     * @deprecated\n     */\n    initEvent() {\n        // Do nothing.\n    },\n};\n\n// `constructor` is not enumerable.\nObject.defineProperty(Event.prototype, \"constructor\", {\n    value: Event,\n    configurable: true,\n    writable: true,\n});\n\n// Ensure `event instanceof window.Event` is `true`.\nif (typeof window !== \"undefined\" && typeof window.Event !== \"undefined\") {\n    Object.setPrototypeOf(Event.prototype, window.Event.prototype);\n\n    // Make association for wrappers.\n    wrappers.set(window.Event.prototype, Event);\n}\n\n/**\n * Get the property descriptor to redirect a given property.\n * @param {string} key Property name to define property descriptor.\n * @returns {PropertyDescriptor} The property descriptor to redirect the property.\n * @private\n */\nfunction defineRedirectDescriptor(key) {\n    return {\n        get() {\n            return pd(this).event[key]\n        },\n        set(value) {\n            pd(this).event[key] = value;\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Get the property descriptor to call a given method property.\n * @param {string} key Property name to define property descriptor.\n * @returns {PropertyDescriptor} The property descriptor to call the method property.\n * @private\n */\nfunction defineCallDescriptor(key) {\n    return {\n        value() {\n            const event = pd(this).event;\n            return event[key].apply(event, arguments)\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Define new wrapper class.\n * @param {Function} BaseEvent The base wrapper class.\n * @param {Object} proto The prototype of the original event.\n * @returns {Function} The defined wrapper class.\n * @private\n */\nfunction defineWrapper(BaseEvent, proto) {\n    const keys = Object.keys(proto);\n    if (keys.length === 0) {\n        return BaseEvent\n    }\n\n    /** CustomEvent */\n    function CustomEvent(eventTarget, event) {\n        BaseEvent.call(this, eventTarget, event);\n    }\n\n    CustomEvent.prototype = Object.create(BaseEvent.prototype, {\n        constructor: { value: CustomEvent, configurable: true, writable: true },\n    });\n\n    // Define accessors.\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i];\n        if (!(key in BaseEvent.prototype)) {\n            const descriptor = Object.getOwnPropertyDescriptor(proto, key);\n            const isFunc = typeof descriptor.value === \"function\";\n            Object.defineProperty(\n                CustomEvent.prototype,\n                key,\n                isFunc\n                    ? defineCallDescriptor(key)\n                    : defineRedirectDescriptor(key)\n            );\n        }\n    }\n\n    return CustomEvent\n}\n\n/**\n * Get the wrapper class of a given prototype.\n * @param {Object} proto The prototype of the original event to get its wrapper.\n * @returns {Function} The wrapper class.\n * @private\n */\nfunction getWrapper(proto) {\n    if (proto == null || proto === Object.prototype) {\n        return Event\n    }\n\n    let wrapper = wrappers.get(proto);\n    if (wrapper == null) {\n        wrapper = defineWrapper(getWrapper(Object.getPrototypeOf(proto)), proto);\n        wrappers.set(proto, wrapper);\n    }\n    return wrapper\n}\n\n/**\n * Wrap a given event to management a dispatching.\n * @param {EventTarget} eventTarget The event target of this dispatching.\n * @param {Object} event The event to wrap.\n * @returns {Event} The wrapper instance.\n * @private\n */\nfunction wrapEvent(eventTarget, event) {\n    const Wrapper = getWrapper(Object.getPrototypeOf(event));\n    return new Wrapper(eventTarget, event)\n}\n\n/**\n * Get the immediateStopped flag of a given event.\n * @param {Event} event The event to get.\n * @returns {boolean} The flag to stop propagation immediately.\n * @private\n */\nfunction isStopped(event) {\n    return pd(event).immediateStopped\n}\n\n/**\n * Set the current event phase of a given event.\n * @param {Event} event The event to set current target.\n * @param {number} eventPhase New event phase.\n * @returns {void}\n * @private\n */\nfunction setEventPhase(event, eventPhase) {\n    pd(event).eventPhase = eventPhase;\n}\n\n/**\n * Set the current target of a given event.\n * @param {Event} event The event to set current target.\n * @param {EventTarget|null} currentTarget New current target.\n * @returns {void}\n * @private\n */\nfunction setCurrentTarget(event, currentTarget) {\n    pd(event).currentTarget = currentTarget;\n}\n\n/**\n * Set a passive listener of a given event.\n * @param {Event} event The event to set current target.\n * @param {Function|null} passiveListener New passive listener.\n * @returns {void}\n * @private\n */\nfunction setPassiveListener(event, passiveListener) {\n    pd(event).passiveListener = passiveListener;\n}\n\n/**\n * @typedef {object} ListenerNode\n * @property {Function} listener\n * @property {1|2|3} listenerType\n * @property {boolean} passive\n * @property {boolean} once\n * @property {ListenerNode|null} next\n * @private\n */\n\n/**\n * @type {WeakMap<object, Map<string, ListenerNode>>}\n * @private\n */\nconst listenersMap = new WeakMap();\n\n// Listener types\nconst CAPTURE = 1;\nconst BUBBLE = 2;\nconst ATTRIBUTE = 3;\n\n/**\n * Check whether a given value is an object or not.\n * @param {any} x The value to check.\n * @returns {boolean} `true` if the value is an object.\n */\nfunction isObject(x) {\n    return x !== null && typeof x === \"object\" //eslint-disable-line no-restricted-syntax\n}\n\n/**\n * Get listeners.\n * @param {EventTarget} eventTarget The event target to get.\n * @returns {Map<string, ListenerNode>} The listeners.\n * @private\n */\nfunction getListeners(eventTarget) {\n    const listeners = listenersMap.get(eventTarget);\n    if (listeners == null) {\n        throw new TypeError(\n            \"'this' is expected an EventTarget object, but got another value.\"\n        )\n    }\n    return listeners\n}\n\n/**\n * Get the property descriptor for the event attribute of a given event.\n * @param {string} eventName The event name to get property descriptor.\n * @returns {PropertyDescriptor} The property descriptor.\n * @private\n */\nfunction defineEventAttributeDescriptor(eventName) {\n    return {\n        get() {\n            const listeners = getListeners(this);\n            let node = listeners.get(eventName);\n            while (node != null) {\n                if (node.listenerType === ATTRIBUTE) {\n                    return node.listener\n                }\n                node = node.next;\n            }\n            return null\n        },\n\n        set(listener) {\n            if (typeof listener !== \"function\" && !isObject(listener)) {\n                listener = null; // eslint-disable-line no-param-reassign\n            }\n            const listeners = getListeners(this);\n\n            // Traverse to the tail while removing old value.\n            let prev = null;\n            let node = listeners.get(eventName);\n            while (node != null) {\n                if (node.listenerType === ATTRIBUTE) {\n                    // Remove old value.\n                    if (prev !== null) {\n                        prev.next = node.next;\n                    } else if (node.next !== null) {\n                        listeners.set(eventName, node.next);\n                    } else {\n                        listeners.delete(eventName);\n                    }\n                } else {\n                    prev = node;\n                }\n\n                node = node.next;\n            }\n\n            // Add new value.\n            if (listener !== null) {\n                const newNode = {\n                    listener,\n                    listenerType: ATTRIBUTE,\n                    passive: false,\n                    once: false,\n                    next: null,\n                };\n                if (prev === null) {\n                    listeners.set(eventName, newNode);\n                } else {\n                    prev.next = newNode;\n                }\n            }\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Define an event attribute (e.g. `eventTarget.onclick`).\n * @param {Object} eventTargetPrototype The event target prototype to define an event attrbite.\n * @param {string} eventName The event name to define.\n * @returns {void}\n */\nfunction defineEventAttribute(eventTargetPrototype, eventName) {\n    Object.defineProperty(\n        eventTargetPrototype,\n        `on${eventName}`,\n        defineEventAttributeDescriptor(eventName)\n    );\n}\n\n/**\n * Define a custom EventTarget with event attributes.\n * @param {string[]} eventNames Event names for event attributes.\n * @returns {EventTarget} The custom EventTarget.\n * @private\n */\nfunction defineCustomEventTarget(eventNames) {\n    /** CustomEventTarget */\n    function CustomEventTarget() {\n        EventTarget.call(this);\n    }\n\n    CustomEventTarget.prototype = Object.create(EventTarget.prototype, {\n        constructor: {\n            value: CustomEventTarget,\n            configurable: true,\n            writable: true,\n        },\n    });\n\n    for (let i = 0; i < eventNames.length; ++i) {\n        defineEventAttribute(CustomEventTarget.prototype, eventNames[i]);\n    }\n\n    return CustomEventTarget\n}\n\n/**\n * EventTarget.\n *\n * - This is constructor if no arguments.\n * - This is a function which returns a CustomEventTarget constructor if there are arguments.\n *\n * For example:\n *\n *     class A extends EventTarget {}\n *     class B extends EventTarget(\"message\") {}\n *     class C extends EventTarget(\"message\", \"error\") {}\n *     class D extends EventTarget([\"message\", \"error\"]) {}\n */\nfunction EventTarget() {\n    /*eslint-disable consistent-return */\n    if (this instanceof EventTarget) {\n        listenersMap.set(this, new Map());\n        return\n    }\n    if (arguments.length === 1 && Array.isArray(arguments[0])) {\n        return defineCustomEventTarget(arguments[0])\n    }\n    if (arguments.length > 0) {\n        const types = new Array(arguments.length);\n        for (let i = 0; i < arguments.length; ++i) {\n            types[i] = arguments[i];\n        }\n        return defineCustomEventTarget(types)\n    }\n    throw new TypeError(\"Cannot call a class as a function\")\n    /*eslint-enable consistent-return */\n}\n\n// Should be enumerable, but class methods are not enumerable.\nEventTarget.prototype = {\n    /**\n     * Add a given listener to this event target.\n     * @param {string} eventName The event name to add.\n     * @param {Function} listener The listener to add.\n     * @param {boolean|{capture?:boolean,passive?:boolean,once?:boolean}} [options] The options for this listener.\n     * @returns {void}\n     */\n    addEventListener(eventName, listener, options) {\n        if (listener == null) {\n            return\n        }\n        if (typeof listener !== \"function\" && !isObject(listener)) {\n            throw new TypeError(\"'listener' should be a function or an object.\")\n        }\n\n        const listeners = getListeners(this);\n        const optionsIsObj = isObject(options);\n        const capture = optionsIsObj\n            ? Boolean(options.capture)\n            : Boolean(options);\n        const listenerType = capture ? CAPTURE : BUBBLE;\n        const newNode = {\n            listener,\n            listenerType,\n            passive: optionsIsObj && Boolean(options.passive),\n            once: optionsIsObj && Boolean(options.once),\n            next: null,\n        };\n\n        // Set it as the first node if the first node is null.\n        let node = listeners.get(eventName);\n        if (node === undefined) {\n            listeners.set(eventName, newNode);\n            return\n        }\n\n        // Traverse to the tail while checking duplication..\n        let prev = null;\n        while (node != null) {\n            if (\n                node.listener === listener &&\n                node.listenerType === listenerType\n            ) {\n                // Should ignore duplication.\n                return\n            }\n            prev = node;\n            node = node.next;\n        }\n\n        // Add it.\n        prev.next = newNode;\n    },\n\n    /**\n     * Remove a given listener from this event target.\n     * @param {string} eventName The event name to remove.\n     * @param {Function} listener The listener to remove.\n     * @param {boolean|{capture?:boolean,passive?:boolean,once?:boolean}} [options] The options for this listener.\n     * @returns {void}\n     */\n    removeEventListener(eventName, listener, options) {\n        if (listener == null) {\n            return\n        }\n\n        const listeners = getListeners(this);\n        const capture = isObject(options)\n            ? Boolean(options.capture)\n            : Boolean(options);\n        const listenerType = capture ? CAPTURE : BUBBLE;\n\n        let prev = null;\n        let node = listeners.get(eventName);\n        while (node != null) {\n            if (\n                node.listener === listener &&\n                node.listenerType === listenerType\n            ) {\n                if (prev !== null) {\n                    prev.next = node.next;\n                } else if (node.next !== null) {\n                    listeners.set(eventName, node.next);\n                } else {\n                    listeners.delete(eventName);\n                }\n                return\n            }\n\n            prev = node;\n            node = node.next;\n        }\n    },\n\n    /**\n     * Dispatch a given event.\n     * @param {Event|{type:string}} event The event to dispatch.\n     * @returns {boolean} `false` if canceled.\n     */\n    dispatchEvent(event) {\n        if (event == null || typeof event.type !== \"string\") {\n            throw new TypeError('\"event.type\" should be a string.')\n        }\n\n        // If listeners aren't registered, terminate.\n        const listeners = getListeners(this);\n        const eventName = event.type;\n        let node = listeners.get(eventName);\n        if (node == null) {\n            return true\n        }\n\n        // Since we cannot rewrite several properties, so wrap object.\n        const wrappedEvent = wrapEvent(this, event);\n\n        // This doesn't process capturing phase and bubbling phase.\n        // This isn't participating in a tree.\n        let prev = null;\n        while (node != null) {\n            // Remove this listener if it's once\n            if (node.once) {\n                if (prev !== null) {\n                    prev.next = node.next;\n                } else if (node.next !== null) {\n                    listeners.set(eventName, node.next);\n                } else {\n                    listeners.delete(eventName);\n                }\n            } else {\n                prev = node;\n            }\n\n            // Call this listener\n            setPassiveListener(\n                wrappedEvent,\n                node.passive ? node.listener : null\n            );\n            if (typeof node.listener === \"function\") {\n                try {\n                    node.listener.call(this, wrappedEvent);\n                } catch (err) {\n                    if (\n                        typeof console !== \"undefined\" &&\n                        typeof console.error === \"function\"\n                    ) {\n                        console.error(err);\n                    }\n                }\n            } else if (\n                node.listenerType !== ATTRIBUTE &&\n                typeof node.listener.handleEvent === \"function\"\n            ) {\n                node.listener.handleEvent(wrappedEvent);\n            }\n\n            // Break if `event.stopImmediatePropagation` was called.\n            if (isStopped(wrappedEvent)) {\n                break\n            }\n\n            node = node.next;\n        }\n        setPassiveListener(wrappedEvent, null);\n        setEventPhase(wrappedEvent, 0);\n        setCurrentTarget(wrappedEvent, null);\n\n        return !wrappedEvent.defaultPrevented\n    },\n};\n\n// `constructor` is not enumerable.\nObject.defineProperty(EventTarget.prototype, \"constructor\", {\n    value: EventTarget,\n    configurable: true,\n    writable: true,\n});\n\n// Ensure `eventTarget instanceof window.EventTarget` is `true`.\nif (\n    typeof window !== \"undefined\" &&\n    typeof window.EventTarget !== \"undefined\"\n) {\n    Object.setPrototypeOf(EventTarget.prototype, window.EventTarget.prototype);\n}\n\nexport default EventTarget;\nexport { defineEventAttribute, EventTarget };\n//# sourceMappingURL=event-target-shim.mjs.map\n","/// @file\n/// @addtogroup flatbuffers_javascript_api\n/// @{\n/// @cond FLATBUFFERS_INTERNAL\n\n/**\n * @fileoverview\n *\n * Need to suppress 'global this' error so the Node.js export line doesn't cause\n * closure compile to error out.\n * @suppress {globalThis}\n */\n\n/**\n * @const\n * @namespace\n */\nvar flatbuffers = {};\n\n/**\n * @typedef {number}\n */\nflatbuffers.Offset;\n\n/**\n * @typedef {{\n *   bb: flatbuffers.ByteBuffer,\n *   bb_pos: number\n * }}\n */\nflatbuffers.Table;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_SHORT = 2;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_INT = 4;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.FILE_IDENTIFIER_LENGTH = 4;\n\n/**\n * @enum {number}\n */\nflatbuffers.Encoding = {\n  UTF8_BYTES: 1,\n  UTF16_STRING: 2\n};\n\n/**\n * @type {Int32Array}\n * @const\n */\nflatbuffers.int32 = new Int32Array(2);\n\n/**\n * @type {Float32Array}\n * @const\n */\nflatbuffers.float32 = new Float32Array(flatbuffers.int32.buffer);\n\n/**\n * @type {Float64Array}\n * @const\n */\nflatbuffers.float64 = new Float64Array(flatbuffers.int32.buffer);\n\n/**\n * @type {boolean}\n * @const\n */\nflatbuffers.isLittleEndian = new Uint16Array(new Uint8Array([1, 0]).buffer)[0] === 1;\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @constructor\n * @param {number} low\n * @param {number} high\n */\nflatbuffers.Long = function(low, high) {\n  /**\n   * @type {number}\n   * @const\n   */\n  this.low = low | 0;\n\n  /**\n   * @type {number}\n   * @const\n   */\n  this.high = high | 0;\n};\n\n/**\n * @param {number} low\n * @param {number} high\n * @returns {flatbuffers.Long}\n */\nflatbuffers.Long.create = function(low, high) {\n  // Special-case zero to avoid GC overhead for default values\n  return low == 0 && high == 0 ? flatbuffers.Long.ZERO : new flatbuffers.Long(low, high);\n};\n\n/**\n * @returns {number}\n */\nflatbuffers.Long.prototype.toFloat64 = function() {\n  return (this.low >>> 0) + this.high * 0x100000000;\n};\n\n/**\n * @param {flatbuffers.Long} other\n * @returns {boolean}\n */\nflatbuffers.Long.prototype.equals = function(other) {\n  return this.low == other.low && this.high == other.high;\n};\n\n/**\n * @type {flatbuffers.Long}\n * @const\n */\nflatbuffers.Long.ZERO = new flatbuffers.Long(0, 0);\n\n/// @endcond\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a FlatBufferBuilder.\n *\n * @constructor\n * @param {number=} opt_initial_size\n */\nflatbuffers.Builder = function(opt_initial_size) {\n  if (!opt_initial_size) {\n    var initial_size = 1024;\n  } else {\n    var initial_size = opt_initial_size;\n  }\n\n  /**\n   * @type {flatbuffers.ByteBuffer}\n   * @private\n   */\n  this.bb = flatbuffers.ByteBuffer.allocate(initial_size);\n\n  /**\n   * Remaining space in the ByteBuffer.\n   *\n   * @type {number}\n   * @private\n   */\n  this.space = initial_size;\n\n  /**\n   * Minimum alignment encountered so far.\n   *\n   * @type {number}\n   * @private\n   */\n  this.minalign = 1;\n\n  /**\n   * The vtable for the current table.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtable = null;\n\n  /**\n   * The amount of fields we're actually using.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vtable_in_use = 0;\n\n  /**\n   * Whether we are currently serializing a table.\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.isNested = false;\n\n  /**\n   * Starting offset of the current struct/table.\n   *\n   * @type {number}\n   * @private\n   */\n  this.object_start = 0;\n\n  /**\n   * List of offsets of all vtables.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtables = [];\n\n  /**\n   * For the current vector being built.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vector_num_elems = 0;\n\n  /**\n   * False omits default values from the serialized data\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.force_defaults = false;\n};\n\nflatbuffers.Builder.prototype.clear = function() {\n  this.bb.clear();\n  this.space = this.bb.capacity();\n  this.minalign = 1;\n  this.vtable = null;\n  this.vtable_in_use = 0;\n  this.isNested = false;\n  this.object_start = 0;\n  this.vtables = [];\n  this.vector_num_elems = 0;\n  this.force_defaults = false;\n};\n\n/**\n * In order to save space, fields that are set to their default value\n * don't get serialized into the buffer. Forcing defaults provides a\n * way to manually disable this optimization.\n *\n * @param {boolean} forceDefaults true always serializes default values\n */\nflatbuffers.Builder.prototype.forceDefaults = function(forceDefaults) {\n  this.force_defaults = forceDefaults;\n};\n\n/**\n * Get the ByteBuffer representing the FlatBuffer. Only call this after you've\n * called finish(). The actual data starts at the ByteBuffer's current position,\n * not necessarily at 0.\n *\n * @returns {flatbuffers.ByteBuffer}\n */\nflatbuffers.Builder.prototype.dataBuffer = function() {\n  return this.bb;\n};\n\n/**\n * Get the bytes representing the FlatBuffer. Only call this after you've\n * called finish().\n *\n * @returns {Uint8Array}\n */\nflatbuffers.Builder.prototype.asUint8Array = function() {\n  return this.bb.bytes().subarray(this.bb.position(), this.bb.position() + this.offset());\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Prepare to write an element of `size` after `additional_bytes` have been\n * written, e.g. if you write a string, you need to align such the int length\n * field is aligned to 4 bytes, and the string data follows it directly. If all\n * you need to do is alignment, `additional_bytes` will be 0.\n *\n * @param {number} size This is the of the new element to write\n * @param {number} additional_bytes The padding size\n */\nflatbuffers.Builder.prototype.prep = function(size, additional_bytes) {\n  // Track the biggest thing we've ever aligned to.\n  if (size > this.minalign) {\n    this.minalign = size;\n  }\n\n  // Find the amount of alignment needed such that `size` is properly\n  // aligned after `additional_bytes`\n  var align_size = ((~(this.bb.capacity() - this.space + additional_bytes)) + 1) & (size - 1);\n\n  // Reallocate the buffer if needed.\n  while (this.space < align_size + size + additional_bytes) {\n    var old_buf_size = this.bb.capacity();\n    this.bb = flatbuffers.Builder.growByteBuffer(this.bb);\n    this.space += this.bb.capacity() - old_buf_size;\n  }\n\n  this.pad(align_size);\n};\n\n/**\n * @param {number} byte_size\n */\nflatbuffers.Builder.prototype.pad = function(byte_size) {\n  for (var i = 0; i < byte_size; i++) {\n    this.bb.writeInt8(--this.space, 0);\n  }\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt8 = function(value) {\n  this.bb.writeInt8(this.space -= 1, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt16 = function(value) {\n  this.bb.writeInt16(this.space -= 2, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt32 = function(value) {\n  this.bb.writeInt32(this.space -= 4, value);\n};\n\n/**\n * @param {flatbuffers.Long} value\n */\nflatbuffers.Builder.prototype.writeInt64 = function(value) {\n  this.bb.writeInt64(this.space -= 8, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat32 = function(value) {\n  this.bb.writeFloat32(this.space -= 4, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat64 = function(value) {\n  this.bb.writeFloat64(this.space -= 8, value);\n};\n/// @endcond\n\n/**\n * Add an `int8` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int8` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt8 = function(value) {\n  this.prep(1, 0);\n  this.writeInt8(value);\n};\n\n/**\n * Add an `int16` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int16` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt16 = function(value) {\n  this.prep(2, 0);\n  this.writeInt16(value);\n};\n\n/**\n * Add an `int32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt32 = function(value) {\n  this.prep(4, 0);\n  this.writeInt32(value);\n};\n\n/**\n * Add an `int64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {flatbuffers.Long} value The `int64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt64 = function(value) {\n  this.prep(8, 0);\n  this.writeInt64(value);\n};\n\n/**\n * Add a `float32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat32 = function(value) {\n  this.prep(4, 0);\n  this.writeFloat32(value);\n};\n\n/**\n * Add a `float64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat64 = function(value) {\n  this.prep(8, 0);\n  this.writeFloat64(value);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt8 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt8(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt16 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt16(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Long} value\n * @param {flatbuffers.Long} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || !value.equals(defaultValue)) {\n    this.addInt64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldOffset = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addOffset(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structs are stored inline, so nothing additional is being added. `d` is always 0.\n *\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldStruct = function(voffset, value, defaultValue) {\n  if (value != defaultValue) {\n    this.nested(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structures are always stored inline, they need to be created right\n * where they're used.  You'll get this assertion failure if you\n * created it elsewhere.\n *\n * @param {flatbuffers.Offset} obj The offset of the created object\n */\nflatbuffers.Builder.prototype.nested = function(obj) {\n  if (obj != this.offset()) {\n    throw new Error('FlatBuffers: struct must be serialized inline.');\n  }\n};\n\n/**\n * Should not be creating any other object, string or vector\n * while an object is being constructed\n */\nflatbuffers.Builder.prototype.notNested = function() {\n  if (this.isNested) {\n    throw new Error('FlatBuffers: object serialization must not be nested.');\n  }\n};\n\n/**\n * Set the current vtable at `voffset` to the current location in the buffer.\n *\n * @param {number} voffset\n */\nflatbuffers.Builder.prototype.slot = function(voffset) {\n  this.vtable[voffset] = this.offset();\n};\n\n/**\n * @returns {flatbuffers.Offset} Offset relative to the end of the buffer.\n */\nflatbuffers.Builder.prototype.offset = function() {\n  return this.bb.capacity() - this.space;\n};\n\n/**\n * Doubles the size of the backing ByteBuffer and copies the old data towards\n * the end of the new buffer (since we build the buffer backwards).\n *\n * @param {flatbuffers.ByteBuffer} bb The current buffer with the existing data\n * @returns {flatbuffers.ByteBuffer} A new byte buffer with the old data copied\n * to it. The data is located at the end of the buffer.\n *\n * uint8Array.set() formally takes {Array<number>|ArrayBufferView}, so to pass\n * it a uint8Array we need to suppress the type check:\n * @suppress {checkTypes}\n */\nflatbuffers.Builder.growByteBuffer = function(bb) {\n  var old_buf_size = bb.capacity();\n\n  // Ensure we don't grow beyond what fits in an int.\n  if (old_buf_size & 0xC0000000) {\n    throw new Error('FlatBuffers: cannot grow buffer beyond 2 gigabytes.');\n  }\n\n  var new_buf_size = old_buf_size << 1;\n  var nbb = flatbuffers.ByteBuffer.allocate(new_buf_size);\n  nbb.setPosition(new_buf_size - old_buf_size);\n  nbb.bytes().set(bb.bytes(), new_buf_size - old_buf_size);\n  return nbb;\n};\n/// @endcond\n\n/**\n * Adds on offset, relative to where it will be written.\n *\n * @param {flatbuffers.Offset} offset The offset to add.\n */\nflatbuffers.Builder.prototype.addOffset = function(offset) {\n  this.prep(flatbuffers.SIZEOF_INT, 0); // Ensure alignment is already done.\n  this.writeInt32(this.offset() - offset + flatbuffers.SIZEOF_INT);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Start encoding a new object in the buffer.  Users will not usually need to\n * call this directly. The FlatBuffers compiler will generate helper methods\n * that call this method internally.\n *\n * @param {number} numfields\n */\nflatbuffers.Builder.prototype.startObject = function(numfields) {\n  this.notNested();\n  if (this.vtable == null) {\n    this.vtable = [];\n  }\n  this.vtable_in_use = numfields;\n  for (var i = 0; i < numfields; i++) {\n    this.vtable[i] = 0; // This will push additional elements as needed\n  }\n  this.isNested = true;\n  this.object_start = this.offset();\n};\n\n/**\n * Finish off writing the object that is under construction.\n *\n * @returns {flatbuffers.Offset} The offset to the object inside `dataBuffer`\n */\nflatbuffers.Builder.prototype.endObject = function() {\n  if (this.vtable == null || !this.isNested) {\n    throw new Error('FlatBuffers: endObject called without startObject');\n  }\n\n  this.addInt32(0);\n  var vtableloc = this.offset();\n\n  // Trim trailing zeroes.\n  var i = this.vtable_in_use - 1;\n  for (; i >= 0 && this.vtable[i] == 0; i--) {}\n  var trimmed_size = i + 1;\n\n  // Write out the current vtable.\n  for (; i >= 0; i--) {\n    // Offset relative to the start of the table.\n    this.addInt16(this.vtable[i] != 0 ? vtableloc - this.vtable[i] : 0);\n  }\n\n  var standard_fields = 2; // The fields below:\n  this.addInt16(vtableloc - this.object_start);\n  var len = (trimmed_size + standard_fields) * flatbuffers.SIZEOF_SHORT;\n  this.addInt16(len);\n\n  // Search for an existing vtable that matches the current one.\n  var existing_vtable = 0;\n  var vt1 = this.space;\nouter_loop:\n  for (i = 0; i < this.vtables.length; i++) {\n    var vt2 = this.bb.capacity() - this.vtables[i];\n    if (len == this.bb.readInt16(vt2)) {\n      for (var j = flatbuffers.SIZEOF_SHORT; j < len; j += flatbuffers.SIZEOF_SHORT) {\n        if (this.bb.readInt16(vt1 + j) != this.bb.readInt16(vt2 + j)) {\n          continue outer_loop;\n        }\n      }\n      existing_vtable = this.vtables[i];\n      break;\n    }\n  }\n\n  if (existing_vtable) {\n    // Found a match:\n    // Remove the current vtable.\n    this.space = this.bb.capacity() - vtableloc;\n\n    // Point table to existing vtable.\n    this.bb.writeInt32(this.space, existing_vtable - vtableloc);\n  } else {\n    // No match:\n    // Add the location of the current vtable to the list of vtables.\n    this.vtables.push(this.offset());\n\n    // Point table to current vtable.\n    this.bb.writeInt32(this.bb.capacity() - vtableloc, this.offset() - vtableloc);\n  }\n\n  this.isNested = false;\n  return vtableloc;\n};\n/// @endcond\n\n/**\n * Finalize a buffer, poiting to the given `root_table`.\n *\n * @param {flatbuffers.Offset} root_table\n * @param {string=} opt_file_identifier\n */\nflatbuffers.Builder.prototype.finish = function(root_table, opt_file_identifier) {\n  if (opt_file_identifier) {\n    var file_identifier = opt_file_identifier;\n    this.prep(this.minalign, flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH);\n    if (file_identifier.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n      throw new Error('FlatBuffers: file identifier must be length ' +\n        flatbuffers.FILE_IDENTIFIER_LENGTH);\n    }\n    for (var i = flatbuffers.FILE_IDENTIFIER_LENGTH - 1; i >= 0; i--) {\n      this.writeInt8(file_identifier.charCodeAt(i));\n    }\n  }\n  this.prep(this.minalign, flatbuffers.SIZEOF_INT);\n  this.addOffset(root_table);\n  this.bb.setPosition(this.space);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * This checks a required field has been set in a given table that has\n * just been constructed.\n *\n * @param {flatbuffers.Offset} table\n * @param {number} field\n */\nflatbuffers.Builder.prototype.requiredField = function(table, field) {\n  var table_start = this.bb.capacity() - table;\n  var vtable_start = table_start - this.bb.readInt32(table_start);\n  var ok = this.bb.readInt16(vtable_start + field) != 0;\n\n  // If this fails, the caller will show what field needs to be set.\n  if (!ok) {\n    throw new Error('FlatBuffers: field ' + field + ' must be set');\n  }\n};\n\n/**\n * Start a new array/vector of objects.  Users usually will not call\n * this directly. The FlatBuffers compiler will create a start/end\n * method for vector types in generated code.\n *\n * @param {number} elem_size The size of each element in the array\n * @param {number} num_elems The number of elements in the array\n * @param {number} alignment The alignment of the array\n */\nflatbuffers.Builder.prototype.startVector = function(elem_size, num_elems, alignment) {\n  this.notNested();\n  this.vector_num_elems = num_elems;\n  this.prep(flatbuffers.SIZEOF_INT, elem_size * num_elems);\n  this.prep(alignment, elem_size * num_elems); // Just in case alignment > int.\n};\n\n/**\n * Finish off the creation of an array and all its elements. The array must be\n * created with `startVector`.\n *\n * @returns {flatbuffers.Offset} The offset at which the newly created array\n * starts.\n */\nflatbuffers.Builder.prototype.endVector = function() {\n  this.writeInt32(this.vector_num_elems);\n  return this.offset();\n};\n/// @endcond\n\n/**\n * Encode the string `s` in the buffer using UTF-8. If a Uint8Array is passed\n * instead of a string, it is assumed to contain valid UTF-8 encoded data.\n *\n * @param {string|Uint8Array} s The string to encode\n * @return {flatbuffers.Offset} The offset in the buffer where the encoded string starts\n */\nflatbuffers.Builder.prototype.createString = function(s) {\n  if (s instanceof Uint8Array) {\n    var utf8 = s;\n  } else {\n    var utf8 = [];\n    var i = 0;\n\n    while (i < s.length) {\n      var codePoint;\n\n      // Decode UTF-16\n      var a = s.charCodeAt(i++);\n      if (a < 0xD800 || a >= 0xDC00) {\n        codePoint = a;\n      } else {\n        var b = s.charCodeAt(i++);\n        codePoint = (a << 10) + b + (0x10000 - (0xD800 << 10) - 0xDC00);\n      }\n\n      // Encode UTF-8\n      if (codePoint < 0x80) {\n        utf8.push(codePoint);\n      } else {\n        if (codePoint < 0x800) {\n          utf8.push(((codePoint >> 6) & 0x1F) | 0xC0);\n        } else {\n          if (codePoint < 0x10000) {\n            utf8.push(((codePoint >> 12) & 0x0F) | 0xE0);\n          } else {\n            utf8.push(\n              ((codePoint >> 18) & 0x07) | 0xF0,\n              ((codePoint >> 12) & 0x3F) | 0x80);\n          }\n          utf8.push(((codePoint >> 6) & 0x3F) | 0x80);\n        }\n        utf8.push((codePoint & 0x3F) | 0x80);\n      }\n    }\n  }\n\n  this.addInt8(0);\n  this.startVector(1, utf8.length, 1);\n  this.bb.setPosition(this.space -= utf8.length);\n  for (var i = 0, offset = this.space, bytes = this.bb.bytes(); i < utf8.length; i++) {\n    bytes[offset++] = utf8[i];\n  }\n  return this.endVector();\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {flatbuffers.Long}\n */\nflatbuffers.Builder.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n////////////////////////////////////////////////////////////////////////////////\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Create a new ByteBuffer with a given array of bytes (`Uint8Array`).\n *\n * @constructor\n * @param {Uint8Array} bytes\n */\nflatbuffers.ByteBuffer = function(bytes) {\n  /**\n   * @type {Uint8Array}\n   * @private\n   */\n  this.bytes_ = bytes;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.position_ = 0;\n};\n\n/**\n * Create and allocate a new ByteBuffer with a given size.\n *\n * @param {number} byte_size\n * @returns {flatbuffers.ByteBuffer}\n */\nflatbuffers.ByteBuffer.allocate = function(byte_size) {\n  return new flatbuffers.ByteBuffer(new Uint8Array(byte_size));\n};\n\nflatbuffers.ByteBuffer.prototype.clear = function() {\n  this.position_ = 0;\n};\n\n/**\n * Get the underlying `Uint8Array`.\n *\n * @returns {Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.bytes = function() {\n  return this.bytes_;\n};\n\n/**\n * Get the buffer's position.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.position = function() {\n  return this.position_;\n};\n\n/**\n * Set the buffer's position.\n *\n * @param {number} position\n */\nflatbuffers.ByteBuffer.prototype.setPosition = function(position) {\n  this.position_ = position;\n};\n\n/**\n * Get the buffer's capacity.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.capacity = function() {\n  return this.bytes_.length;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt8 = function(offset) {\n  return this.readUint8(offset) << 24 >> 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint8 = function(offset) {\n  return this.bytes_[offset];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt16 = function(offset) {\n  return this.readUint16(offset) << 16 >> 16;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint16 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt32 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8 | this.bytes_[offset + 2] << 16 | this.bytes_[offset + 3] << 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint32 = function(offset) {\n  return this.readInt32(offset) >>> 0;\n};\n\n/**\n * @param {number} offset\n * @returns {flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readInt64 = function(offset) {\n  return new flatbuffers.Long(this.readInt32(offset), this.readInt32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readUint64 = function(offset) {\n  return new flatbuffers.Long(this.readUint32(offset), this.readUint32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat32 = function(offset) {\n  flatbuffers.int32[0] = this.readInt32(offset);\n  return flatbuffers.float32[0];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat64 = function(offset) {\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1] = this.readInt32(offset);\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0] = this.readInt32(offset + 4);\n  return flatbuffers.float64[0];\n};\n\n/**\n * @param {number} offset\n * @param {number|boolean} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt8 = function(offset, value) {\n  this.bytes_[offset] = /** @type {number} */(value);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint8 = function(offset, value) {\n  this.bytes_[offset] = value;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt16 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint16 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt32 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n  this.bytes_[offset + 2] = value >> 16;\n  this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint32 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n    this.bytes_[offset + 2] = value >> 16;\n    this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt64 = function(offset, value) {\n  this.writeInt32(offset, value.low);\n  this.writeInt32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint64 = function(offset, value) {\n    this.writeUint32(offset, value.low);\n    this.writeUint32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat32 = function(offset, value) {\n  flatbuffers.float32[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[0]);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat64 = function(offset, value) {\n  flatbuffers.float64[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1]);\n  this.writeInt32(offset + 4, flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0]);\n};\n\n/**\n * Return the file identifier.   Behavior is undefined for FlatBuffers whose\n * schema does not include a file_identifier (likely points at padding or the\n * start of a the root vtable).\n * @returns {string}\n */\nflatbuffers.ByteBuffer.prototype.getBufferIdentifier = function() {\n  if (this.bytes_.length < this.position_ + flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error(\n        'FlatBuffers: ByteBuffer is too short to contain an identifier.');\n  }\n  var result = \"\";\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    result += String.fromCharCode(\n        this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i));\n  }\n  return result;\n};\n\n/**\n * Look up a field in the vtable, return an offset into the object, or 0 if the\n * field is not present.\n *\n * @param {number} bb_pos\n * @param {number} vtable_offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__offset = function(bb_pos, vtable_offset) {\n  var vtable = bb_pos - this.readInt32(bb_pos);\n  return vtable_offset < this.readInt16(vtable) ? this.readInt16(vtable + vtable_offset) : 0;\n};\n\n/**\n * Initialize any Table-derived type to point to the union at the given offset.\n *\n * @param {flatbuffers.Table} t\n * @param {number} offset\n * @returns {flatbuffers.Table}\n */\nflatbuffers.ByteBuffer.prototype.__union = function(t, offset) {\n  t.bb_pos = offset + this.readInt32(offset);\n  t.bb = this;\n  return t;\n};\n\n/**\n * Create a JavaScript string from UTF-8 data stored inside the FlatBuffer.\n * This allocates a new string and converts to wide chars upon each access.\n *\n * To avoid the conversion to UTF-16, pass flatbuffers.Encoding.UTF8_BYTES as\n * the \"optionalEncoding\" argument. This is useful for avoiding conversion to\n * and from UTF-16 when the data will just be packaged back up in another\n * FlatBuffer later on.\n *\n * @param {number} offset\n * @param {flatbuffers.Encoding=} opt_encoding Defaults to UTF16_STRING\n * @returns {string|Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.__string = function(offset, opt_encoding) {\n  offset += this.readInt32(offset);\n\n  var length = this.readInt32(offset);\n  var result = '';\n  var i = 0;\n\n  offset += flatbuffers.SIZEOF_INT;\n\n  if (opt_encoding === flatbuffers.Encoding.UTF8_BYTES) {\n    return this.bytes_.subarray(offset, offset + length);\n  }\n\n  while (i < length) {\n    var codePoint;\n\n    // Decode UTF-8\n    var a = this.readUint8(offset + i++);\n    if (a < 0xC0) {\n      codePoint = a;\n    } else {\n      var b = this.readUint8(offset + i++);\n      if (a < 0xE0) {\n        codePoint =\n          ((a & 0x1F) << 6) |\n          (b & 0x3F);\n      } else {\n        var c = this.readUint8(offset + i++);\n        if (a < 0xF0) {\n          codePoint =\n            ((a & 0x0F) << 12) |\n            ((b & 0x3F) << 6) |\n            (c & 0x3F);\n        } else {\n          var d = this.readUint8(offset + i++);\n          codePoint =\n            ((a & 0x07) << 18) |\n            ((b & 0x3F) << 12) |\n            ((c & 0x3F) << 6) |\n            (d & 0x3F);\n        }\n      }\n    }\n\n    // Encode UTF-16\n    if (codePoint < 0x10000) {\n      result += String.fromCharCode(codePoint);\n    } else {\n      codePoint -= 0x10000;\n      result += String.fromCharCode(\n        (codePoint >> 10) + 0xD800,\n        (codePoint & ((1 << 10) - 1)) + 0xDC00);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Retrieve the relative offset stored at \"offset\"\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__indirect = function(offset) {\n  return offset + this.readInt32(offset);\n};\n\n/**\n * Get the start of data of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector = function(offset) {\n  return offset + this.readInt32(offset) + flatbuffers.SIZEOF_INT; // data starts after the length\n};\n\n/**\n * Get the length of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector_len = function(offset) {\n  return this.readInt32(offset + this.readInt32(offset));\n};\n\n/**\n * @param {string} ident\n * @returns {boolean}\n */\nflatbuffers.ByteBuffer.prototype.__has_identifier = function(ident) {\n  if (ident.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error('FlatBuffers: file identifier must be length ' +\n                    flatbuffers.FILE_IDENTIFIER_LENGTH);\n  }\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    if (ident.charCodeAt(i) != this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n\n// Exports for Node.js and RequireJS\nexport { flatbuffers };\n\n/// @endcond\n/// @}\n","'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n/** @interface */\nfunction Decoder() {}\nDecoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point, or |finished|.\n   */\n  handler: function(stream, bite) {}\n};\n\n/** @interface */\nfunction Encoder() {}\nEncoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of code points being encoded.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit, or |finished|.\n   */\n  handler: function(stream, code_point) {}\n};\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexport {TextEncoder, TextDecoder};\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { toUint8Array } from './buffer';\nimport { TextDecoder as TextDecoderPolyfill, TextEncoder as TextEncoderPolyfill, } from 'text-encoding-utf-8';\n/** @ignore @suppress {missingRequire} */\nconst _Buffer = typeof Buffer === 'function' ? Buffer : null;\n/** @ignore */\nconst useNativeEncoders = typeof TextDecoder === 'function' && typeof TextEncoder === 'function';\n/** @ignore */\nexport const decodeUtf8 = ((TextDecoder) => {\n    if (useNativeEncoders || !_Buffer) {\n        const decoder = new TextDecoder('utf-8');\n        return (buffer) => decoder.decode(buffer);\n    }\n    return (input) => {\n        const { buffer, byteOffset, length } = toUint8Array(input);\n        return _Buffer.from(buffer, byteOffset, length).toString();\n    };\n})(typeof TextDecoder !== 'undefined' ? TextDecoder : TextDecoderPolyfill);\n/** @ignore */\nexport const encodeUtf8 = ((TextEncoder) => {\n    if (useNativeEncoders || !_Buffer) {\n        const encoder = new TextEncoder();\n        return (value) => encoder.encode(value);\n    }\n    return (input = '') => toUint8Array(_Buffer.from(input, 'utf8'));\n})(typeof TextEncoder !== 'undefined' ? TextEncoder : TextEncoderPolyfill);\n\n//# sourceMappingURL=utf8.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport streamAdapters from './adapters';\n/** @ignore */\nexport const ITERATOR_DONE = Object.freeze({ done: true, value: void (0) });\n/** @ignore */\nexport class ArrowJSON {\n    // @ts-ignore\n    constructor(_json) {\n        this._json = _json;\n    }\n    get schema() { return this._json['schema']; }\n    get batches() { return (this._json['batches'] || []); }\n    get dictionaries() { return (this._json['dictionaries'] || []); }\n}\n/** @ignore */\nexport class ReadableInterop {\n    tee() {\n        return this._getDOMStream().tee();\n    }\n    pipe(writable, options) {\n        return this._getNodeStream().pipe(writable, options);\n    }\n    pipeTo(writable, options) { return this._getDOMStream().pipeTo(writable, options); }\n    pipeThrough(duplex, options) {\n        return this._getDOMStream().pipeThrough(duplex, options);\n    }\n    _getDOMStream() {\n        return this._DOMStream || (this._DOMStream = this.toDOMStream());\n    }\n    _getNodeStream() {\n        return this._nodeStream || (this._nodeStream = this.toNodeStream());\n    }\n}\n/** @ignore */\nexport class AsyncQueue extends ReadableInterop {\n    constructor() {\n        super();\n        this._values = [];\n        this.resolvers = [];\n        this._closedPromise = new Promise((r) => this._closedPromiseResolve = r);\n    }\n    get closed() { return this._closedPromise; }\n    async cancel(reason) { await this.return(reason); }\n    write(value) {\n        if (this._ensureOpen()) {\n            this.resolvers.length <= 0\n                ? (this._values.push(value))\n                : (this.resolvers.shift().resolve({ done: false, value }));\n        }\n    }\n    abort(value) {\n        if (this._closedPromiseResolve) {\n            this.resolvers.length <= 0\n                ? (this._error = { error: value })\n                : (this.resolvers.shift().reject({ done: true, value }));\n        }\n    }\n    close() {\n        if (this._closedPromiseResolve) {\n            const { resolvers } = this;\n            while (resolvers.length > 0) {\n                resolvers.shift().resolve(ITERATOR_DONE);\n            }\n            this._closedPromiseResolve();\n            this._closedPromiseResolve = undefined;\n        }\n    }\n    [Symbol.asyncIterator]() { return this; }\n    toDOMStream(options) {\n        return streamAdapters.toDOMStream((this._closedPromiseResolve || this._error)\n            ? this\n            : this._values, options);\n    }\n    toNodeStream(options) {\n        return streamAdapters.toNodeStream((this._closedPromiseResolve || this._error)\n            ? this\n            : this._values, options);\n    }\n    async throw(_) { await this.abort(_); return ITERATOR_DONE; }\n    async return(_) { await this.close(); return ITERATOR_DONE; }\n    async read(size) { return (await this.next(size, 'read')).value; }\n    async peek(size) { return (await this.next(size, 'peek')).value; }\n    next(..._args) {\n        if (this._values.length > 0) {\n            return Promise.resolve({ done: false, value: this._values.shift() });\n        }\n        else if (this._error) {\n            return Promise.reject({ done: true, value: this._error.error });\n        }\n        else if (!this._closedPromiseResolve) {\n            return Promise.resolve(ITERATOR_DONE);\n        }\n        else {\n            return new Promise((resolve, reject) => {\n                this.resolvers.push({ resolve, reject });\n            });\n        }\n    }\n    _ensureOpen() {\n        if (this._closedPromiseResolve) {\n            return true;\n        }\n        throw new Error(`${this} is closed`);\n    }\n}\n\n//# sourceMappingURL=interfaces.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { ReadableInterop } from '../io/interfaces';\n/** @ignore */\nconst [BigIntCtor, BigIntAvailable] = (() => {\n    const BigIntUnavailableError = () => { throw new Error('BigInt is not available in this environment'); };\n    function BigIntUnavailable() { throw BigIntUnavailableError(); }\n    BigIntUnavailable.asIntN = () => { throw BigIntUnavailableError(); };\n    BigIntUnavailable.asUintN = () => { throw BigIntUnavailableError(); };\n    return typeof BigInt !== 'undefined' ? [BigInt, true] : [BigIntUnavailable, false];\n})();\n/** @ignore */\nconst [BigInt64ArrayCtor, BigInt64ArrayAvailable] = (() => {\n    const BigInt64ArrayUnavailableError = () => { throw new Error('BigInt64Array is not available in this environment'); };\n    class BigInt64ArrayUnavailable {\n        static get BYTES_PER_ELEMENT() { return 8; }\n        static of() { throw BigInt64ArrayUnavailableError(); }\n        static from() { throw BigInt64ArrayUnavailableError(); }\n        constructor() { throw BigInt64ArrayUnavailableError(); }\n    }\n    return typeof BigInt64Array !== 'undefined' ? [BigInt64Array, true] : [BigInt64ArrayUnavailable, false];\n})();\n/** @ignore */\nconst [BigUint64ArrayCtor, BigUint64ArrayAvailable] = (() => {\n    const BigUint64ArrayUnavailableError = () => { throw new Error('BigUint64Array is not available in this environment'); };\n    class BigUint64ArrayUnavailable {\n        static get BYTES_PER_ELEMENT() { return 8; }\n        static of() { throw BigUint64ArrayUnavailableError(); }\n        static from() { throw BigUint64ArrayUnavailableError(); }\n        constructor() { throw BigUint64ArrayUnavailableError(); }\n    }\n    return typeof BigUint64Array !== 'undefined' ? [BigUint64Array, true] : [BigUint64ArrayUnavailable, false];\n})();\nexport { BigIntCtor as BigInt, BigIntAvailable };\nexport { BigInt64ArrayCtor as BigInt64Array, BigInt64ArrayAvailable };\nexport { BigUint64ArrayCtor as BigUint64Array, BigUint64ArrayAvailable };\n/** @ignore */ const isNumber = (x) => typeof x === 'number';\n/** @ignore */ const isBoolean = (x) => typeof x === 'boolean';\n/** @ignore */ const isFunction = (x) => typeof x === 'function';\n/** @ignore */\nexport const isObject = (x) => x != null && Object(x) === x;\n/** @ignore */\nexport const isPromise = (x) => {\n    return isObject(x) && isFunction(x.then);\n};\n/** @ignore */\nexport const isObservable = (x) => {\n    return isObject(x) && isFunction(x.subscribe);\n};\n/** @ignore */\nexport const isIterable = (x) => {\n    return isObject(x) && isFunction(x[Symbol.iterator]);\n};\n/** @ignore */\nexport const isAsyncIterable = (x) => {\n    return isObject(x) && isFunction(x[Symbol.asyncIterator]);\n};\n/** @ignore */\nexport const isArrowJSON = (x) => {\n    return isObject(x) && isObject(x['schema']);\n};\n/** @ignore */\nexport const isArrayLike = (x) => {\n    return isObject(x) && isNumber(x['length']);\n};\n/** @ignore */\nexport const isIteratorResult = (x) => {\n    return isObject(x) && ('done' in x) && ('value' in x);\n};\n/** @ignore */\nexport const isUnderlyingSink = (x) => {\n    return isObject(x) &&\n        isFunction(x['abort']) &&\n        isFunction(x['close']) &&\n        isFunction(x['start']) &&\n        isFunction(x['write']);\n};\n/** @ignore */\nexport const isFileHandle = (x) => {\n    return isObject(x) && isFunction(x['stat']) && isNumber(x['fd']);\n};\n/** @ignore */\nexport const isFSReadStream = (x) => {\n    return isReadableNodeStream(x) && isNumber(x['bytesRead']);\n};\n/** @ignore */\nexport const isFetchResponse = (x) => {\n    return isObject(x) && isReadableDOMStream(x['body']);\n};\n/** @ignore */\nexport const isWritableDOMStream = (x) => {\n    return isObject(x) &&\n        isFunction(x['abort']) &&\n        isFunction(x['getWriter']) &&\n        !(x instanceof ReadableInterop);\n};\n/** @ignore */\nexport const isReadableDOMStream = (x) => {\n    return isObject(x) &&\n        isFunction(x['cancel']) &&\n        isFunction(x['getReader']) &&\n        !(x instanceof ReadableInterop);\n};\n/** @ignore */\nexport const isWritableNodeStream = (x) => {\n    return isObject(x) &&\n        isFunction(x['end']) &&\n        isFunction(x['write']) &&\n        isBoolean(x['writable']) &&\n        !(x instanceof ReadableInterop);\n};\n/** @ignore */\nexport const isReadableNodeStream = (x) => {\n    return isObject(x) &&\n        isFunction(x['read']) &&\n        isFunction(x['pipe']) &&\n        isBoolean(x['readable']) &&\n        !(x instanceof ReadableInterop);\n};\n\n//# sourceMappingURL=compat.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { flatbuffers } from 'flatbuffers';\nimport { encodeUtf8 } from '../util/utf8';\nvar ByteBuffer = flatbuffers.ByteBuffer;\nimport { isPromise, isIterable, isAsyncIterable, isIteratorResult, BigInt64Array, BigUint64Array } from './compat';\n/** @ignore */\nconst SharedArrayBuf = (typeof SharedArrayBuffer !== 'undefined' ? SharedArrayBuffer : ArrayBuffer);\n/** @ignore */\nfunction collapseContiguousByteRanges(chunks) {\n    let result = chunks[0] ? [chunks[0]] : [];\n    let xOffset, yOffset, xLen, yLen;\n    for (let x, y, i = 0, j = 0, n = chunks.length; ++i < n;) {\n        x = result[j];\n        y = chunks[i];\n        // continue if x and y don't share the same underlying ArrayBuffer, or if x isn't before y\n        if (!x || !y || x.buffer !== y.buffer || y.byteOffset < x.byteOffset) {\n            y && (result[++j] = y);\n            continue;\n        }\n        ({ byteOffset: xOffset, byteLength: xLen } = x);\n        ({ byteOffset: yOffset, byteLength: yLen } = y);\n        // continue if the byte ranges of x and y aren't contiguous\n        if ((xOffset + xLen) < yOffset || (yOffset + yLen) < xOffset) {\n            y && (result[++j] = y);\n            continue;\n        }\n        result[j] = new Uint8Array(x.buffer, xOffset, yOffset - xOffset + yLen);\n    }\n    return result;\n}\n/** @ignore */\nexport function memcpy(target, source, targetByteOffset = 0, sourceByteLength = source.byteLength) {\n    const targetByteLength = target.byteLength;\n    const dst = new Uint8Array(target.buffer, target.byteOffset, targetByteLength);\n    const src = new Uint8Array(source.buffer, source.byteOffset, Math.min(sourceByteLength, targetByteLength));\n    dst.set(src, targetByteOffset);\n    return target;\n}\n/** @ignore */\nexport function joinUint8Arrays(chunks, size) {\n    // collapse chunks that share the same underlying ArrayBuffer and whose byte ranges overlap,\n    // to avoid unnecessarily copying the bytes to do this buffer join. This is a common case during\n    // streaming, where we may be reading partial byte ranges out of the same underlying ArrayBuffer\n    let result = collapseContiguousByteRanges(chunks);\n    let byteLength = result.reduce((x, b) => x + b.byteLength, 0);\n    let source, sliced, buffer;\n    let offset = 0, index = -1, length = Math.min(size || Infinity, byteLength);\n    for (let n = result.length; ++index < n;) {\n        source = result[index];\n        sliced = source.subarray(0, Math.min(source.length, length - offset));\n        if (length <= (offset + sliced.length)) {\n            if (sliced.length < source.length) {\n                result[index] = source.subarray(sliced.length);\n            }\n            else if (sliced.length === source.length) {\n                index++;\n            }\n            buffer ? memcpy(buffer, sliced, offset) : (buffer = sliced);\n            break;\n        }\n        memcpy(buffer || (buffer = new Uint8Array(length)), sliced, offset);\n        offset += sliced.length;\n    }\n    return [buffer || new Uint8Array(0), result.slice(index), byteLength - (buffer ? buffer.byteLength : 0)];\n}\nexport function toArrayBufferView(ArrayBufferViewCtor, input) {\n    let value = isIteratorResult(input) ? input.value : input;\n    if (value instanceof ArrayBufferViewCtor) {\n        if (ArrayBufferViewCtor === Uint8Array) {\n            // Node's `Buffer` class passes the `instanceof Uint8Array` check, but we need\n            // a real Uint8Array, since Buffer#slice isn't the same as Uint8Array#slice :/\n            return new ArrayBufferViewCtor(value.buffer, value.byteOffset, value.byteLength);\n        }\n        return value;\n    }\n    if (!value) {\n        return new ArrayBufferViewCtor(0);\n    }\n    if (typeof value === 'string') {\n        value = encodeUtf8(value);\n    }\n    if (value instanceof ArrayBuffer) {\n        return new ArrayBufferViewCtor(value);\n    }\n    if (value instanceof SharedArrayBuf) {\n        return new ArrayBufferViewCtor(value);\n    }\n    if (value instanceof ByteBuffer) {\n        return toArrayBufferView(ArrayBufferViewCtor, value.bytes());\n    }\n    return !ArrayBuffer.isView(value) ? ArrayBufferViewCtor.from(value) : value.byteLength <= 0 ? new ArrayBufferViewCtor(0)\n        : new ArrayBufferViewCtor(value.buffer, value.byteOffset, value.byteLength / ArrayBufferViewCtor.BYTES_PER_ELEMENT);\n}\n/** @ignore */ export const toInt8Array = (input) => toArrayBufferView(Int8Array, input);\n/** @ignore */ export const toInt16Array = (input) => toArrayBufferView(Int16Array, input);\n/** @ignore */ export const toInt32Array = (input) => toArrayBufferView(Int32Array, input);\n/** @ignore */ export const toBigInt64Array = (input) => toArrayBufferView(BigInt64Array, input);\n/** @ignore */ export const toUint8Array = (input) => toArrayBufferView(Uint8Array, input);\n/** @ignore */ export const toUint16Array = (input) => toArrayBufferView(Uint16Array, input);\n/** @ignore */ export const toUint32Array = (input) => toArrayBufferView(Uint32Array, input);\n/** @ignore */ export const toBigUint64Array = (input) => toArrayBufferView(BigUint64Array, input);\n/** @ignore */ export const toFloat32Array = (input) => toArrayBufferView(Float32Array, input);\n/** @ignore */ export const toFloat64Array = (input) => toArrayBufferView(Float64Array, input);\n/** @ignore */ export const toUint8ClampedArray = (input) => toArrayBufferView(Uint8ClampedArray, input);\n/** @ignore */\nconst pump = (iterator) => { iterator.next(); return iterator; };\n/** @ignore */\nexport function* toArrayBufferViewIterator(ArrayCtor, source) {\n    const wrap = function* (x) { yield x; };\n    const buffers = (typeof source === 'string') ? wrap(source)\n        : (ArrayBuffer.isView(source)) ? wrap(source)\n            : (source instanceof ArrayBuffer) ? wrap(source)\n                : (source instanceof SharedArrayBuf) ? wrap(source)\n                    : !isIterable(source) ? wrap(source) : source;\n    yield* pump((function* (it) {\n        let r = null;\n        do {\n            r = it.next(yield toArrayBufferView(ArrayCtor, r));\n        } while (!r.done);\n    })(buffers[Symbol.iterator]()));\n}\n/** @ignore */ export const toInt8ArrayIterator = (input) => toArrayBufferViewIterator(Int8Array, input);\n/** @ignore */ export const toInt16ArrayIterator = (input) => toArrayBufferViewIterator(Int16Array, input);\n/** @ignore */ export const toInt32ArrayIterator = (input) => toArrayBufferViewIterator(Int32Array, input);\n/** @ignore */ export const toUint8ArrayIterator = (input) => toArrayBufferViewIterator(Uint8Array, input);\n/** @ignore */ export const toUint16ArrayIterator = (input) => toArrayBufferViewIterator(Uint16Array, input);\n/** @ignore */ export const toUint32ArrayIterator = (input) => toArrayBufferViewIterator(Uint32Array, input);\n/** @ignore */ export const toFloat32ArrayIterator = (input) => toArrayBufferViewIterator(Float32Array, input);\n/** @ignore */ export const toFloat64ArrayIterator = (input) => toArrayBufferViewIterator(Float64Array, input);\n/** @ignore */ export const toUint8ClampedArrayIterator = (input) => toArrayBufferViewIterator(Uint8ClampedArray, input);\n/** @ignore */\nexport async function* toArrayBufferViewAsyncIterator(ArrayCtor, source) {\n    // if a Promise, unwrap the Promise and iterate the resolved value\n    if (isPromise(source)) {\n        return yield* toArrayBufferViewAsyncIterator(ArrayCtor, await source);\n    }\n    const wrap = async function* (x) { yield await x; };\n    const emit = async function* (source) {\n        yield* pump((function* (it) {\n            let r = null;\n            do {\n                r = it.next(yield r && r.value);\n            } while (!r.done);\n        })(source[Symbol.iterator]()));\n    };\n    const buffers = (typeof source === 'string') ? wrap(source) // if string, wrap in an AsyncIterableIterator\n        : (ArrayBuffer.isView(source)) ? wrap(source) // if TypedArray, wrap in an AsyncIterableIterator\n            : (source instanceof ArrayBuffer) ? wrap(source) // if ArrayBuffer, wrap in an AsyncIterableIterator\n                : (source instanceof SharedArrayBuf) ? wrap(source) // if SharedArrayBuffer, wrap in an AsyncIterableIterator\n                    : isIterable(source) ? emit(source) // If Iterable, wrap in an AsyncIterableIterator and compose the `next` values\n                        : !isAsyncIterable(source) ? wrap(source) // If not an AsyncIterable, treat as a sentinel and wrap in an AsyncIterableIterator\n                            : source; // otherwise if AsyncIterable, use it\n    yield* pump((async function* (it) {\n        let r = null;\n        do {\n            r = await it.next(yield toArrayBufferView(ArrayCtor, r));\n        } while (!r.done);\n    })(buffers[Symbol.asyncIterator]()));\n}\n/** @ignore */ export const toInt8ArrayAsyncIterator = (input) => toArrayBufferViewAsyncIterator(Int8Array, input);\n/** @ignore */ export const toInt16ArrayAsyncIterator = (input) => toArrayBufferViewAsyncIterator(Int16Array, input);\n/** @ignore */ export const toInt32ArrayAsyncIterator = (input) => toArrayBufferViewAsyncIterator(Int32Array, input);\n/** @ignore */ export const toUint8ArrayAsyncIterator = (input) => toArrayBufferViewAsyncIterator(Uint8Array, input);\n/** @ignore */ export const toUint16ArrayAsyncIterator = (input) => toArrayBufferViewAsyncIterator(Uint16Array, input);\n/** @ignore */ export const toUint32ArrayAsyncIterator = (input) => toArrayBufferViewAsyncIterator(Uint32Array, input);\n/** @ignore */ export const toFloat32ArrayAsyncIterator = (input) => toArrayBufferViewAsyncIterator(Float32Array, input);\n/** @ignore */ export const toFloat64ArrayAsyncIterator = (input) => toArrayBufferViewAsyncIterator(Float64Array, input);\n/** @ignore */ export const toUint8ClampedArrayAsyncIterator = (input) => toArrayBufferViewAsyncIterator(Uint8ClampedArray, input);\n/** @ignore */\nexport function rebaseValueOffsets(offset, length, valueOffsets) {\n    // If we have a non-zero offset, create a new offsets array with the values\n    // shifted by the start offset, such that the new start offset is 0\n    if (offset !== 0) {\n        valueOffsets = valueOffsets.slice(0, length + 1);\n        for (let i = -1; ++i <= length;) {\n            valueOffsets[i] += offset;\n        }\n    }\n    return valueOffsets;\n}\n/** @ignore */\nexport function compareArrayLike(a, b) {\n    let i = 0, n = a.length;\n    if (n !== b.length) {\n        return false;\n    }\n    if (n > 0) {\n        do {\n            if (a[i] !== b[i]) {\n                return false;\n            }\n        } while (++i < n);\n    }\n    return true;\n}\n\n//# sourceMappingURL=buffer.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { toUint8Array, joinUint8Arrays, toUint8ArrayIterator, toUint8ArrayAsyncIterator } from '../util/buffer';\n/** @ignore */\nexport default {\n    fromIterable(source) {\n        return pump(fromIterable(source));\n    },\n    fromAsyncIterable(source) {\n        return pump(fromAsyncIterable(source));\n    },\n    fromDOMStream(source) {\n        return pump(fromDOMStream(source));\n    },\n    fromNodeStream(stream) {\n        return pump(fromNodeStream(stream));\n    },\n    // @ts-ignore\n    toDOMStream(source, options) {\n        throw new Error(`\"toDOMStream\" not available in this environment`);\n    },\n    // @ts-ignore\n    toNodeStream(source, options) {\n        throw new Error(`\"toNodeStream\" not available in this environment`);\n    },\n};\n/** @ignore */\nconst pump = (iterator) => { iterator.next(); return iterator; };\n/** @ignore */\nfunction* fromIterable(source) {\n    let done, threw = false;\n    let buffers = [], buffer;\n    let cmd, size, bufferLength = 0;\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n    // Yield so the caller can inject the read command before creating the source Iterator\n    ({ cmd, size } = yield null);\n    // initialize the iterator\n    let it = toUint8ArrayIterator(source)[Symbol.iterator]();\n    try {\n        do {\n            // read the next value\n            ({ done, value: buffer } = isNaN(size - bufferLength) ?\n                it.next(undefined) : it.next(size - bufferLength));\n            // if chunk is not null or empty, push it onto the queue\n            if (!done && buffer.byteLength > 0) {\n                buffers.push(buffer);\n                bufferLength += buffer.byteLength;\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    }\n    catch (e) {\n        (threw = true) && (typeof it.throw === 'function') && (it.throw(e));\n    }\n    finally {\n        (threw === false) && (typeof it.return === 'function') && (it.return());\n    }\n}\n/** @ignore */\nasync function* fromAsyncIterable(source) {\n    let done, threw = false;\n    let buffers = [], buffer;\n    let cmd, size, bufferLength = 0;\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n    // Yield so the caller can inject the read command before creating the source AsyncIterator\n    ({ cmd, size } = yield null);\n    // initialize the iterator\n    let it = toUint8ArrayAsyncIterator(source)[Symbol.asyncIterator]();\n    try {\n        do {\n            // read the next value\n            ({ done, value: buffer } = isNaN(size - bufferLength)\n                ? await it.next(undefined)\n                : await it.next(size - bufferLength));\n            // if chunk is not null or empty, push it onto the queue\n            if (!done && buffer.byteLength > 0) {\n                buffers.push(buffer);\n                bufferLength += buffer.byteLength;\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    }\n    catch (e) {\n        (threw = true) && (typeof it.throw === 'function') && (await it.throw(e));\n    }\n    finally {\n        (threw === false) && (typeof it.return === 'function') && (await it.return());\n    }\n}\n// All this manual Uint8Array chunk management can be avoided if/when engines\n// add support for ArrayBuffer.transfer() or ArrayBuffer.prototype.realloc():\n// https://github.com/domenic/proposal-arraybuffer-transfer\n/** @ignore */\nasync function* fromDOMStream(source) {\n    let done = false, threw = false;\n    let buffers = [], buffer;\n    let cmd, size, bufferLength = 0;\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n    // Yield so the caller can inject the read command before we establish the ReadableStream lock\n    ({ cmd, size } = yield null);\n    // initialize the reader and lock the stream\n    let it = new AdaptiveByteReader(source);\n    try {\n        do {\n            // read the next value\n            ({ done, value: buffer } = isNaN(size - bufferLength)\n                ? await it['read'](undefined)\n                : await it['read'](size - bufferLength));\n            // if chunk is not null or empty, push it onto the queue\n            if (!done && buffer.byteLength > 0) {\n                buffers.push(toUint8Array(buffer));\n                bufferLength += buffer.byteLength;\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    }\n    catch (e) {\n        (threw = true) && (await it['cancel'](e));\n    }\n    finally {\n        (threw === false) ? (await it['cancel']())\n            : source['locked'] && it.releaseLock();\n    }\n}\n/** @ignore */\nclass AdaptiveByteReader {\n    constructor(source) {\n        this.source = source;\n        this.byobReader = null;\n        this.defaultReader = null;\n        try {\n            this.supportsBYOB = !!(this.reader = this.getBYOBReader());\n        }\n        catch (e) {\n            this.supportsBYOB = !!!(this.reader = this.getDefaultReader());\n        }\n    }\n    get closed() {\n        return this.reader ? this.reader['closed'].catch(() => { }) : Promise.resolve();\n    }\n    releaseLock() {\n        if (this.reader) {\n            this.reader.releaseLock();\n        }\n        this.reader = this.byobReader = this.defaultReader = null;\n    }\n    async cancel(reason) {\n        const { reader, source } = this;\n        reader && (await reader['cancel'](reason).catch(() => { }));\n        source && (source['locked'] && this.releaseLock());\n    }\n    async read(size) {\n        if (size === 0) {\n            return { done: this.reader == null, value: new Uint8Array(0) };\n        }\n        const result = !this.supportsBYOB || typeof size !== 'number'\n            ? await this.getDefaultReader().read()\n            : await this.readFromBYOBReader(size);\n        !result.done && (result.value = toUint8Array(result));\n        return result;\n    }\n    getDefaultReader() {\n        if (this.byobReader) {\n            this.releaseLock();\n        }\n        if (!this.defaultReader) {\n            this.defaultReader = this.source['getReader']();\n            // We have to catch and swallow errors here to avoid uncaught promise rejection exceptions\n            // that seem to be raised when we call `releaseLock()` on this reader. I'm still mystified\n            // about why these errors are raised, but I'm sure there's some important spec reason that\n            // I haven't considered. I hate to employ such an anti-pattern here, but it seems like the\n            // only solution in this case :/\n            this.defaultReader['closed'].catch(() => { });\n        }\n        return (this.reader = this.defaultReader);\n    }\n    getBYOBReader() {\n        if (this.defaultReader) {\n            this.releaseLock();\n        }\n        if (!this.byobReader) {\n            this.byobReader = this.source['getReader']({ mode: 'byob' });\n            // We have to catch and swallow errors here to avoid uncaught promise rejection exceptions\n            // that seem to be raised when we call `releaseLock()` on this reader. I'm still mystified\n            // about why these errors are raised, but I'm sure there's some important spec reason that\n            // I haven't considered. I hate to employ such an anti-pattern here, but it seems like the\n            // only solution in this case :/\n            this.byobReader['closed'].catch(() => { });\n        }\n        return (this.reader = this.byobReader);\n    }\n    // This strategy plucked from the example in the streams spec:\n    // https://streams.spec.whatwg.org/#example-manual-read-bytes\n    async readFromBYOBReader(size) {\n        return await readInto(this.getBYOBReader(), new ArrayBuffer(size), 0, size);\n    }\n}\n/** @ignore */\nasync function readInto(reader, buffer, offset, size) {\n    if (offset >= size) {\n        return { done: false, value: new Uint8Array(buffer, 0, size) };\n    }\n    const { done, value } = await reader.read(new Uint8Array(buffer, offset, size - offset));\n    if (((offset += value.byteLength) < size) && !done) {\n        return await readInto(reader, value.buffer, offset, size);\n    }\n    return { done, value: new Uint8Array(value.buffer, 0, offset) };\n}\n/** @ignore */\nconst onEvent = (stream, event) => {\n    let handler = (_) => resolve([event, _]);\n    let resolve;\n    return [event, handler, new Promise((r) => (resolve = r) && stream['once'](event, handler))];\n};\n/** @ignore */\nasync function* fromNodeStream(stream) {\n    let events = [];\n    let event = 'error';\n    let done = false, err = null;\n    let cmd, size, bufferLength = 0;\n    let buffers = [], buffer;\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n    // Yield so the caller can inject the read command before we\n    // add the listener for the source stream's 'readable' event.\n    ({ cmd, size } = yield null);\n    // ignore stdin if it's a TTY\n    if (stream['isTTY']) {\n        return yield new Uint8Array(0);\n    }\n    try {\n        // initialize the stream event handlers\n        events[0] = onEvent(stream, 'end');\n        events[1] = onEvent(stream, 'error');\n        do {\n            events[2] = onEvent(stream, 'readable');\n            // wait on the first message event from the stream\n            [event, err] = await Promise.race(events.map((x) => x[2]));\n            // if the stream emitted an Error, rethrow it\n            if (event === 'error') {\n                break;\n            }\n            if (!(done = event === 'end')) {\n                // If the size is NaN, request to read everything in the stream's internal buffer\n                if (!isFinite(size - bufferLength)) {\n                    buffer = toUint8Array(stream['read'](undefined));\n                }\n                else {\n                    buffer = toUint8Array(stream['read'](size - bufferLength));\n                    // If the byteLength is 0, then the requested amount is more than the stream has\n                    // in its internal buffer. In this case the stream needs a \"kick\" to tell it to\n                    // continue emitting readable events, so request to read everything the stream\n                    // has in its internal buffer right now.\n                    if (buffer.byteLength < (size - bufferLength)) {\n                        buffer = toUint8Array(stream['read'](undefined));\n                    }\n                }\n                // if chunk is not null or empty, push it onto the queue\n                if (buffer.byteLength > 0) {\n                    buffers.push(buffer);\n                    bufferLength += buffer.byteLength;\n                }\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    }\n    finally {\n        await cleanup(events, event === 'error' ? err : null);\n    }\n    function cleanup(events, err) {\n        buffer = buffers = null;\n        return new Promise(async (resolve, reject) => {\n            for (const [evt, fn] of events) {\n                stream['off'](evt, fn);\n            }\n            try {\n                // Some stream implementations don't call the destroy callback,\n                // because it's really a node-internal API. Just calling `destroy`\n                // here should be enough to conform to the ReadableStream contract\n                const destroy = stream['destroy'];\n                destroy && destroy.call(stream, err);\n                err = undefined;\n            }\n            catch (e) {\n                err = e || err;\n            }\n            finally {\n                err != null ? reject(err) : resolve();\n            }\n        });\n    }\n}\n\n//# sourceMappingURL=adapters.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nexport class AbstractVector {\n}\nexport { AbstractVector as Vector };\n\n//# sourceMappingURL=vector.mjs.map\n","/* tslint:disable:class-name */\n/**\n * @enum {number}\n */\nexport var org;\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                let MetadataVersion;\n                (function (MetadataVersion) {\n                    /**\n                     * 0.1.0\n                     */\n                    MetadataVersion[MetadataVersion[\"V1\"] = 0] = \"V1\";\n                    /**\n                     * 0.2.0\n                     */\n                    MetadataVersion[MetadataVersion[\"V2\"] = 1] = \"V2\";\n                    /**\n                     * 0.3.0 -> 0.7.1\n                     */\n                    MetadataVersion[MetadataVersion[\"V3\"] = 2] = \"V3\";\n                    /**\n                     * >= 0.8.0\n                     */\n                    MetadataVersion[MetadataVersion[\"V4\"] = 3] = \"V4\";\n                })(MetadataVersion = flatbuf.MetadataVersion || (flatbuf.MetadataVersion = {}));\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * @enum {number}\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                let UnionMode;\n                (function (UnionMode) {\n                    UnionMode[UnionMode[\"Sparse\"] = 0] = \"Sparse\";\n                    UnionMode[UnionMode[\"Dense\"] = 1] = \"Dense\";\n                })(UnionMode = flatbuf.UnionMode || (flatbuf.UnionMode = {}));\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * @enum {number}\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                let Precision;\n                (function (Precision) {\n                    Precision[Precision[\"HALF\"] = 0] = \"HALF\";\n                    Precision[Precision[\"SINGLE\"] = 1] = \"SINGLE\";\n                    Precision[Precision[\"DOUBLE\"] = 2] = \"DOUBLE\";\n                })(Precision = flatbuf.Precision || (flatbuf.Precision = {}));\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * @enum {number}\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                let DateUnit;\n                (function (DateUnit) {\n                    DateUnit[DateUnit[\"DAY\"] = 0] = \"DAY\";\n                    DateUnit[DateUnit[\"MILLISECOND\"] = 1] = \"MILLISECOND\";\n                })(DateUnit = flatbuf.DateUnit || (flatbuf.DateUnit = {}));\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * @enum {number}\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                let TimeUnit;\n                (function (TimeUnit) {\n                    TimeUnit[TimeUnit[\"SECOND\"] = 0] = \"SECOND\";\n                    TimeUnit[TimeUnit[\"MILLISECOND\"] = 1] = \"MILLISECOND\";\n                    TimeUnit[TimeUnit[\"MICROSECOND\"] = 2] = \"MICROSECOND\";\n                    TimeUnit[TimeUnit[\"NANOSECOND\"] = 3] = \"NANOSECOND\";\n                })(TimeUnit = flatbuf.TimeUnit || (flatbuf.TimeUnit = {}));\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * @enum {number}\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                let IntervalUnit;\n                (function (IntervalUnit) {\n                    IntervalUnit[IntervalUnit[\"YEAR_MONTH\"] = 0] = \"YEAR_MONTH\";\n                    IntervalUnit[IntervalUnit[\"DAY_TIME\"] = 1] = \"DAY_TIME\";\n                })(IntervalUnit = flatbuf.IntervalUnit || (flatbuf.IntervalUnit = {}));\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * ----------------------------------------------------------------------\n * Top-level Type value, enabling extensible type-specific metadata. We can\n * add new logical types to Type without breaking backwards compatibility\n *\n * @enum {number}\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                let Type;\n                (function (Type) {\n                    Type[Type[\"NONE\"] = 0] = \"NONE\";\n                    Type[Type[\"Null\"] = 1] = \"Null\";\n                    Type[Type[\"Int\"] = 2] = \"Int\";\n                    Type[Type[\"FloatingPoint\"] = 3] = \"FloatingPoint\";\n                    Type[Type[\"Binary\"] = 4] = \"Binary\";\n                    Type[Type[\"Utf8\"] = 5] = \"Utf8\";\n                    Type[Type[\"Bool\"] = 6] = \"Bool\";\n                    Type[Type[\"Decimal\"] = 7] = \"Decimal\";\n                    Type[Type[\"Date\"] = 8] = \"Date\";\n                    Type[Type[\"Time\"] = 9] = \"Time\";\n                    Type[Type[\"Timestamp\"] = 10] = \"Timestamp\";\n                    Type[Type[\"Interval\"] = 11] = \"Interval\";\n                    Type[Type[\"List\"] = 12] = \"List\";\n                    Type[Type[\"Struct_\"] = 13] = \"Struct_\";\n                    Type[Type[\"Union\"] = 14] = \"Union\";\n                    Type[Type[\"FixedSizeBinary\"] = 15] = \"FixedSizeBinary\";\n                    Type[Type[\"FixedSizeList\"] = 16] = \"FixedSizeList\";\n                    Type[Type[\"Map\"] = 17] = \"Map\";\n                    Type[Type[\"Duration\"] = 18] = \"Duration\";\n                    Type[Type[\"LargeBinary\"] = 19] = \"LargeBinary\";\n                    Type[Type[\"LargeUtf8\"] = 20] = \"LargeUtf8\";\n                    Type[Type[\"LargeList\"] = 21] = \"LargeList\";\n                })(Type = flatbuf.Type || (flatbuf.Type = {}));\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * ----------------------------------------------------------------------\n * Endianness of the platform producing the data\n *\n * @enum {number}\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                let Endianness;\n                (function (Endianness) {\n                    Endianness[Endianness[\"Little\"] = 0] = \"Little\";\n                    Endianness[Endianness[\"Big\"] = 1] = \"Big\";\n                })(Endianness = flatbuf.Endianness || (flatbuf.Endianness = {}));\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * These are stored in the flatbuffer in the Type union below\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Null {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Null\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Null= obj\n                     * @returns Null\n                     */\n                    static getRootAsNull(bb, obj) {\n                        return (obj || new Null).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startNull(builder) {\n                        builder.startObject(0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endNull(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createNull(builder) {\n                        Null.startNull(builder);\n                        return Null.endNull(builder);\n                    }\n                }\n                flatbuf.Null = Null;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * A Struct_ in the flatbuffer metadata is the same as an Arrow Struct\n * (according to the physical memory layout). We used Struct_ here as\n * Struct is a reserved word in Flatbuffers\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Struct_ {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Struct_\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Struct_= obj\n                     * @returns Struct_\n                     */\n                    static getRootAsStruct_(bb, obj) {\n                        return (obj || new Struct_).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startStruct_(builder) {\n                        builder.startObject(0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endStruct_(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createStruct_(builder) {\n                        Struct_.startStruct_(builder);\n                        return Struct_.endStruct_(builder);\n                    }\n                }\n                flatbuf.Struct_ = Struct_;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class List {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns List\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param List= obj\n                     * @returns List\n                     */\n                    static getRootAsList(bb, obj) {\n                        return (obj || new List).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startList(builder) {\n                        builder.startObject(0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endList(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createList(builder) {\n                        List.startList(builder);\n                        return List.endList(builder);\n                    }\n                }\n                flatbuf.List = List;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * Same as List, but with 64-bit offsets, allowing to represent\n * extremely large data values.\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class LargeList {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns LargeList\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param LargeList= obj\n                     * @returns LargeList\n                     */\n                    static getRootAsLargeList(bb, obj) {\n                        return (obj || new LargeList).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startLargeList(builder) {\n                        builder.startObject(0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endLargeList(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createLargeList(builder) {\n                        LargeList.startLargeList(builder);\n                        return LargeList.endLargeList(builder);\n                    }\n                }\n                flatbuf.LargeList = LargeList;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class FixedSizeList {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns FixedSizeList\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param FixedSizeList= obj\n                     * @returns FixedSizeList\n                     */\n                    static getRootAsFixedSizeList(bb, obj) {\n                        return (obj || new FixedSizeList).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * Number of list items per value\n                     *\n                     * @returns number\n                     */\n                    listSize() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startFixedSizeList(builder) {\n                        builder.startObject(1);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number listSize\n                     */\n                    static addListSize(builder, listSize) {\n                        builder.addFieldInt32(0, listSize, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endFixedSizeList(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createFixedSizeList(builder, listSize) {\n                        FixedSizeList.startFixedSizeList(builder);\n                        FixedSizeList.addListSize(builder, listSize);\n                        return FixedSizeList.endFixedSizeList(builder);\n                    }\n                }\n                flatbuf.FixedSizeList = FixedSizeList;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * A Map is a logical nested type that is represented as\n *\n * List<entry: Struct<key: K, value: V>>\n *\n * In this layout, the keys and values are each respectively contiguous. We do\n * not constrain the key and value types, so the application is responsible\n * for ensuring that the keys are hashable and unique. Whether the keys are sorted\n * may be set in the metadata for this field\n *\n * In a Field with Map type, the Field has a child Struct field, which then\n * has two children: key type and the second the value type. The names of the\n * child fields may be respectively \"entry\", \"key\", and \"value\", but this is\n * not enforced\n *\n * Map\n *   - child[0] entry: Struct\n *     - child[0] key: K\n *     - child[1] value: V\n *\n * Neither the \"entry\" field nor the \"key\" field may be nullable.\n *\n * The metadata is structured so that Arrow systems without special handling\n * for Map can make Map an alias for List. The \"layout\" attribute for the Map\n * field must have the same contents as a List.\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Map {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Map\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Map= obj\n                     * @returns Map\n                     */\n                    static getRootAsMap(bb, obj) {\n                        return (obj || new Map).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * Set to true if the keys within each value are sorted\n                     *\n                     * @returns boolean\n                     */\n                    keysSorted() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startMap(builder) {\n                        builder.startObject(1);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param boolean keysSorted\n                     */\n                    static addKeysSorted(builder, keysSorted) {\n                        builder.addFieldInt8(0, +keysSorted, +false);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endMap(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createMap(builder, keysSorted) {\n                        Map.startMap(builder);\n                        Map.addKeysSorted(builder, keysSorted);\n                        return Map.endMap(builder);\n                    }\n                }\n                flatbuf.Map = Map;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * A union is a complex type with children in Field\n * By default ids in the type vector refer to the offsets in the children\n * optionally typeIds provides an indirection between the child offset and the type id\n * for each child typeIds[offset] is the id used in the type vector\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Union {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Union\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Union= obj\n                     * @returns Union\n                     */\n                    static getRootAsUnion(bb, obj) {\n                        return (obj || new Union).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @returns org.apache.arrow.flatbuf.UnionMode\n                     */\n                    mode() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? /**  */ (this.bb.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.UnionMode.Sparse;\n                    }\n                    /**\n                     * @param number index\n                     * @returns number\n                     */\n                    typeIds(index) {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? this.bb.readInt32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;\n                    }\n                    /**\n                     * @returns number\n                     */\n                    typeIdsLength() {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * @returns Int32Array\n                     */\n                    typeIdsArray() {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? new Int32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startUnion(builder) {\n                        builder.startObject(2);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param org.apache.arrow.flatbuf.UnionMode mode\n                     */\n                    static addMode(builder, mode) {\n                        builder.addFieldInt16(0, mode, org.apache.arrow.flatbuf.UnionMode.Sparse);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset typeIdsOffset\n                     */\n                    static addTypeIds(builder, typeIdsOffset) {\n                        builder.addFieldOffset(1, typeIdsOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param Array.<number> data\n                     * @returns flatbuffers.Offset\n                     */\n                    static createTypeIdsVector(builder, data) {\n                        builder.startVector(4, data.length, 4);\n                        for (let i = data.length - 1; i >= 0; i--) {\n                            builder.addInt32(data[i]);\n                        }\n                        return builder.endVector();\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number numElems\n                     */\n                    static startTypeIdsVector(builder, numElems) {\n                        builder.startVector(4, numElems, 4);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endUnion(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createUnion(builder, mode, typeIdsOffset) {\n                        Union.startUnion(builder);\n                        Union.addMode(builder, mode);\n                        Union.addTypeIds(builder, typeIdsOffset);\n                        return Union.endUnion(builder);\n                    }\n                }\n                flatbuf.Union = Union;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Int {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Int\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Int= obj\n                     * @returns Int\n                     */\n                    static getRootAsInt(bb, obj) {\n                        return (obj || new Int).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @returns number\n                     */\n                    bitWidth() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * @returns boolean\n                     */\n                    isSigned() {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startInt(builder) {\n                        builder.startObject(2);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number bitWidth\n                     */\n                    static addBitWidth(builder, bitWidth) {\n                        builder.addFieldInt32(0, bitWidth, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param boolean isSigned\n                     */\n                    static addIsSigned(builder, isSigned) {\n                        builder.addFieldInt8(1, +isSigned, +false);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endInt(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createInt(builder, bitWidth, isSigned) {\n                        Int.startInt(builder);\n                        Int.addBitWidth(builder, bitWidth);\n                        Int.addIsSigned(builder, isSigned);\n                        return Int.endInt(builder);\n                    }\n                }\n                flatbuf.Int = Int;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class FloatingPoint {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns FloatingPoint\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param FloatingPoint= obj\n                     * @returns FloatingPoint\n                     */\n                    static getRootAsFloatingPoint(bb, obj) {\n                        return (obj || new FloatingPoint).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @returns org.apache.arrow.flatbuf.Precision\n                     */\n                    precision() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? /**  */ (this.bb.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.Precision.HALF;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startFloatingPoint(builder) {\n                        builder.startObject(1);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param org.apache.arrow.flatbuf.Precision precision\n                     */\n                    static addPrecision(builder, precision) {\n                        builder.addFieldInt16(0, precision, org.apache.arrow.flatbuf.Precision.HALF);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endFloatingPoint(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createFloatingPoint(builder, precision) {\n                        FloatingPoint.startFloatingPoint(builder);\n                        FloatingPoint.addPrecision(builder, precision);\n                        return FloatingPoint.endFloatingPoint(builder);\n                    }\n                }\n                flatbuf.FloatingPoint = FloatingPoint;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * Unicode with UTF-8 encoding\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Utf8 {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Utf8\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Utf8= obj\n                     * @returns Utf8\n                     */\n                    static getRootAsUtf8(bb, obj) {\n                        return (obj || new Utf8).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startUtf8(builder) {\n                        builder.startObject(0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endUtf8(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createUtf8(builder) {\n                        Utf8.startUtf8(builder);\n                        return Utf8.endUtf8(builder);\n                    }\n                }\n                flatbuf.Utf8 = Utf8;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * Opaque binary data\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Binary {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Binary\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Binary= obj\n                     * @returns Binary\n                     */\n                    static getRootAsBinary(bb, obj) {\n                        return (obj || new Binary).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startBinary(builder) {\n                        builder.startObject(0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endBinary(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createBinary(builder) {\n                        Binary.startBinary(builder);\n                        return Binary.endBinary(builder);\n                    }\n                }\n                flatbuf.Binary = Binary;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * Same as Utf8, but with 64-bit offsets, allowing to represent\n * extremely large data values.\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class LargeUtf8 {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns LargeUtf8\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param LargeUtf8= obj\n                     * @returns LargeUtf8\n                     */\n                    static getRootAsLargeUtf8(bb, obj) {\n                        return (obj || new LargeUtf8).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startLargeUtf8(builder) {\n                        builder.startObject(0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endLargeUtf8(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createLargeUtf8(builder) {\n                        LargeUtf8.startLargeUtf8(builder);\n                        return LargeUtf8.endLargeUtf8(builder);\n                    }\n                }\n                flatbuf.LargeUtf8 = LargeUtf8;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * Same as Binary, but with 64-bit offsets, allowing to represent\n * extremely large data values.\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class LargeBinary {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns LargeBinary\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param LargeBinary= obj\n                     * @returns LargeBinary\n                     */\n                    static getRootAsLargeBinary(bb, obj) {\n                        return (obj || new LargeBinary).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startLargeBinary(builder) {\n                        builder.startObject(0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endLargeBinary(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createLargeBinary(builder) {\n                        LargeBinary.startLargeBinary(builder);\n                        return LargeBinary.endLargeBinary(builder);\n                    }\n                }\n                flatbuf.LargeBinary = LargeBinary;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class FixedSizeBinary {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns FixedSizeBinary\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param FixedSizeBinary= obj\n                     * @returns FixedSizeBinary\n                     */\n                    static getRootAsFixedSizeBinary(bb, obj) {\n                        return (obj || new FixedSizeBinary).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * Number of bytes per value\n                     *\n                     * @returns number\n                     */\n                    byteWidth() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startFixedSizeBinary(builder) {\n                        builder.startObject(1);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number byteWidth\n                     */\n                    static addByteWidth(builder, byteWidth) {\n                        builder.addFieldInt32(0, byteWidth, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endFixedSizeBinary(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createFixedSizeBinary(builder, byteWidth) {\n                        FixedSizeBinary.startFixedSizeBinary(builder);\n                        FixedSizeBinary.addByteWidth(builder, byteWidth);\n                        return FixedSizeBinary.endFixedSizeBinary(builder);\n                    }\n                }\n                flatbuf.FixedSizeBinary = FixedSizeBinary;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Bool {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Bool\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Bool= obj\n                     * @returns Bool\n                     */\n                    static getRootAsBool(bb, obj) {\n                        return (obj || new Bool).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startBool(builder) {\n                        builder.startObject(0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endBool(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createBool(builder) {\n                        Bool.startBool(builder);\n                        return Bool.endBool(builder);\n                    }\n                }\n                flatbuf.Bool = Bool;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Decimal {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Decimal\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Decimal= obj\n                     * @returns Decimal\n                     */\n                    static getRootAsDecimal(bb, obj) {\n                        return (obj || new Decimal).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * Total number of decimal digits\n                     *\n                     * @returns number\n                     */\n                    precision() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * Number of digits after the decimal point \".\"\n                     *\n                     * @returns number\n                     */\n                    scale() {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startDecimal(builder) {\n                        builder.startObject(2);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number precision\n                     */\n                    static addPrecision(builder, precision) {\n                        builder.addFieldInt32(0, precision, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number scale\n                     */\n                    static addScale(builder, scale) {\n                        builder.addFieldInt32(1, scale, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endDecimal(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createDecimal(builder, precision, scale) {\n                        Decimal.startDecimal(builder);\n                        Decimal.addPrecision(builder, precision);\n                        Decimal.addScale(builder, scale);\n                        return Decimal.endDecimal(builder);\n                    }\n                }\n                flatbuf.Decimal = Decimal;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * Date is either a 32-bit or 64-bit type representing elapsed time since UNIX\n * epoch (1970-01-01), stored in either of two units:\n *\n * * Milliseconds (64 bits) indicating UNIX time elapsed since the epoch (no\n *   leap seconds), where the values are evenly divisible by 86400000\n * * Days (32 bits) since the UNIX epoch\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Date {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Date\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Date= obj\n                     * @returns Date\n                     */\n                    static getRootAsDate(bb, obj) {\n                        return (obj || new Date).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @returns org.apache.arrow.flatbuf.DateUnit\n                     */\n                    unit() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? /**  */ (this.bb.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.DateUnit.MILLISECOND;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startDate(builder) {\n                        builder.startObject(1);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param org.apache.arrow.flatbuf.DateUnit unit\n                     */\n                    static addUnit(builder, unit) {\n                        builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.DateUnit.MILLISECOND);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endDate(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createDate(builder, unit) {\n                        Date.startDate(builder);\n                        Date.addUnit(builder, unit);\n                        return Date.endDate(builder);\n                    }\n                }\n                flatbuf.Date = Date;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * Time type. The physical storage type depends on the unit\n * - SECOND and MILLISECOND: 32 bits\n * - MICROSECOND and NANOSECOND: 64 bits\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Time {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Time\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Time= obj\n                     * @returns Time\n                     */\n                    static getRootAsTime(bb, obj) {\n                        return (obj || new Time).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @returns org.apache.arrow.flatbuf.TimeUnit\n                     */\n                    unit() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? /**  */ (this.bb.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.TimeUnit.MILLISECOND;\n                    }\n                    /**\n                     * @returns number\n                     */\n                    bitWidth() {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? this.bb.readInt32(this.bb_pos + offset) : 32;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startTime(builder) {\n                        builder.startObject(2);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param org.apache.arrow.flatbuf.TimeUnit unit\n                     */\n                    static addUnit(builder, unit) {\n                        builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.TimeUnit.MILLISECOND);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number bitWidth\n                     */\n                    static addBitWidth(builder, bitWidth) {\n                        builder.addFieldInt32(1, bitWidth, 32);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endTime(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createTime(builder, unit, bitWidth) {\n                        Time.startTime(builder);\n                        Time.addUnit(builder, unit);\n                        Time.addBitWidth(builder, bitWidth);\n                        return Time.endTime(builder);\n                    }\n                }\n                flatbuf.Time = Time;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * Time elapsed from the Unix epoch, 00:00:00.000 on 1 January 1970, excluding\n * leap seconds, as a 64-bit integer. Note that UNIX time does not include\n * leap seconds.\n *\n * The Timestamp metadata supports both \"time zone naive\" and \"time zone\n * aware\" timestamps. Read about the timezone attribute for more detail\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Timestamp {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Timestamp\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Timestamp= obj\n                     * @returns Timestamp\n                     */\n                    static getRootAsTimestamp(bb, obj) {\n                        return (obj || new Timestamp).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @returns org.apache.arrow.flatbuf.TimeUnit\n                     */\n                    unit() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? /**  */ (this.bb.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.TimeUnit.SECOND;\n                    }\n                    timezone(optionalEncoding) {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startTimestamp(builder) {\n                        builder.startObject(2);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param org.apache.arrow.flatbuf.TimeUnit unit\n                     */\n                    static addUnit(builder, unit) {\n                        builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.TimeUnit.SECOND);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset timezoneOffset\n                     */\n                    static addTimezone(builder, timezoneOffset) {\n                        builder.addFieldOffset(1, timezoneOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endTimestamp(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createTimestamp(builder, unit, timezoneOffset) {\n                        Timestamp.startTimestamp(builder);\n                        Timestamp.addUnit(builder, unit);\n                        Timestamp.addTimezone(builder, timezoneOffset);\n                        return Timestamp.endTimestamp(builder);\n                    }\n                }\n                flatbuf.Timestamp = Timestamp;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Interval {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Interval\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Interval= obj\n                     * @returns Interval\n                     */\n                    static getRootAsInterval(bb, obj) {\n                        return (obj || new Interval).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @returns org.apache.arrow.flatbuf.IntervalUnit\n                     */\n                    unit() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? /**  */ (this.bb.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.IntervalUnit.YEAR_MONTH;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startInterval(builder) {\n                        builder.startObject(1);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param org.apache.arrow.flatbuf.IntervalUnit unit\n                     */\n                    static addUnit(builder, unit) {\n                        builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.IntervalUnit.YEAR_MONTH);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endInterval(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createInterval(builder, unit) {\n                        Interval.startInterval(builder);\n                        Interval.addUnit(builder, unit);\n                        return Interval.endInterval(builder);\n                    }\n                }\n                flatbuf.Interval = Interval;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Duration {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Duration\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Duration= obj\n                     * @returns Duration\n                     */\n                    static getRootAsDuration(bb, obj) {\n                        return (obj || new Duration).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @returns org.apache.arrow.flatbuf.TimeUnit\n                     */\n                    unit() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? /**  */ (this.bb.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.TimeUnit.MILLISECOND;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startDuration(builder) {\n                        builder.startObject(1);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param org.apache.arrow.flatbuf.TimeUnit unit\n                     */\n                    static addUnit(builder, unit) {\n                        builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.TimeUnit.MILLISECOND);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endDuration(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createDuration(builder, unit) {\n                        Duration.startDuration(builder);\n                        Duration.addUnit(builder, unit);\n                        return Duration.endDuration(builder);\n                    }\n                }\n                flatbuf.Duration = Duration;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * ----------------------------------------------------------------------\n * user defined key value pairs to add custom metadata to arrow\n * key namespacing is the responsibility of the user\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class KeyValue {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns KeyValue\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param KeyValue= obj\n                     * @returns KeyValue\n                     */\n                    static getRootAsKeyValue(bb, obj) {\n                        return (obj || new KeyValue).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    key(optionalEncoding) {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;\n                    }\n                    value(optionalEncoding) {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startKeyValue(builder) {\n                        builder.startObject(2);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset keyOffset\n                     */\n                    static addKey(builder, keyOffset) {\n                        builder.addFieldOffset(0, keyOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset valueOffset\n                     */\n                    static addValue(builder, valueOffset) {\n                        builder.addFieldOffset(1, valueOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endKeyValue(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createKeyValue(builder, keyOffset, valueOffset) {\n                        KeyValue.startKeyValue(builder);\n                        KeyValue.addKey(builder, keyOffset);\n                        KeyValue.addValue(builder, valueOffset);\n                        return KeyValue.endKeyValue(builder);\n                    }\n                }\n                flatbuf.KeyValue = KeyValue;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * ----------------------------------------------------------------------\n * Dictionary encoding metadata\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class DictionaryEncoding {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns DictionaryEncoding\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param DictionaryEncoding= obj\n                     * @returns DictionaryEncoding\n                     */\n                    static getRootAsDictionaryEncoding(bb, obj) {\n                        return (obj || new DictionaryEncoding).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * The known dictionary id in the application where this data is used. In\n                     * the file or streaming formats, the dictionary ids are found in the\n                     * DictionaryBatch messages\n                     *\n                     * @returns flatbuffers.Long\n                     */\n                    id() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? this.bb.readInt64(this.bb_pos + offset) : this.bb.createLong(0, 0);\n                    }\n                    /**\n                     * The dictionary indices are constrained to be positive integers. If this\n                     * field is null, the indices must be signed int32\n                     *\n                     * @param org.apache.arrow.flatbuf.Int= obj\n                     * @returns org.apache.arrow.flatbuf.Int|null\n                     */\n                    indexType(obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? (obj || new org.apache.arrow.flatbuf.Int).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\n                    }\n                    /**\n                     * By default, dictionaries are not ordered, or the order does not have\n                     * semantic meaning. In some statistical, applications, dictionary-encoding\n                     * is used to represent ordered categorical data, and we provide a way to\n                     * preserve that metadata here\n                     *\n                     * @returns boolean\n                     */\n                    isOrdered() {\n                        let offset = this.bb.__offset(this.bb_pos, 8);\n                        return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startDictionaryEncoding(builder) {\n                        builder.startObject(3);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Long id\n                     */\n                    static addId(builder, id) {\n                        builder.addFieldInt64(0, id, builder.createLong(0, 0));\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset indexTypeOffset\n                     */\n                    static addIndexType(builder, indexTypeOffset) {\n                        builder.addFieldOffset(1, indexTypeOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param boolean isOrdered\n                     */\n                    static addIsOrdered(builder, isOrdered) {\n                        builder.addFieldInt8(2, +isOrdered, +false);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endDictionaryEncoding(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createDictionaryEncoding(builder, id, indexTypeOffset, isOrdered) {\n                        DictionaryEncoding.startDictionaryEncoding(builder);\n                        DictionaryEncoding.addId(builder, id);\n                        DictionaryEncoding.addIndexType(builder, indexTypeOffset);\n                        DictionaryEncoding.addIsOrdered(builder, isOrdered);\n                        return DictionaryEncoding.endDictionaryEncoding(builder);\n                    }\n                }\n                flatbuf.DictionaryEncoding = DictionaryEncoding;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * ----------------------------------------------------------------------\n * A field represents a named column in a record / row batch or child of a\n * nested type.\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Field {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Field\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Field= obj\n                     * @returns Field\n                     */\n                    static getRootAsField(bb, obj) {\n                        return (obj || new Field).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    name(optionalEncoding) {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;\n                    }\n                    /**\n                     * Whether or not this field can contain nulls. Should be true in general.\n                     *\n                     * @returns boolean\n                     */\n                    nullable() {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;\n                    }\n                    /**\n                     * @returns org.apache.arrow.flatbuf.Type\n                     */\n                    typeType() {\n                        let offset = this.bb.__offset(this.bb_pos, 8);\n                        return offset ? /**  */ (this.bb.readUint8(this.bb_pos + offset)) : org.apache.arrow.flatbuf.Type.NONE;\n                    }\n                    /**\n                     * This is the type of the decoded value if the field is dictionary encoded.\n                     *\n                     * @param flatbuffers.Table obj\n                     * @returns ?flatbuffers.Table\n                     */\n                    type(obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 10);\n                        return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;\n                    }\n                    /**\n                     * Present only if the field is dictionary encoded.\n                     *\n                     * @param org.apache.arrow.flatbuf.DictionaryEncoding= obj\n                     * @returns org.apache.arrow.flatbuf.DictionaryEncoding|null\n                     */\n                    dictionary(obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 12);\n                        return offset ? (obj || new org.apache.arrow.flatbuf.DictionaryEncoding).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\n                    }\n                    /**\n                     * children apply only to nested data types like Struct, List and Union. For\n                     * primitive types children will have length 0.\n                     *\n                     * @param number index\n                     * @param org.apache.arrow.flatbuf.Field= obj\n                     * @returns org.apache.arrow.flatbuf.Field\n                     */\n                    children(index, obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 14);\n                        return offset ? (obj || new org.apache.arrow.flatbuf.Field).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\n                    }\n                    /**\n                     * @returns number\n                     */\n                    childrenLength() {\n                        let offset = this.bb.__offset(this.bb_pos, 14);\n                        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * User-defined metadata\n                     *\n                     * @param number index\n                     * @param org.apache.arrow.flatbuf.KeyValue= obj\n                     * @returns org.apache.arrow.flatbuf.KeyValue\n                     */\n                    customMetadata(index, obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 16);\n                        return offset ? (obj || new org.apache.arrow.flatbuf.KeyValue).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\n                    }\n                    /**\n                     * @returns number\n                     */\n                    customMetadataLength() {\n                        let offset = this.bb.__offset(this.bb_pos, 16);\n                        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startField(builder) {\n                        builder.startObject(7);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset nameOffset\n                     */\n                    static addName(builder, nameOffset) {\n                        builder.addFieldOffset(0, nameOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param boolean nullable\n                     */\n                    static addNullable(builder, nullable) {\n                        builder.addFieldInt8(1, +nullable, +false);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param org.apache.arrow.flatbuf.Type typeType\n                     */\n                    static addTypeType(builder, typeType) {\n                        builder.addFieldInt8(2, typeType, org.apache.arrow.flatbuf.Type.NONE);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset typeOffset\n                     */\n                    static addType(builder, typeOffset) {\n                        builder.addFieldOffset(3, typeOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset dictionaryOffset\n                     */\n                    static addDictionary(builder, dictionaryOffset) {\n                        builder.addFieldOffset(4, dictionaryOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset childrenOffset\n                     */\n                    static addChildren(builder, childrenOffset) {\n                        builder.addFieldOffset(5, childrenOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param Array.<flatbuffers.Offset> data\n                     * @returns flatbuffers.Offset\n                     */\n                    static createChildrenVector(builder, data) {\n                        builder.startVector(4, data.length, 4);\n                        for (let i = data.length - 1; i >= 0; i--) {\n                            builder.addOffset(data[i]);\n                        }\n                        return builder.endVector();\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number numElems\n                     */\n                    static startChildrenVector(builder, numElems) {\n                        builder.startVector(4, numElems, 4);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset customMetadataOffset\n                     */\n                    static addCustomMetadata(builder, customMetadataOffset) {\n                        builder.addFieldOffset(6, customMetadataOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param Array.<flatbuffers.Offset> data\n                     * @returns flatbuffers.Offset\n                     */\n                    static createCustomMetadataVector(builder, data) {\n                        builder.startVector(4, data.length, 4);\n                        for (let i = data.length - 1; i >= 0; i--) {\n                            builder.addOffset(data[i]);\n                        }\n                        return builder.endVector();\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number numElems\n                     */\n                    static startCustomMetadataVector(builder, numElems) {\n                        builder.startVector(4, numElems, 4);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endField(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createField(builder, nameOffset, nullable, typeType, typeOffset, dictionaryOffset, childrenOffset, customMetadataOffset) {\n                        Field.startField(builder);\n                        Field.addName(builder, nameOffset);\n                        Field.addNullable(builder, nullable);\n                        Field.addTypeType(builder, typeType);\n                        Field.addType(builder, typeOffset);\n                        Field.addDictionary(builder, dictionaryOffset);\n                        Field.addChildren(builder, childrenOffset);\n                        Field.addCustomMetadata(builder, customMetadataOffset);\n                        return Field.endField(builder);\n                    }\n                }\n                flatbuf.Field = Field;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * ----------------------------------------------------------------------\n * A Buffer represents a single contiguous memory segment\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Buffer {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Buffer\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * The relative offset into the shared memory page where the bytes for this\n                     * buffer starts\n                     *\n                     * @returns flatbuffers.Long\n                     */\n                    offset() {\n                        return this.bb.readInt64(this.bb_pos);\n                    }\n                    /**\n                     * The absolute length (in bytes) of the memory buffer. The memory is found\n                     * from offset (inclusive) to offset + length (non-inclusive).\n                     *\n                     * @returns flatbuffers.Long\n                     */\n                    length() {\n                        return this.bb.readInt64(this.bb_pos + 8);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Long offset\n                     * @param flatbuffers.Long length\n                     * @returns flatbuffers.Offset\n                     */\n                    static createBuffer(builder, offset, length) {\n                        builder.prep(8, 16);\n                        builder.writeInt64(length);\n                        builder.writeInt64(offset);\n                        return builder.offset();\n                    }\n                }\n                flatbuf.Buffer = Buffer;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * ----------------------------------------------------------------------\n * A Schema describes the columns in a row batch\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Schema {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Schema\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Schema= obj\n                     * @returns Schema\n                     */\n                    static getRootAsSchema(bb, obj) {\n                        return (obj || new Schema).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * endianness of the buffer\n                     * it is Little Endian by default\n                     * if endianness doesn't match the underlying system then the vectors need to be converted\n                     *\n                     * @returns org.apache.arrow.flatbuf.Endianness\n                     */\n                    endianness() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? /**  */ (this.bb.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.Endianness.Little;\n                    }\n                    /**\n                     * @param number index\n                     * @param org.apache.arrow.flatbuf.Field= obj\n                     * @returns org.apache.arrow.flatbuf.Field\n                     */\n                    fields(index, obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? (obj || new org.apache.arrow.flatbuf.Field).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\n                    }\n                    /**\n                     * @returns number\n                     */\n                    fieldsLength() {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * @param number index\n                     * @param org.apache.arrow.flatbuf.KeyValue= obj\n                     * @returns org.apache.arrow.flatbuf.KeyValue\n                     */\n                    customMetadata(index, obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 8);\n                        return offset ? (obj || new org.apache.arrow.flatbuf.KeyValue).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\n                    }\n                    /**\n                     * @returns number\n                     */\n                    customMetadataLength() {\n                        let offset = this.bb.__offset(this.bb_pos, 8);\n                        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startSchema(builder) {\n                        builder.startObject(3);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param org.apache.arrow.flatbuf.Endianness endianness\n                     */\n                    static addEndianness(builder, endianness) {\n                        builder.addFieldInt16(0, endianness, org.apache.arrow.flatbuf.Endianness.Little);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset fieldsOffset\n                     */\n                    static addFields(builder, fieldsOffset) {\n                        builder.addFieldOffset(1, fieldsOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param Array.<flatbuffers.Offset> data\n                     * @returns flatbuffers.Offset\n                     */\n                    static createFieldsVector(builder, data) {\n                        builder.startVector(4, data.length, 4);\n                        for (let i = data.length - 1; i >= 0; i--) {\n                            builder.addOffset(data[i]);\n                        }\n                        return builder.endVector();\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number numElems\n                     */\n                    static startFieldsVector(builder, numElems) {\n                        builder.startVector(4, numElems, 4);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset customMetadataOffset\n                     */\n                    static addCustomMetadata(builder, customMetadataOffset) {\n                        builder.addFieldOffset(2, customMetadataOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param Array.<flatbuffers.Offset> data\n                     * @returns flatbuffers.Offset\n                     */\n                    static createCustomMetadataVector(builder, data) {\n                        builder.startVector(4, data.length, 4);\n                        for (let i = data.length - 1; i >= 0; i--) {\n                            builder.addOffset(data[i]);\n                        }\n                        return builder.endVector();\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number numElems\n                     */\n                    static startCustomMetadataVector(builder, numElems) {\n                        builder.startVector(4, numElems, 4);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endSchema(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset offset\n                     */\n                    static finishSchemaBuffer(builder, offset) {\n                        builder.finish(offset);\n                    }\n                    static createSchema(builder, endianness, fieldsOffset, customMetadataOffset) {\n                        Schema.startSchema(builder);\n                        Schema.addEndianness(builder, endianness);\n                        Schema.addFields(builder, fieldsOffset);\n                        Schema.addCustomMetadata(builder, customMetadataOffset);\n                        return Schema.endSchema(builder);\n                    }\n                }\n                flatbuf.Schema = Schema;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n\n//# sourceMappingURL=Schema.mjs.map\n","// automatically generated by the FlatBuffers compiler, do not modify\nimport * as NS7624605610262437867 from './Schema';\nexport var org;\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                flatbuf.Schema = NS7624605610262437867.org.apache.arrow.flatbuf.Schema;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * ----------------------------------------------------------------------\n * The root Message type\n * This union enables us to easily send different message types without\n * redundant storage, and in the future we can easily add new message types.\n *\n * Arrow implementations do not need to implement all of the message types,\n * which may include experimental metadata types. For maximum compatibility,\n * it is best to send data using RecordBatch\n *\n * @enum {number}\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                let MessageHeader;\n                (function (MessageHeader) {\n                    MessageHeader[MessageHeader[\"NONE\"] = 0] = \"NONE\";\n                    MessageHeader[MessageHeader[\"Schema\"] = 1] = \"Schema\";\n                    MessageHeader[MessageHeader[\"DictionaryBatch\"] = 2] = \"DictionaryBatch\";\n                    MessageHeader[MessageHeader[\"RecordBatch\"] = 3] = \"RecordBatch\";\n                    MessageHeader[MessageHeader[\"Tensor\"] = 4] = \"Tensor\";\n                    MessageHeader[MessageHeader[\"SparseTensor\"] = 5] = \"SparseTensor\";\n                })(MessageHeader = flatbuf.MessageHeader || (flatbuf.MessageHeader = {}));\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * ----------------------------------------------------------------------\n * Data structures for describing a table row batch (a collection of\n * equal-length Arrow arrays)\n * Metadata about a field at some level of a nested type tree (but not\n * its children).\n *\n * For example, a List<Int16> with values [[1, 2, 3], null, [4], [5, 6], null]\n * would have {length: 5, null_count: 2} for its List node, and {length: 6,\n * null_count: 0} for its Int16 node, as separate FieldNode structs\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class FieldNode {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns FieldNode\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * The number of value slots in the Arrow array at this level of a nested\n                     * tree\n                     *\n                     * @returns flatbuffers.Long\n                     */\n                    length() {\n                        return this.bb.readInt64(this.bb_pos);\n                    }\n                    /**\n                     * The number of observed nulls. Fields with null_count == 0 may choose not\n                     * to write their physical validity bitmap out as a materialized buffer,\n                     * instead setting the length of the bitmap buffer to 0.\n                     *\n                     * @returns flatbuffers.Long\n                     */\n                    nullCount() {\n                        return this.bb.readInt64(this.bb_pos + 8);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Long length\n                     * @param flatbuffers.Long null_count\n                     * @returns flatbuffers.Offset\n                     */\n                    static createFieldNode(builder, length, null_count) {\n                        builder.prep(8, 16);\n                        builder.writeInt64(null_count);\n                        builder.writeInt64(length);\n                        return builder.offset();\n                    }\n                }\n                flatbuf.FieldNode = FieldNode;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * A data header describing the shared memory layout of a \"record\" or \"row\"\n * batch. Some systems call this a \"row batch\" internally and others a \"record\n * batch\".\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class RecordBatch {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns RecordBatch\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param RecordBatch= obj\n                     * @returns RecordBatch\n                     */\n                    static getRootAsRecordBatch(bb, obj) {\n                        return (obj || new RecordBatch).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * number of records / rows. The arrays in the batch should all have this\n                     * length\n                     *\n                     * @returns flatbuffers.Long\n                     */\n                    length() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? this.bb.readInt64(this.bb_pos + offset) : this.bb.createLong(0, 0);\n                    }\n                    /**\n                     * Nodes correspond to the pre-ordered flattened logical schema\n                     *\n                     * @param number index\n                     * @param org.apache.arrow.flatbuf.FieldNode= obj\n                     * @returns org.apache.arrow.flatbuf.FieldNode\n                     */\n                    nodes(index, obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? (obj || new org.apache.arrow.flatbuf.FieldNode).__init(this.bb.__vector(this.bb_pos + offset) + index * 16, this.bb) : null;\n                    }\n                    /**\n                     * @returns number\n                     */\n                    nodesLength() {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * Buffers correspond to the pre-ordered flattened buffer tree\n                     *\n                     * The number of buffers appended to this list depends on the schema. For\n                     * example, most primitive arrays will have 2 buffers, 1 for the validity\n                     * bitmap and 1 for the values. For struct arrays, there will only be a\n                     * single buffer for the validity (nulls) bitmap\n                     *\n                     * @param number index\n                     * @param org.apache.arrow.flatbuf.Buffer= obj\n                     * @returns org.apache.arrow.flatbuf.Buffer\n                     */\n                    buffers(index, obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 8);\n                        return offset ? (obj || new NS7624605610262437867.org.apache.arrow.flatbuf.Buffer).__init(this.bb.__vector(this.bb_pos + offset) + index * 16, this.bb) : null;\n                    }\n                    /**\n                     * @returns number\n                     */\n                    buffersLength() {\n                        let offset = this.bb.__offset(this.bb_pos, 8);\n                        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startRecordBatch(builder) {\n                        builder.startObject(3);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Long length\n                     */\n                    static addLength(builder, length) {\n                        builder.addFieldInt64(0, length, builder.createLong(0, 0));\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset nodesOffset\n                     */\n                    static addNodes(builder, nodesOffset) {\n                        builder.addFieldOffset(1, nodesOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number numElems\n                     */\n                    static startNodesVector(builder, numElems) {\n                        builder.startVector(16, numElems, 8);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset buffersOffset\n                     */\n                    static addBuffers(builder, buffersOffset) {\n                        builder.addFieldOffset(2, buffersOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number numElems\n                     */\n                    static startBuffersVector(builder, numElems) {\n                        builder.startVector(16, numElems, 8);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endRecordBatch(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createRecordBatch(builder, length, nodesOffset, buffersOffset) {\n                        RecordBatch.startRecordBatch(builder);\n                        RecordBatch.addLength(builder, length);\n                        RecordBatch.addNodes(builder, nodesOffset);\n                        RecordBatch.addBuffers(builder, buffersOffset);\n                        return RecordBatch.endRecordBatch(builder);\n                    }\n                }\n                flatbuf.RecordBatch = RecordBatch;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * For sending dictionary encoding information. Any Field can be\n * dictionary-encoded, but in this case none of its children may be\n * dictionary-encoded.\n * There is one vector / column per dictionary, but that vector / column\n * may be spread across multiple dictionary batches by using the isDelta\n * flag\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class DictionaryBatch {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns DictionaryBatch\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param DictionaryBatch= obj\n                     * @returns DictionaryBatch\n                     */\n                    static getRootAsDictionaryBatch(bb, obj) {\n                        return (obj || new DictionaryBatch).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @returns flatbuffers.Long\n                     */\n                    id() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? this.bb.readInt64(this.bb_pos + offset) : this.bb.createLong(0, 0);\n                    }\n                    /**\n                     * @param org.apache.arrow.flatbuf.RecordBatch= obj\n                     * @returns org.apache.arrow.flatbuf.RecordBatch|null\n                     */\n                    data(obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? (obj || new org.apache.arrow.flatbuf.RecordBatch).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\n                    }\n                    /**\n                     * If isDelta is true the values in the dictionary are to be appended to a\n                     * dictionary with the indicated id\n                     *\n                     * @returns boolean\n                     */\n                    isDelta() {\n                        let offset = this.bb.__offset(this.bb_pos, 8);\n                        return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startDictionaryBatch(builder) {\n                        builder.startObject(3);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Long id\n                     */\n                    static addId(builder, id) {\n                        builder.addFieldInt64(0, id, builder.createLong(0, 0));\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset dataOffset\n                     */\n                    static addData(builder, dataOffset) {\n                        builder.addFieldOffset(1, dataOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param boolean isDelta\n                     */\n                    static addIsDelta(builder, isDelta) {\n                        builder.addFieldInt8(2, +isDelta, +false);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endDictionaryBatch(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createDictionaryBatch(builder, id, dataOffset, isDelta) {\n                        DictionaryBatch.startDictionaryBatch(builder);\n                        DictionaryBatch.addId(builder, id);\n                        DictionaryBatch.addData(builder, dataOffset);\n                        DictionaryBatch.addIsDelta(builder, isDelta);\n                        return DictionaryBatch.endDictionaryBatch(builder);\n                    }\n                }\n                flatbuf.DictionaryBatch = DictionaryBatch;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Message {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Message\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Message= obj\n                     * @returns Message\n                     */\n                    static getRootAsMessage(bb, obj) {\n                        return (obj || new Message).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @returns org.apache.arrow.flatbuf.MetadataVersion\n                     */\n                    version() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? /**  */ (this.bb.readInt16(this.bb_pos + offset)) : NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1;\n                    }\n                    /**\n                     * @returns org.apache.arrow.flatbuf.MessageHeader\n                     */\n                    headerType() {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? /**  */ (this.bb.readUint8(this.bb_pos + offset)) : org.apache.arrow.flatbuf.MessageHeader.NONE;\n                    }\n                    /**\n                     * @param flatbuffers.Table obj\n                     * @returns ?flatbuffers.Table\n                     */\n                    header(obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 8);\n                        return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;\n                    }\n                    /**\n                     * @returns flatbuffers.Long\n                     */\n                    bodyLength() {\n                        let offset = this.bb.__offset(this.bb_pos, 10);\n                        return offset ? this.bb.readInt64(this.bb_pos + offset) : this.bb.createLong(0, 0);\n                    }\n                    /**\n                     * @param number index\n                     * @param org.apache.arrow.flatbuf.KeyValue= obj\n                     * @returns org.apache.arrow.flatbuf.KeyValue\n                     */\n                    customMetadata(index, obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 12);\n                        return offset ? (obj || new NS7624605610262437867.org.apache.arrow.flatbuf.KeyValue).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\n                    }\n                    /**\n                     * @returns number\n                     */\n                    customMetadataLength() {\n                        let offset = this.bb.__offset(this.bb_pos, 12);\n                        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startMessage(builder) {\n                        builder.startObject(5);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param org.apache.arrow.flatbuf.MetadataVersion version\n                     */\n                    static addVersion(builder, version) {\n                        builder.addFieldInt16(0, version, NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param org.apache.arrow.flatbuf.MessageHeader headerType\n                     */\n                    static addHeaderType(builder, headerType) {\n                        builder.addFieldInt8(1, headerType, org.apache.arrow.flatbuf.MessageHeader.NONE);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset headerOffset\n                     */\n                    static addHeader(builder, headerOffset) {\n                        builder.addFieldOffset(2, headerOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Long bodyLength\n                     */\n                    static addBodyLength(builder, bodyLength) {\n                        builder.addFieldInt64(3, bodyLength, builder.createLong(0, 0));\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset customMetadataOffset\n                     */\n                    static addCustomMetadata(builder, customMetadataOffset) {\n                        builder.addFieldOffset(4, customMetadataOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param Array.<flatbuffers.Offset> data\n                     * @returns flatbuffers.Offset\n                     */\n                    static createCustomMetadataVector(builder, data) {\n                        builder.startVector(4, data.length, 4);\n                        for (let i = data.length - 1; i >= 0; i--) {\n                            builder.addOffset(data[i]);\n                        }\n                        return builder.endVector();\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number numElems\n                     */\n                    static startCustomMetadataVector(builder, numElems) {\n                        builder.startVector(4, numElems, 4);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endMessage(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset offset\n                     */\n                    static finishMessageBuffer(builder, offset) {\n                        builder.finish(offset);\n                    }\n                    static createMessage(builder, version, headerType, headerOffset, bodyLength, customMetadataOffset) {\n                        Message.startMessage(builder);\n                        Message.addVersion(builder, version);\n                        Message.addHeaderType(builder, headerType);\n                        Message.addHeader(builder, headerOffset);\n                        Message.addBodyLength(builder, bodyLength);\n                        Message.addCustomMetadata(builder, customMetadataOffset);\n                        return Message.endMessage(builder);\n                    }\n                }\n                flatbuf.Message = Message;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n\n//# sourceMappingURL=Message.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport * as Schema_ from './fb/Schema';\nimport * as Message_ from './fb/Message';\nexport var ArrowType = Schema_.org.apache.arrow.flatbuf.Type;\nexport var DateUnit = Schema_.org.apache.arrow.flatbuf.DateUnit;\nexport var TimeUnit = Schema_.org.apache.arrow.flatbuf.TimeUnit;\nexport var Precision = Schema_.org.apache.arrow.flatbuf.Precision;\nexport var UnionMode = Schema_.org.apache.arrow.flatbuf.UnionMode;\nexport var IntervalUnit = Schema_.org.apache.arrow.flatbuf.IntervalUnit;\nexport var MessageHeader = Message_.org.apache.arrow.flatbuf.MessageHeader;\nexport var MetadataVersion = Schema_.org.apache.arrow.flatbuf.MetadataVersion;\n/**\n * Main data type enumeration.\n *\n * Data types in this library are all *logical*. They can be expressed as\n * either a primitive physical type (bytes or bits of some fixed size), a\n * nested type consisting of other data types, or another data type (e.g. a\n * timestamp encoded as an int64).\n *\n * **Note**: Only enum values 0-17 (NONE through Map) are written to an Arrow\n * IPC payload.\n *\n * The rest of the values are specified here so TypeScript can narrow the type\n * signatures further beyond the base Arrow Types. The Arrow DataTypes include\n * metadata like `bitWidth` that impact the type signatures of the values we\n * accept and return.\n *\n * For example, the `Int8Vector` reads 1-byte numbers from an `Int8Array`, an\n * `Int32Vector` reads a 4-byte number from an `Int32Array`, and an `Int64Vector`\n * reads a pair of 4-byte lo, hi 32-bit integers as a zero-copy slice from the\n * underlying `Int32Array`.\n *\n * Library consumers benefit by knowing the narrowest type, since we can ensure\n * the types across all public methods are propagated, and never bail to `any`.\n * These values are _never_ used at runtime, and they will _never_ be written\n * to the flatbuffers metadata of serialized Arrow IPC payloads.\n */\nexport var Type;\n(function (Type) {\n    /** The default placeholder type */\n    Type[Type[\"NONE\"] = 0] = \"NONE\";\n    /** A NULL type having no physical storage */\n    Type[Type[\"Null\"] = 1] = \"Null\";\n    /** Signed or unsigned 8, 16, 32, or 64-bit little-endian integer */\n    Type[Type[\"Int\"] = 2] = \"Int\";\n    /** 2, 4, or 8-byte floating point value */\n    Type[Type[\"Float\"] = 3] = \"Float\";\n    /** Variable-length bytes (no guarantee of UTF8-ness) */\n    Type[Type[\"Binary\"] = 4] = \"Binary\";\n    /** UTF8 variable-length string as List<Char> */\n    Type[Type[\"Utf8\"] = 5] = \"Utf8\";\n    /** Boolean as 1 bit, LSB bit-packed ordering */\n    Type[Type[\"Bool\"] = 6] = \"Bool\";\n    /** Precision-and-scale-based decimal type. Storage type depends on the parameters. */\n    Type[Type[\"Decimal\"] = 7] = \"Decimal\";\n    /** int32_t days or int64_t milliseconds since the UNIX epoch */\n    Type[Type[\"Date\"] = 8] = \"Date\";\n    /** Time as signed 32 or 64-bit integer, representing either seconds, milliseconds, microseconds, or nanoseconds since midnight since midnight */\n    Type[Type[\"Time\"] = 9] = \"Time\";\n    /** Exact timestamp encoded with int64 since UNIX epoch (Default unit millisecond) */\n    Type[Type[\"Timestamp\"] = 10] = \"Timestamp\";\n    /** YEAR_MONTH or DAY_TIME interval in SQL style */\n    Type[Type[\"Interval\"] = 11] = \"Interval\";\n    /** A list of some logical data type */\n    Type[Type[\"List\"] = 12] = \"List\";\n    /** Struct of logical types */\n    Type[Type[\"Struct\"] = 13] = \"Struct\";\n    /** Union of logical types */\n    Type[Type[\"Union\"] = 14] = \"Union\";\n    /** Fixed-size binary. Each value occupies the same number of bytes */\n    Type[Type[\"FixedSizeBinary\"] = 15] = \"FixedSizeBinary\";\n    /** Fixed-size list. Each value occupies the same number of bytes */\n    Type[Type[\"FixedSizeList\"] = 16] = \"FixedSizeList\";\n    /** Map of named logical types */\n    Type[Type[\"Map\"] = 17] = \"Map\";\n    /** Dictionary aka Category type */\n    Type[Type[\"Dictionary\"] = -1] = \"Dictionary\";\n    Type[Type[\"Int8\"] = -2] = \"Int8\";\n    Type[Type[\"Int16\"] = -3] = \"Int16\";\n    Type[Type[\"Int32\"] = -4] = \"Int32\";\n    Type[Type[\"Int64\"] = -5] = \"Int64\";\n    Type[Type[\"Uint8\"] = -6] = \"Uint8\";\n    Type[Type[\"Uint16\"] = -7] = \"Uint16\";\n    Type[Type[\"Uint32\"] = -8] = \"Uint32\";\n    Type[Type[\"Uint64\"] = -9] = \"Uint64\";\n    Type[Type[\"Float16\"] = -10] = \"Float16\";\n    Type[Type[\"Float32\"] = -11] = \"Float32\";\n    Type[Type[\"Float64\"] = -12] = \"Float64\";\n    Type[Type[\"DateDay\"] = -13] = \"DateDay\";\n    Type[Type[\"DateMillisecond\"] = -14] = \"DateMillisecond\";\n    Type[Type[\"TimestampSecond\"] = -15] = \"TimestampSecond\";\n    Type[Type[\"TimestampMillisecond\"] = -16] = \"TimestampMillisecond\";\n    Type[Type[\"TimestampMicrosecond\"] = -17] = \"TimestampMicrosecond\";\n    Type[Type[\"TimestampNanosecond\"] = -18] = \"TimestampNanosecond\";\n    Type[Type[\"TimeSecond\"] = -19] = \"TimeSecond\";\n    Type[Type[\"TimeMillisecond\"] = -20] = \"TimeMillisecond\";\n    Type[Type[\"TimeMicrosecond\"] = -21] = \"TimeMicrosecond\";\n    Type[Type[\"TimeNanosecond\"] = -22] = \"TimeNanosecond\";\n    Type[Type[\"DenseUnion\"] = -23] = \"DenseUnion\";\n    Type[Type[\"SparseUnion\"] = -24] = \"SparseUnion\";\n    Type[Type[\"IntervalDayTime\"] = -25] = \"IntervalDayTime\";\n    Type[Type[\"IntervalYearMonth\"] = -26] = \"IntervalYearMonth\";\n})(Type || (Type = {}));\nexport var BufferType;\n(function (BufferType) {\n    /**\n     * used in List type, Dense Union and variable length primitive types (String, Binary)\n     */\n    BufferType[BufferType[\"OFFSET\"] = 0] = \"OFFSET\";\n    /**\n     * actual data, either wixed width primitive types in slots or variable width delimited by an OFFSET vector\n     */\n    BufferType[BufferType[\"DATA\"] = 1] = \"DATA\";\n    /**\n     * Bit vector indicating if each value is null\n     */\n    BufferType[BufferType[\"VALIDITY\"] = 2] = \"VALIDITY\";\n    /**\n     * Type vector used in Union type\n     */\n    BufferType[BufferType[\"TYPE\"] = 3] = \"TYPE\";\n})(BufferType || (BufferType = {}));\n\n//# sourceMappingURL=enum.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n/** @ignore */\nexport function getBool(_data, _index, byte, bit) {\n    return (byte & 1 << bit) !== 0;\n}\n/** @ignore */\nexport function getBit(_data, _index, byte, bit) {\n    return (byte & 1 << bit) >> bit;\n}\n/** @ignore */\nexport function setBool(bytes, index, value) {\n    return value ?\n        !!(bytes[index >> 3] |= (1 << (index % 8))) || true :\n        !(bytes[index >> 3] &= ~(1 << (index % 8))) && false;\n}\n/** @ignore */\nexport function truncateBitmap(offset, length, bitmap) {\n    const alignedSize = (bitmap.byteLength + 7) & ~7;\n    if (offset > 0 || bitmap.byteLength < alignedSize) {\n        const bytes = new Uint8Array(alignedSize);\n        // If the offset is a multiple of 8 bits, it's safe to slice the bitmap\n        bytes.set(offset % 8 === 0 ? bitmap.subarray(offset >> 3) :\n            // Otherwise iterate each bit from the offset and return a new one\n            packBools(iterateBits(bitmap, offset, length, null, getBool)).subarray(0, alignedSize));\n        return bytes;\n    }\n    return bitmap;\n}\n/** @ignore */\nexport function packBools(values) {\n    let xs = [];\n    let i = 0, bit = 0, byte = 0;\n    for (const value of values) {\n        value && (byte |= 1 << bit);\n        if (++bit === 8) {\n            xs[i++] = byte;\n            byte = bit = 0;\n        }\n    }\n    if (i === 0 || bit > 0) {\n        xs[i++] = byte;\n    }\n    let b = new Uint8Array((xs.length + 7) & ~7);\n    b.set(xs);\n    return b;\n}\n/** @ignore */\nexport function* iterateBits(bytes, begin, length, context, get) {\n    let bit = begin % 8;\n    let byteIndex = begin >> 3;\n    let index = 0, remaining = length;\n    for (; remaining > 0; bit = 0) {\n        let byte = bytes[byteIndex++];\n        do {\n            yield get(context, index++, byte, bit);\n        } while (--remaining > 0 && ++bit < 8);\n    }\n}\n/**\n * Compute the population count (the number of bits set to 1) for a range of bits in a Uint8Array.\n * @param vector The Uint8Array of bits for which to compute the population count.\n * @param lhs The range's left-hand side (or start) bit\n * @param rhs The range's right-hand side (or end) bit\n */\n/** @ignore */\nexport function popcnt_bit_range(data, lhs, rhs) {\n    if (rhs - lhs <= 0) {\n        return 0;\n    }\n    // If the bit range is less than one byte, sum the 1 bits in the bit range\n    if (rhs - lhs < 8) {\n        let sum = 0;\n        for (const bit of iterateBits(data, lhs, rhs - lhs, data, getBit)) {\n            sum += bit;\n        }\n        return sum;\n    }\n    // Get the next lowest multiple of 8 from the right hand side\n    const rhsInside = rhs >> 3 << 3;\n    // Get the next highest multiple of 8 from the left hand side\n    const lhsInside = lhs + (lhs % 8 === 0 ? 0 : 8 - lhs % 8);\n    return (\n    // Get the popcnt of bits between the left hand side, and the next highest multiple of 8\n    popcnt_bit_range(data, lhs, lhsInside) +\n        // Get the popcnt of bits between the right hand side, and the next lowest multiple of 8\n        popcnt_bit_range(data, rhsInside, rhs) +\n        // Get the popcnt of all bits between the left and right hand sides' multiples of 8\n        popcnt_array(data, lhsInside >> 3, (rhsInside - lhsInside) >> 3));\n}\n/** @ignore */\nexport function popcnt_array(arr, byteOffset, byteLength) {\n    let cnt = 0, pos = byteOffset | 0;\n    const view = new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n    const len = byteLength === void 0 ? arr.byteLength : pos + byteLength;\n    while (len - pos >= 4) {\n        cnt += popcnt_uint32(view.getUint32(pos));\n        pos += 4;\n    }\n    while (len - pos >= 2) {\n        cnt += popcnt_uint32(view.getUint16(pos));\n        pos += 2;\n    }\n    while (len - pos >= 1) {\n        cnt += popcnt_uint32(view.getUint8(pos));\n        pos += 1;\n    }\n    return cnt;\n}\n/** @ignore */\nexport function popcnt_uint32(uint32) {\n    let i = uint32 | 0;\n    i = i - ((i >>> 1) & 0x55555555);\n    i = (i & 0x33333333) + ((i >>> 2) & 0x33333333);\n    return (((i + (i >>> 4)) & 0x0F0F0F0F) * 0x01010101) >>> 24;\n}\n\n//# sourceMappingURL=bit.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Data } from './data';\nimport { Vector } from './vector';\nimport { Type, Precision, DateUnit, TimeUnit, IntervalUnit, UnionMode } from './enum';\nimport { DataType, } from './type';\nexport class Visitor {\n    visitMany(nodes, ...args) {\n        return nodes.map((node, i) => this.visit(node, ...args.map((x) => x[i])));\n    }\n    visit(...args) {\n        return this.getVisitFn(args[0], false).apply(this, args);\n    }\n    getVisitFn(node, throwIfNotFound = true) {\n        return getVisitFn(this, node, throwIfNotFound);\n    }\n    visitNull(_node, ..._args) { return null; }\n    visitBool(_node, ..._args) { return null; }\n    visitInt(_node, ..._args) { return null; }\n    visitFloat(_node, ..._args) { return null; }\n    visitUtf8(_node, ..._args) { return null; }\n    visitBinary(_node, ..._args) { return null; }\n    visitFixedSizeBinary(_node, ..._args) { return null; }\n    visitDate(_node, ..._args) { return null; }\n    visitTimestamp(_node, ..._args) { return null; }\n    visitTime(_node, ..._args) { return null; }\n    visitDecimal(_node, ..._args) { return null; }\n    visitList(_node, ..._args) { return null; }\n    visitStruct(_node, ..._args) { return null; }\n    visitUnion(_node, ..._args) { return null; }\n    visitDictionary(_node, ..._args) { return null; }\n    visitInterval(_node, ..._args) { return null; }\n    visitFixedSizeList(_node, ..._args) { return null; }\n    visitMap(_node, ..._args) { return null; }\n}\n/** @ignore */\nfunction getVisitFn(visitor, node, throwIfNotFound = true) {\n    let fn = null;\n    let dtype = Type.NONE;\n    // tslint:disable\n    if (node instanceof Data) {\n        dtype = inferDType(node.type);\n    }\n    else if (node instanceof Vector) {\n        dtype = inferDType(node.type);\n    }\n    else if (node instanceof DataType) {\n        dtype = inferDType(node);\n    }\n    else if (typeof (dtype = node) !== 'number') {\n        dtype = Type[node];\n    }\n    switch (dtype) {\n        case Type.Null:\n            fn = visitor.visitNull;\n            break;\n        case Type.Bool:\n            fn = visitor.visitBool;\n            break;\n        case Type.Int:\n            fn = visitor.visitInt;\n            break;\n        case Type.Int8:\n            fn = visitor.visitInt8 || visitor.visitInt;\n            break;\n        case Type.Int16:\n            fn = visitor.visitInt16 || visitor.visitInt;\n            break;\n        case Type.Int32:\n            fn = visitor.visitInt32 || visitor.visitInt;\n            break;\n        case Type.Int64:\n            fn = visitor.visitInt64 || visitor.visitInt;\n            break;\n        case Type.Uint8:\n            fn = visitor.visitUint8 || visitor.visitInt;\n            break;\n        case Type.Uint16:\n            fn = visitor.visitUint16 || visitor.visitInt;\n            break;\n        case Type.Uint32:\n            fn = visitor.visitUint32 || visitor.visitInt;\n            break;\n        case Type.Uint64:\n            fn = visitor.visitUint64 || visitor.visitInt;\n            break;\n        case Type.Float:\n            fn = visitor.visitFloat;\n            break;\n        case Type.Float16:\n            fn = visitor.visitFloat16 || visitor.visitFloat;\n            break;\n        case Type.Float32:\n            fn = visitor.visitFloat32 || visitor.visitFloat;\n            break;\n        case Type.Float64:\n            fn = visitor.visitFloat64 || visitor.visitFloat;\n            break;\n        case Type.Utf8:\n            fn = visitor.visitUtf8;\n            break;\n        case Type.Binary:\n            fn = visitor.visitBinary;\n            break;\n        case Type.FixedSizeBinary:\n            fn = visitor.visitFixedSizeBinary;\n            break;\n        case Type.Date:\n            fn = visitor.visitDate;\n            break;\n        case Type.DateDay:\n            fn = visitor.visitDateDay || visitor.visitDate;\n            break;\n        case Type.DateMillisecond:\n            fn = visitor.visitDateMillisecond || visitor.visitDate;\n            break;\n        case Type.Timestamp:\n            fn = visitor.visitTimestamp;\n            break;\n        case Type.TimestampSecond:\n            fn = visitor.visitTimestampSecond || visitor.visitTimestamp;\n            break;\n        case Type.TimestampMillisecond:\n            fn = visitor.visitTimestampMillisecond || visitor.visitTimestamp;\n            break;\n        case Type.TimestampMicrosecond:\n            fn = visitor.visitTimestampMicrosecond || visitor.visitTimestamp;\n            break;\n        case Type.TimestampNanosecond:\n            fn = visitor.visitTimestampNanosecond || visitor.visitTimestamp;\n            break;\n        case Type.Time:\n            fn = visitor.visitTime;\n            break;\n        case Type.TimeSecond:\n            fn = visitor.visitTimeSecond || visitor.visitTime;\n            break;\n        case Type.TimeMillisecond:\n            fn = visitor.visitTimeMillisecond || visitor.visitTime;\n            break;\n        case Type.TimeMicrosecond:\n            fn = visitor.visitTimeMicrosecond || visitor.visitTime;\n            break;\n        case Type.TimeNanosecond:\n            fn = visitor.visitTimeNanosecond || visitor.visitTime;\n            break;\n        case Type.Decimal:\n            fn = visitor.visitDecimal;\n            break;\n        case Type.List:\n            fn = visitor.visitList;\n            break;\n        case Type.Struct:\n            fn = visitor.visitStruct;\n            break;\n        case Type.Union:\n            fn = visitor.visitUnion;\n            break;\n        case Type.DenseUnion:\n            fn = visitor.visitDenseUnion || visitor.visitUnion;\n            break;\n        case Type.SparseUnion:\n            fn = visitor.visitSparseUnion || visitor.visitUnion;\n            break;\n        case Type.Dictionary:\n            fn = visitor.visitDictionary;\n            break;\n        case Type.Interval:\n            fn = visitor.visitInterval;\n            break;\n        case Type.IntervalDayTime:\n            fn = visitor.visitIntervalDayTime || visitor.visitInterval;\n            break;\n        case Type.IntervalYearMonth:\n            fn = visitor.visitIntervalYearMonth || visitor.visitInterval;\n            break;\n        case Type.FixedSizeList:\n            fn = visitor.visitFixedSizeList;\n            break;\n        case Type.Map:\n            fn = visitor.visitMap;\n            break;\n    }\n    if (typeof fn === 'function')\n        return fn;\n    if (!throwIfNotFound)\n        return () => null;\n    throw new Error(`Unrecognized type '${Type[dtype]}'`);\n}\n/** @ignore */\nfunction inferDType(type) {\n    switch (type.typeId) {\n        case Type.Null: return Type.Null;\n        case Type.Int:\n            const { bitWidth, isSigned } = type;\n            switch (bitWidth) {\n                case 8: return isSigned ? Type.Int8 : Type.Uint8;\n                case 16: return isSigned ? Type.Int16 : Type.Uint16;\n                case 32: return isSigned ? Type.Int32 : Type.Uint32;\n                case 64: return isSigned ? Type.Int64 : Type.Uint64;\n            }\n            return Type.Int;\n        case Type.Float:\n            switch (type.precision) {\n                case Precision.HALF: return Type.Float16;\n                case Precision.SINGLE: return Type.Float32;\n                case Precision.DOUBLE: return Type.Float64;\n            }\n            return Type.Float;\n        case Type.Binary: return Type.Binary;\n        case Type.Utf8: return Type.Utf8;\n        case Type.Bool: return Type.Bool;\n        case Type.Decimal: return Type.Decimal;\n        case Type.Time:\n            switch (type.unit) {\n                case TimeUnit.SECOND: return Type.TimeSecond;\n                case TimeUnit.MILLISECOND: return Type.TimeMillisecond;\n                case TimeUnit.MICROSECOND: return Type.TimeMicrosecond;\n                case TimeUnit.NANOSECOND: return Type.TimeNanosecond;\n            }\n            return Type.Time;\n        case Type.Timestamp:\n            switch (type.unit) {\n                case TimeUnit.SECOND: return Type.TimestampSecond;\n                case TimeUnit.MILLISECOND: return Type.TimestampMillisecond;\n                case TimeUnit.MICROSECOND: return Type.TimestampMicrosecond;\n                case TimeUnit.NANOSECOND: return Type.TimestampNanosecond;\n            }\n            return Type.Timestamp;\n        case Type.Date:\n            switch (type.unit) {\n                case DateUnit.DAY: return Type.DateDay;\n                case DateUnit.MILLISECOND: return Type.DateMillisecond;\n            }\n            return Type.Date;\n        case Type.Interval:\n            switch (type.unit) {\n                case IntervalUnit.DAY_TIME: return Type.IntervalDayTime;\n                case IntervalUnit.YEAR_MONTH: return Type.IntervalYearMonth;\n            }\n            return Type.Interval;\n        case Type.Map: return Type.Map;\n        case Type.List: return Type.List;\n        case Type.Struct: return Type.Struct;\n        case Type.Union:\n            switch (type.mode) {\n                case UnionMode.Dense: return Type.DenseUnion;\n                case UnionMode.Sparse: return Type.SparseUnion;\n            }\n            return Type.Union;\n        case Type.FixedSizeBinary: return Type.FixedSizeBinary;\n        case Type.FixedSizeList: return Type.FixedSizeList;\n        case Type.Dictionary: return Type.Dictionary;\n    }\n    throw new Error(`Unrecognized type '${Type[type.typeId]}'`);\n}\n// Add these here so they're picked up by the externs creator\n// in the build, and closure-compiler doesn't minify them away\nVisitor.prototype.visitInt8 = null;\nVisitor.prototype.visitInt16 = null;\nVisitor.prototype.visitInt32 = null;\nVisitor.prototype.visitInt64 = null;\nVisitor.prototype.visitUint8 = null;\nVisitor.prototype.visitUint16 = null;\nVisitor.prototype.visitUint32 = null;\nVisitor.prototype.visitUint64 = null;\nVisitor.prototype.visitFloat16 = null;\nVisitor.prototype.visitFloat32 = null;\nVisitor.prototype.visitFloat64 = null;\nVisitor.prototype.visitDateDay = null;\nVisitor.prototype.visitDateMillisecond = null;\nVisitor.prototype.visitTimestampSecond = null;\nVisitor.prototype.visitTimestampMillisecond = null;\nVisitor.prototype.visitTimestampMicrosecond = null;\nVisitor.prototype.visitTimestampNanosecond = null;\nVisitor.prototype.visitTimeSecond = null;\nVisitor.prototype.visitTimeMillisecond = null;\nVisitor.prototype.visitTimeMicrosecond = null;\nVisitor.prototype.visitTimeNanosecond = null;\nVisitor.prototype.visitDenseUnion = null;\nVisitor.prototype.visitSparseUnion = null;\nVisitor.prototype.visitIntervalDayTime = null;\nVisitor.prototype.visitIntervalYearMonth = null;\n\n//# sourceMappingURL=visitor.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Visitor } from '../visitor';\n/** @ignore */\nexport class TypeComparator extends Visitor {\n    compareSchemas(schema, other) {\n        return (schema === other) || (other instanceof schema.constructor &&\n            instance.compareFields(schema.fields, other.fields));\n    }\n    compareFields(fields, others) {\n        return (fields === others) || (Array.isArray(fields) &&\n            Array.isArray(others) &&\n            fields.length === others.length &&\n            fields.every((f, i) => instance.compareField(f, others[i])));\n    }\n    compareField(field, other) {\n        return (field === other) || (other instanceof field.constructor &&\n            field.name === other.name &&\n            field.nullable === other.nullable &&\n            instance.visit(field.type, other.type));\n    }\n}\nfunction compareConstructor(type, other) {\n    return other instanceof type.constructor;\n}\nfunction compareAny(type, other) {\n    return (type === other) || compareConstructor(type, other);\n}\nfunction compareInt(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.bitWidth === other.bitWidth &&\n        type.isSigned === other.isSigned);\n}\nfunction compareFloat(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.precision === other.precision);\n}\nfunction compareFixedSizeBinary(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.byteWidth === other.byteWidth);\n}\nfunction compareDate(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.unit === other.unit);\n}\nfunction compareTimestamp(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.unit === other.unit &&\n        type.timezone === other.timezone);\n}\nfunction compareTime(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.unit === other.unit &&\n        type.bitWidth === other.bitWidth);\n}\nfunction compareList(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.children.length === other.children.length &&\n        instance.compareFields(type.children, other.children));\n}\nfunction compareStruct(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.children.length === other.children.length &&\n        instance.compareFields(type.children, other.children));\n}\nfunction compareUnion(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.mode === other.mode &&\n        type.typeIds.every((x, i) => x === other.typeIds[i]) &&\n        instance.compareFields(type.children, other.children));\n}\nfunction compareDictionary(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.id === other.id &&\n        type.isOrdered === other.isOrdered &&\n        instance.visit(type.indices, other.indices) &&\n        instance.visit(type.dictionary, other.dictionary));\n}\nfunction compareInterval(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.unit === other.unit);\n}\nfunction compareFixedSizeList(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.listSize === other.listSize &&\n        type.children.length === other.children.length &&\n        instance.compareFields(type.children, other.children));\n}\nfunction compareMap(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.keysSorted === other.keysSorted &&\n        type.children.length === other.children.length &&\n        instance.compareFields(type.children, other.children));\n}\nTypeComparator.prototype.visitNull = compareAny;\nTypeComparator.prototype.visitBool = compareAny;\nTypeComparator.prototype.visitInt = compareInt;\nTypeComparator.prototype.visitInt8 = compareInt;\nTypeComparator.prototype.visitInt16 = compareInt;\nTypeComparator.prototype.visitInt32 = compareInt;\nTypeComparator.prototype.visitInt64 = compareInt;\nTypeComparator.prototype.visitUint8 = compareInt;\nTypeComparator.prototype.visitUint16 = compareInt;\nTypeComparator.prototype.visitUint32 = compareInt;\nTypeComparator.prototype.visitUint64 = compareInt;\nTypeComparator.prototype.visitFloat = compareFloat;\nTypeComparator.prototype.visitFloat16 = compareFloat;\nTypeComparator.prototype.visitFloat32 = compareFloat;\nTypeComparator.prototype.visitFloat64 = compareFloat;\nTypeComparator.prototype.visitUtf8 = compareAny;\nTypeComparator.prototype.visitBinary = compareAny;\nTypeComparator.prototype.visitFixedSizeBinary = compareFixedSizeBinary;\nTypeComparator.prototype.visitDate = compareDate;\nTypeComparator.prototype.visitDateDay = compareDate;\nTypeComparator.prototype.visitDateMillisecond = compareDate;\nTypeComparator.prototype.visitTimestamp = compareTimestamp;\nTypeComparator.prototype.visitTimestampSecond = compareTimestamp;\nTypeComparator.prototype.visitTimestampMillisecond = compareTimestamp;\nTypeComparator.prototype.visitTimestampMicrosecond = compareTimestamp;\nTypeComparator.prototype.visitTimestampNanosecond = compareTimestamp;\nTypeComparator.prototype.visitTime = compareTime;\nTypeComparator.prototype.visitTimeSecond = compareTime;\nTypeComparator.prototype.visitTimeMillisecond = compareTime;\nTypeComparator.prototype.visitTimeMicrosecond = compareTime;\nTypeComparator.prototype.visitTimeNanosecond = compareTime;\nTypeComparator.prototype.visitDecimal = compareAny;\nTypeComparator.prototype.visitList = compareList;\nTypeComparator.prototype.visitStruct = compareStruct;\nTypeComparator.prototype.visitUnion = compareUnion;\nTypeComparator.prototype.visitDenseUnion = compareUnion;\nTypeComparator.prototype.visitSparseUnion = compareUnion;\nTypeComparator.prototype.visitDictionary = compareDictionary;\nTypeComparator.prototype.visitInterval = compareInterval;\nTypeComparator.prototype.visitIntervalDayTime = compareInterval;\nTypeComparator.prototype.visitIntervalYearMonth = compareInterval;\nTypeComparator.prototype.visitFixedSizeList = compareFixedSizeList;\nTypeComparator.prototype.visitMap = compareMap;\n/** @ignore */\nexport const instance = new TypeComparator();\n\n//# sourceMappingURL=typecomparator.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { instance as comparer } from './visitor/typecomparator';\nimport { Type, Precision, UnionMode, DateUnit, TimeUnit, IntervalUnit } from './enum';\n/**\n * An abstract base class for classes that encapsulate metadata about each of\n * the logical types that Arrow can represent.\n */\nexport class DataType {\n    /** @nocollapse */ static isNull(x) { return x && x.typeId === Type.Null; }\n    /** @nocollapse */ static isInt(x) { return x && x.typeId === Type.Int; }\n    /** @nocollapse */ static isFloat(x) { return x && x.typeId === Type.Float; }\n    /** @nocollapse */ static isBinary(x) { return x && x.typeId === Type.Binary; }\n    /** @nocollapse */ static isUtf8(x) { return x && x.typeId === Type.Utf8; }\n    /** @nocollapse */ static isBool(x) { return x && x.typeId === Type.Bool; }\n    /** @nocollapse */ static isDecimal(x) { return x && x.typeId === Type.Decimal; }\n    /** @nocollapse */ static isDate(x) { return x && x.typeId === Type.Date; }\n    /** @nocollapse */ static isTime(x) { return x && x.typeId === Type.Time; }\n    /** @nocollapse */ static isTimestamp(x) { return x && x.typeId === Type.Timestamp; }\n    /** @nocollapse */ static isInterval(x) { return x && x.typeId === Type.Interval; }\n    /** @nocollapse */ static isList(x) { return x && x.typeId === Type.List; }\n    /** @nocollapse */ static isStruct(x) { return x && x.typeId === Type.Struct; }\n    /** @nocollapse */ static isUnion(x) { return x && x.typeId === Type.Union; }\n    /** @nocollapse */ static isFixedSizeBinary(x) { return x && x.typeId === Type.FixedSizeBinary; }\n    /** @nocollapse */ static isFixedSizeList(x) { return x && x.typeId === Type.FixedSizeList; }\n    /** @nocollapse */ static isMap(x) { return x && x.typeId === Type.Map; }\n    /** @nocollapse */ static isDictionary(x) { return x && x.typeId === Type.Dictionary; }\n    get typeId() { return Type.NONE; }\n    compareTo(other) {\n        return comparer.visit(this, other);\n    }\n}\nDataType[Symbol.toStringTag] = ((proto) => {\n    proto.children = null;\n    proto.ArrayType = Array;\n    return proto[Symbol.toStringTag] = 'DataType';\n})(DataType.prototype);\n/** @ignore */\nexport class Null extends DataType {\n    toString() { return `Null`; }\n    get typeId() { return Type.Null; }\n}\nNull[Symbol.toStringTag] = ((proto) => {\n    return proto[Symbol.toStringTag] = 'Null';\n})(Null.prototype);\n/** @ignore */\nclass Int_ extends DataType {\n    constructor(isSigned, bitWidth) {\n        super();\n        this.isSigned = isSigned;\n        this.bitWidth = bitWidth;\n    }\n    get typeId() { return Type.Int; }\n    get ArrayType() {\n        switch (this.bitWidth) {\n            case 8: return this.isSigned ? Int8Array : Uint8Array;\n            case 16: return this.isSigned ? Int16Array : Uint16Array;\n            case 32: return this.isSigned ? Int32Array : Uint32Array;\n            case 64: return this.isSigned ? Int32Array : Uint32Array;\n        }\n        throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n    }\n    toString() { return `${this.isSigned ? `I` : `Ui`}nt${this.bitWidth}`; }\n}\nInt_[Symbol.toStringTag] = ((proto) => {\n    proto.isSigned = null;\n    proto.bitWidth = null;\n    return proto[Symbol.toStringTag] = 'Int';\n})(Int_.prototype);\nexport { Int_ as Int };\n/** @ignore */\nexport class Int8 extends Int_ {\n    constructor() { super(true, 8); }\n}\n/** @ignore */\nexport class Int16 extends Int_ {\n    constructor() { super(true, 16); }\n}\n/** @ignore */\nexport class Int32 extends Int_ {\n    constructor() { super(true, 32); }\n}\n/** @ignore */\nexport class Int64 extends Int_ {\n    constructor() { super(true, 64); }\n}\n/** @ignore */\nexport class Uint8 extends Int_ {\n    constructor() { super(false, 8); }\n}\n/** @ignore */\nexport class Uint16 extends Int_ {\n    constructor() { super(false, 16); }\n}\n/** @ignore */\nexport class Uint32 extends Int_ {\n    constructor() { super(false, 32); }\n}\n/** @ignore */\nexport class Uint64 extends Int_ {\n    constructor() { super(false, 64); }\n}\nObject.defineProperty(Int8.prototype, 'ArrayType', { value: Int8Array });\nObject.defineProperty(Int16.prototype, 'ArrayType', { value: Int16Array });\nObject.defineProperty(Int32.prototype, 'ArrayType', { value: Int32Array });\nObject.defineProperty(Int64.prototype, 'ArrayType', { value: Int32Array });\nObject.defineProperty(Uint8.prototype, 'ArrayType', { value: Uint8Array });\nObject.defineProperty(Uint16.prototype, 'ArrayType', { value: Uint16Array });\nObject.defineProperty(Uint32.prototype, 'ArrayType', { value: Uint32Array });\nObject.defineProperty(Uint64.prototype, 'ArrayType', { value: Uint32Array });\n/** @ignore */\nexport class Float extends DataType {\n    constructor(precision) {\n        super();\n        this.precision = precision;\n    }\n    get typeId() { return Type.Float; }\n    get ArrayType() {\n        switch (this.precision) {\n            case Precision.HALF: return Uint16Array;\n            case Precision.SINGLE: return Float32Array;\n            case Precision.DOUBLE: return Float64Array;\n        }\n        throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n    }\n    toString() { return `Float${(this.precision << 5) || 16}`; }\n}\nFloat[Symbol.toStringTag] = ((proto) => {\n    proto.precision = null;\n    return proto[Symbol.toStringTag] = 'Float';\n})(Float.prototype);\n/** @ignore */\nexport class Float16 extends Float {\n    constructor() { super(Precision.HALF); }\n}\n/** @ignore */\nexport class Float32 extends Float {\n    constructor() { super(Precision.SINGLE); }\n}\n/** @ignore */\nexport class Float64 extends Float {\n    constructor() { super(Precision.DOUBLE); }\n}\nObject.defineProperty(Float16.prototype, 'ArrayType', { value: Uint16Array });\nObject.defineProperty(Float32.prototype, 'ArrayType', { value: Float32Array });\nObject.defineProperty(Float64.prototype, 'ArrayType', { value: Float64Array });\n/** @ignore */\nexport class Binary extends DataType {\n    constructor() {\n        super();\n    }\n    get typeId() { return Type.Binary; }\n    toString() { return `Binary`; }\n}\nBinary[Symbol.toStringTag] = ((proto) => {\n    proto.ArrayType = Uint8Array;\n    return proto[Symbol.toStringTag] = 'Binary';\n})(Binary.prototype);\n/** @ignore */\nexport class Utf8 extends DataType {\n    constructor() {\n        super();\n    }\n    get typeId() { return Type.Utf8; }\n    toString() { return `Utf8`; }\n}\nUtf8[Symbol.toStringTag] = ((proto) => {\n    proto.ArrayType = Uint8Array;\n    return proto[Symbol.toStringTag] = 'Utf8';\n})(Utf8.prototype);\n/** @ignore */\nexport class Bool extends DataType {\n    constructor() {\n        super();\n    }\n    get typeId() { return Type.Bool; }\n    toString() { return `Bool`; }\n}\nBool[Symbol.toStringTag] = ((proto) => {\n    proto.ArrayType = Uint8Array;\n    return proto[Symbol.toStringTag] = 'Bool';\n})(Bool.prototype);\n/** @ignore */\nexport class Decimal extends DataType {\n    constructor(scale, precision) {\n        super();\n        this.scale = scale;\n        this.precision = precision;\n    }\n    get typeId() { return Type.Decimal; }\n    toString() { return `Decimal[${this.precision}e${this.scale > 0 ? `+` : ``}${this.scale}]`; }\n}\nDecimal[Symbol.toStringTag] = ((proto) => {\n    proto.scale = null;\n    proto.precision = null;\n    proto.ArrayType = Uint32Array;\n    return proto[Symbol.toStringTag] = 'Decimal';\n})(Decimal.prototype);\n/** @ignore */\nexport class Date_ extends DataType {\n    constructor(unit) {\n        super();\n        this.unit = unit;\n    }\n    get typeId() { return Type.Date; }\n    toString() { return `Date${(this.unit + 1) * 32}<${DateUnit[this.unit]}>`; }\n}\nDate_[Symbol.toStringTag] = ((proto) => {\n    proto.unit = null;\n    proto.ArrayType = Int32Array;\n    return proto[Symbol.toStringTag] = 'Date';\n})(Date_.prototype);\n/** @ignore */\nexport class DateDay extends Date_ {\n    constructor() { super(DateUnit.DAY); }\n}\n/** @ignore */\nexport class DateMillisecond extends Date_ {\n    constructor() { super(DateUnit.MILLISECOND); }\n}\n/** @ignore */\nclass Time_ extends DataType {\n    constructor(unit, bitWidth) {\n        super();\n        this.unit = unit;\n        this.bitWidth = bitWidth;\n    }\n    get typeId() { return Type.Time; }\n    toString() { return `Time${this.bitWidth}<${TimeUnit[this.unit]}>`; }\n}\nTime_[Symbol.toStringTag] = ((proto) => {\n    proto.unit = null;\n    proto.bitWidth = null;\n    proto.ArrayType = Int32Array;\n    return proto[Symbol.toStringTag] = 'Time';\n})(Time_.prototype);\nexport { Time_ as Time };\n/** @ignore */\nexport class TimeSecond extends Time_ {\n    constructor() { super(TimeUnit.SECOND, 32); }\n}\n/** @ignore */\nexport class TimeMillisecond extends Time_ {\n    constructor() { super(TimeUnit.MILLISECOND, 32); }\n}\n/** @ignore */\nexport class TimeMicrosecond extends Time_ {\n    constructor() { super(TimeUnit.MICROSECOND, 64); }\n}\n/** @ignore */\nexport class TimeNanosecond extends Time_ {\n    constructor() { super(TimeUnit.NANOSECOND, 64); }\n}\n/** @ignore */\nclass Timestamp_ extends DataType {\n    constructor(unit, timezone) {\n        super();\n        this.unit = unit;\n        this.timezone = timezone;\n    }\n    get typeId() { return Type.Timestamp; }\n    toString() { return `Timestamp<${TimeUnit[this.unit]}${this.timezone ? `, ${this.timezone}` : ``}>`; }\n}\nTimestamp_[Symbol.toStringTag] = ((proto) => {\n    proto.unit = null;\n    proto.timezone = null;\n    proto.ArrayType = Int32Array;\n    return proto[Symbol.toStringTag] = 'Timestamp';\n})(Timestamp_.prototype);\nexport { Timestamp_ as Timestamp };\n/** @ignore */\nexport class TimestampSecond extends Timestamp_ {\n    constructor(timezone) { super(TimeUnit.SECOND, timezone); }\n}\n/** @ignore */\nexport class TimestampMillisecond extends Timestamp_ {\n    constructor(timezone) { super(TimeUnit.MILLISECOND, timezone); }\n}\n/** @ignore */\nexport class TimestampMicrosecond extends Timestamp_ {\n    constructor(timezone) { super(TimeUnit.MICROSECOND, timezone); }\n}\n/** @ignore */\nexport class TimestampNanosecond extends Timestamp_ {\n    constructor(timezone) { super(TimeUnit.NANOSECOND, timezone); }\n}\n/** @ignore */\nclass Interval_ extends DataType {\n    constructor(unit) {\n        super();\n        this.unit = unit;\n    }\n    get typeId() { return Type.Interval; }\n    toString() { return `Interval<${IntervalUnit[this.unit]}>`; }\n}\nInterval_[Symbol.toStringTag] = ((proto) => {\n    proto.unit = null;\n    proto.ArrayType = Int32Array;\n    return proto[Symbol.toStringTag] = 'Interval';\n})(Interval_.prototype);\nexport { Interval_ as Interval };\n/** @ignore */\nexport class IntervalDayTime extends Interval_ {\n    constructor() { super(IntervalUnit.DAY_TIME); }\n}\n/** @ignore */\nexport class IntervalYearMonth extends Interval_ {\n    constructor() { super(IntervalUnit.YEAR_MONTH); }\n}\n/** @ignore */\nexport class List extends DataType {\n    constructor(child) {\n        super();\n        this.children = [child];\n    }\n    get typeId() { return Type.List; }\n    toString() { return `List<${this.valueType}>`; }\n    get valueType() { return this.children[0].type; }\n    get valueField() { return this.children[0]; }\n    get ArrayType() { return this.valueType.ArrayType; }\n}\nList[Symbol.toStringTag] = ((proto) => {\n    proto.children = null;\n    return proto[Symbol.toStringTag] = 'List';\n})(List.prototype);\n/** @ignore */\nexport class Struct extends DataType {\n    constructor(children) {\n        super();\n        this.children = children;\n    }\n    get typeId() { return Type.Struct; }\n    toString() { return `Struct<{${this.children.map((f) => `${f.name}:${f.type}`).join(`, `)}}>`; }\n}\nStruct[Symbol.toStringTag] = ((proto) => {\n    proto.children = null;\n    return proto[Symbol.toStringTag] = 'Struct';\n})(Struct.prototype);\n/** @ignore */\nclass Union_ extends DataType {\n    constructor(mode, typeIds, children) {\n        super();\n        this.mode = mode;\n        this.children = children;\n        this.typeIds = typeIds = Int32Array.from(typeIds);\n        this.typeIdToChildIndex = typeIds.reduce((typeIdToChildIndex, typeId, idx) => {\n            return (typeIdToChildIndex[typeId] = idx) && typeIdToChildIndex || typeIdToChildIndex;\n        }, Object.create(null));\n    }\n    get typeId() { return Type.Union; }\n    toString() {\n        return `${this[Symbol.toStringTag]}<${this.children.map((x) => `${x.type}`).join(` | `)}>`;\n    }\n}\nUnion_[Symbol.toStringTag] = ((proto) => {\n    proto.mode = null;\n    proto.typeIds = null;\n    proto.children = null;\n    proto.typeIdToChildIndex = null;\n    proto.ArrayType = Int8Array;\n    return proto[Symbol.toStringTag] = 'Union';\n})(Union_.prototype);\nexport { Union_ as Union };\n/** @ignore */\nexport class DenseUnion extends Union_ {\n    constructor(typeIds, children) {\n        super(UnionMode.Dense, typeIds, children);\n    }\n}\n/** @ignore */\nexport class SparseUnion extends Union_ {\n    constructor(typeIds, children) {\n        super(UnionMode.Sparse, typeIds, children);\n    }\n}\n/** @ignore */\nexport class FixedSizeBinary extends DataType {\n    constructor(byteWidth) {\n        super();\n        this.byteWidth = byteWidth;\n    }\n    get typeId() { return Type.FixedSizeBinary; }\n    toString() { return `FixedSizeBinary[${this.byteWidth}]`; }\n}\nFixedSizeBinary[Symbol.toStringTag] = ((proto) => {\n    proto.byteWidth = null;\n    proto.ArrayType = Uint8Array;\n    return proto[Symbol.toStringTag] = 'FixedSizeBinary';\n})(FixedSizeBinary.prototype);\n/** @ignore */\nexport class FixedSizeList extends DataType {\n    constructor(listSize, child) {\n        super();\n        this.listSize = listSize;\n        this.children = [child];\n    }\n    get typeId() { return Type.FixedSizeList; }\n    get valueType() { return this.children[0].type; }\n    get valueField() { return this.children[0]; }\n    get ArrayType() { return this.valueType.ArrayType; }\n    toString() { return `FixedSizeList[${this.listSize}]<${this.valueType}>`; }\n}\nFixedSizeList[Symbol.toStringTag] = ((proto) => {\n    proto.children = null;\n    proto.listSize = null;\n    return proto[Symbol.toStringTag] = 'FixedSizeList';\n})(FixedSizeList.prototype);\n/** @ignore */\nexport class Map_ extends DataType {\n    constructor(child, keysSorted = false) {\n        super();\n        this.children = [child];\n        this.keysSorted = keysSorted;\n    }\n    get typeId() { return Type.Map; }\n    get keyType() { return this.children[0].type.children[0].type; }\n    get valueType() { return this.children[0].type.children[1].type; }\n    toString() { return `Map<{${this.children[0].type.children.map((f) => `${f.name}:${f.type}`).join(`, `)}}>`; }\n}\nMap_[Symbol.toStringTag] = ((proto) => {\n    proto.children = null;\n    proto.keysSorted = null;\n    return proto[Symbol.toStringTag] = 'Map_';\n})(Map_.prototype);\n/** @ignore */\nconst getId = ((atomicDictionaryId) => () => ++atomicDictionaryId)(-1);\n/** @ignore */\nexport class Dictionary extends DataType {\n    constructor(dictionary, indices, id, isOrdered) {\n        super();\n        this.indices = indices;\n        this.dictionary = dictionary;\n        this.isOrdered = isOrdered || false;\n        this.id = id == null ? getId() : typeof id === 'number' ? id : id.low;\n    }\n    get typeId() { return Type.Dictionary; }\n    get children() { return this.dictionary.children; }\n    get valueType() { return this.dictionary; }\n    get ArrayType() { return this.dictionary.ArrayType; }\n    toString() { return `Dictionary<${this.indices}, ${this.dictionary}>`; }\n}\nDictionary[Symbol.toStringTag] = ((proto) => {\n    proto.id = null;\n    proto.indices = null;\n    proto.isOrdered = null;\n    proto.dictionary = null;\n    return proto[Symbol.toStringTag] = 'Dictionary';\n})(Dictionary.prototype);\n/** @ignore */\nexport function strideForType(type) {\n    let t = type;\n    switch (type.typeId) {\n        case Type.Decimal: return 4;\n        case Type.Timestamp: return 2;\n        case Type.Date: return 1 + t.unit;\n        case Type.Interval: return 1 + t.unit;\n        case Type.Int: return 1 + +(t.bitWidth > 32);\n        case Type.Time: return 1 + +(t.bitWidth > 32);\n        case Type.FixedSizeList: return t.listSize;\n        case Type.FixedSizeBinary: return t.byteWidth;\n        default: return 1;\n    }\n}\n\n//# sourceMappingURL=type.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { truncateBitmap } from './util/bit';\nimport { popcnt_bit_range } from './util/bit';\nimport { BufferType, UnionMode, Type } from './enum';\nimport { strideForType } from './type';\nimport { toArrayBufferView, toUint8Array, toInt32Array } from './util/buffer';\n/** @ignore */ export const kUnknownNullCount = -1;\n/** @ignore */\nexport class Data {\n    constructor(type, offset, length, nullCount, buffers, childData, dictionary) {\n        this.type = type;\n        this.dictionary = dictionary;\n        this.offset = Math.floor(Math.max(offset || 0, 0));\n        this.length = Math.floor(Math.max(length || 0, 0));\n        this._nullCount = Math.floor(Math.max(nullCount || 0, -1));\n        this.childData = (childData || []).map((x) => x instanceof Data ? x : x.data);\n        let buffer;\n        if (buffers instanceof Data) {\n            this.stride = buffers.stride;\n            this.values = buffers.values;\n            this.typeIds = buffers.typeIds;\n            this.nullBitmap = buffers.nullBitmap;\n            this.valueOffsets = buffers.valueOffsets;\n        }\n        else {\n            this.stride = strideForType(type);\n            if (buffers) {\n                (buffer = buffers[0]) && (this.valueOffsets = buffer);\n                (buffer = buffers[1]) && (this.values = buffer);\n                (buffer = buffers[2]) && (this.nullBitmap = buffer);\n                (buffer = buffers[3]) && (this.typeIds = buffer);\n            }\n        }\n    }\n    get typeId() { return this.type.typeId; }\n    get ArrayType() { return this.type.ArrayType; }\n    get buffers() {\n        return [this.valueOffsets, this.values, this.nullBitmap, this.typeIds];\n    }\n    get byteLength() {\n        let byteLength = 0;\n        let { valueOffsets, values, nullBitmap, typeIds } = this;\n        valueOffsets && (byteLength += valueOffsets.byteLength);\n        values && (byteLength += values.byteLength);\n        nullBitmap && (byteLength += nullBitmap.byteLength);\n        typeIds && (byteLength += typeIds.byteLength);\n        return this.childData.reduce((byteLength, child) => byteLength + child.byteLength, byteLength);\n    }\n    get nullCount() {\n        let nullCount = this._nullCount;\n        let nullBitmap;\n        if (nullCount <= kUnknownNullCount && (nullBitmap = this.nullBitmap)) {\n            this._nullCount = nullCount = this.length - popcnt_bit_range(nullBitmap, this.offset, this.offset + this.length);\n        }\n        return nullCount;\n    }\n    clone(type, offset = this.offset, length = this.length, nullCount = this._nullCount, buffers = this, childData = this.childData) {\n        return new Data(type, offset, length, nullCount, buffers, childData, this.dictionary);\n    }\n    slice(offset, length) {\n        const { stride, typeId, childData } = this;\n        // +true === 1, +false === 0, so this means\n        // we keep nullCount at 0 if it's already 0,\n        // otherwise set to the invalidated flag -1\n        const nullCount = +(this._nullCount === 0) - 1;\n        const childStride = typeId === 16 /* FixedSizeList */ ? stride : 1;\n        const buffers = this._sliceBuffers(offset, length, stride, typeId);\n        return this.clone(this.type, this.offset + offset, length, nullCount, buffers, \n        // Don't slice children if we have value offsets (the variable-width types)\n        (!childData.length || this.valueOffsets) ? childData : this._sliceChildren(childData, childStride * offset, childStride * length));\n    }\n    _changeLengthAndBackfillNullBitmap(newLength) {\n        if (this.typeId === Type.Null) {\n            return this.clone(this.type, 0, newLength, 0);\n        }\n        const { length, nullCount } = this;\n        // start initialized with 0s (nulls), then fill from 0 to length with 1s (not null)\n        const bitmap = new Uint8Array(((newLength + 63) & ~63) >> 3).fill(255, 0, length >> 3);\n        // set all the bits in the last byte (up to bit `length - length % 8`) to 1 (not null)\n        bitmap[length >> 3] = (1 << (length - (length & ~7))) - 1;\n        // if we have a nullBitmap, truncate + slice and set it over the pre-filled 1s\n        if (nullCount > 0) {\n            bitmap.set(truncateBitmap(this.offset, length, this.nullBitmap), 0);\n        }\n        const buffers = this.buffers;\n        buffers[BufferType.VALIDITY] = bitmap;\n        return this.clone(this.type, 0, newLength, nullCount + (newLength - length), buffers);\n    }\n    _sliceBuffers(offset, length, stride, typeId) {\n        let arr, { buffers } = this;\n        // If typeIds exist, slice the typeIds buffer\n        (arr = buffers[BufferType.TYPE]) && (buffers[BufferType.TYPE] = arr.subarray(offset, offset + length));\n        // If offsets exist, only slice the offsets buffer\n        (arr = buffers[BufferType.OFFSET]) && (buffers[BufferType.OFFSET] = arr.subarray(offset, offset + length + 1)) ||\n            // Otherwise if no offsets, slice the data buffer. Don't slice the data vector for Booleans, since the offset goes by bits not bytes\n            (arr = buffers[BufferType.DATA]) && (buffers[BufferType.DATA] = typeId === 6 ? arr : arr.subarray(stride * offset, stride * (offset + length)));\n        return buffers;\n    }\n    _sliceChildren(childData, offset, length) {\n        return childData.map((child) => child.slice(offset, length));\n    }\n    //\n    // Convenience methods for creating Data instances for each of the Arrow Vector types\n    //\n    /** @nocollapse */\n    static new(type, offset, length, nullCount, buffers, childData, dictionary) {\n        if (buffers instanceof Data) {\n            buffers = buffers.buffers;\n        }\n        else if (!buffers) {\n            buffers = [];\n        }\n        switch (type.typeId) {\n            case Type.Null: return Data.Null(type, offset, length);\n            case Type.Int: return Data.Int(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []);\n            case Type.Dictionary: return Data.Dictionary(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || [], dictionary);\n            case Type.Float: return Data.Float(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []);\n            case Type.Bool: return Data.Bool(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []);\n            case Type.Decimal: return Data.Decimal(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []);\n            case Type.Date: return Data.Date(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []);\n            case Type.Time: return Data.Time(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []);\n            case Type.Timestamp: return Data.Timestamp(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []);\n            case Type.Interval: return Data.Interval(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []);\n            case Type.FixedSizeBinary: return Data.FixedSizeBinary(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []);\n            case Type.Binary: return Data.Binary(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.OFFSET] || [], buffers[BufferType.DATA] || []);\n            case Type.Utf8: return Data.Utf8(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.OFFSET] || [], buffers[BufferType.DATA] || []);\n            case Type.List: return Data.List(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.OFFSET] || [], (childData || [])[0]);\n            case Type.FixedSizeList: return Data.FixedSizeList(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], (childData || [])[0]);\n            case Type.Struct: return Data.Struct(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], childData || []);\n            case Type.Map: return Data.Map(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.OFFSET] || [], (childData || [])[0]);\n            case Type.Union: return Data.Union(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.TYPE] || [], buffers[BufferType.OFFSET] || childData, childData);\n        }\n        throw new Error(`Unrecognized typeId ${type.typeId}`);\n    }\n    /** @nocollapse */\n    static Null(type, offset, length) {\n        return new Data(type, offset, length, 0);\n    }\n    /** @nocollapse */\n    static Int(type, offset, length, nullCount, nullBitmap, data) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    static Dictionary(type, offset, length, nullCount, nullBitmap, data, dictionary) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.indices.ArrayType, data), toUint8Array(nullBitmap)], [], dictionary);\n    }\n    /** @nocollapse */\n    static Float(type, offset, length, nullCount, nullBitmap, data) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    static Bool(type, offset, length, nullCount, nullBitmap, data) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    static Decimal(type, offset, length, nullCount, nullBitmap, data) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    static Date(type, offset, length, nullCount, nullBitmap, data) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    static Time(type, offset, length, nullCount, nullBitmap, data) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    static Timestamp(type, offset, length, nullCount, nullBitmap, data) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    static Interval(type, offset, length, nullCount, nullBitmap, data) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    static FixedSizeBinary(type, offset, length, nullCount, nullBitmap, data) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    static Binary(type, offset, length, nullCount, nullBitmap, valueOffsets, data) {\n        return new Data(type, offset, length, nullCount, [toInt32Array(valueOffsets), toUint8Array(data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    static Utf8(type, offset, length, nullCount, nullBitmap, valueOffsets, data) {\n        return new Data(type, offset, length, nullCount, [toInt32Array(valueOffsets), toUint8Array(data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    static List(type, offset, length, nullCount, nullBitmap, valueOffsets, child) {\n        return new Data(type, offset, length, nullCount, [toInt32Array(valueOffsets), undefined, toUint8Array(nullBitmap)], [child]);\n    }\n    /** @nocollapse */\n    static FixedSizeList(type, offset, length, nullCount, nullBitmap, child) {\n        return new Data(type, offset, length, nullCount, [undefined, undefined, toUint8Array(nullBitmap)], [child]);\n    }\n    /** @nocollapse */\n    static Struct(type, offset, length, nullCount, nullBitmap, children) {\n        return new Data(type, offset, length, nullCount, [undefined, undefined, toUint8Array(nullBitmap)], children);\n    }\n    /** @nocollapse */\n    static Map(type, offset, length, nullCount, nullBitmap, valueOffsets, child) {\n        return new Data(type, offset, length, nullCount, [toInt32Array(valueOffsets), undefined, toUint8Array(nullBitmap)], [child]);\n    }\n    /** @nocollapse */\n    static Union(type, offset, length, nullCount, nullBitmap, typeIds, valueOffsetsOrChildren, children) {\n        const buffers = [\n            undefined, undefined,\n            toUint8Array(nullBitmap),\n            toArrayBufferView(type.ArrayType, typeIds)\n        ];\n        if (type.mode === UnionMode.Sparse) {\n            return new Data(type, offset, length, nullCount, buffers, valueOffsetsOrChildren);\n        }\n        buffers[BufferType.OFFSET] = toInt32Array(valueOffsetsOrChildren);\n        return new Data(type, offset, length, nullCount, buffers, children);\n    }\n}\nData.prototype.childData = Object.freeze([]);\n\n//# sourceMappingURL=data.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n/** @ignore */ const undf = void (0);\n/** @ignore */\nexport function valueToString(x) {\n    if (x === null) {\n        return 'null';\n    }\n    if (x === undf) {\n        return 'undefined';\n    }\n    switch (typeof x) {\n        case 'number': return `${x}`;\n        case 'bigint': return `${x}`;\n        case 'string': return `\"${x}\"`;\n    }\n    // If [Symbol.toPrimitive] is implemented (like in BN)\n    // use it instead of JSON.stringify(). This ensures we\n    // print BigInts, Decimals, and Binary in their native\n    // representation\n    if (typeof x[Symbol.toPrimitive] === 'function') {\n        return x[Symbol.toPrimitive]('string');\n    }\n    return ArrayBuffer.isView(x) ? `[${x}]` : JSON.stringify(x);\n}\n\n//# sourceMappingURL=pretty.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { valueToString } from '../util/pretty';\nimport { BigIntAvailable } from '../util/compat';\n/**\n * Dynamically compile the null values into an `isValid()` function whose\n * implementation is a switch statement. Microbenchmarks in v8 indicate\n * this approach is 25% faster than using an ES6 Map.\n *\n * @example\n * console.log(createIsValidFunction([null, 'N/A', NaN]));\n * `function (x) {\n *     if (x !== x) return false;\n *     switch (x) {\n *         case null:\n *         case \"N/A\":\n *             return false;\n *     }\n *     return true;\n * }`\n *\n * @ignore\n * @param nullValues\n */\nexport function createIsValidFunction(nullValues) {\n    if (!nullValues || nullValues.length <= 0) {\n        // @ts-ignore\n        return function isValid(value) { return true; };\n    }\n    let fnBody = '';\n    let noNaNs = nullValues.filter((x) => x === x);\n    if (noNaNs.length > 0) {\n        fnBody = `\n    switch (x) {${noNaNs.map((x) => `\n        case ${valueToCase(x)}:`).join('')}\n            return false;\n    }`;\n    }\n    // NaN doesn't equal anything including itself, so it doesn't work as a\n    // switch case. Instead we must explicitly check for NaN before the switch.\n    if (nullValues.length !== noNaNs.length) {\n        fnBody = `if (x !== x) return false;\\n${fnBody}`;\n    }\n    return new Function(`x`, `${fnBody}\\nreturn true;`);\n}\n/** @ignore */\nfunction valueToCase(x) {\n    if (typeof x !== 'bigint') {\n        return valueToString(x);\n    }\n    else if (BigIntAvailable) {\n        return `${valueToString(x)}n`;\n    }\n    return `\"${valueToString(x)}\"`;\n}\n\n//# sourceMappingURL=valid.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { memcpy } from '../util/buffer';\nimport { BigIntAvailable, BigInt64Array, BigUint64Array } from '../util/compat';\n/** @ignore */\nconst roundLengthUpToNearest64Bytes = (len, BPE) => ((((len * BPE) + 63) & ~63) || 64) / BPE;\n/** @ignore */\nconst sliceOrExtendArray = (arr, len = 0) => (arr.length >= len ? arr.subarray(0, len) : memcpy(new arr.constructor(len), arr, 0));\n/** @ignore */\nexport class BufferBuilder {\n    constructor(buffer, stride = 1) {\n        this.buffer = buffer;\n        this.stride = stride;\n        this.BYTES_PER_ELEMENT = buffer.BYTES_PER_ELEMENT;\n        this.ArrayType = buffer.constructor;\n        this._resize(this.length = buffer.length / stride | 0);\n    }\n    get byteLength() { return this.length * this.stride * this.BYTES_PER_ELEMENT | 0; }\n    get reservedLength() { return this.buffer.length / this.stride; }\n    get reservedByteLength() { return this.buffer.byteLength; }\n    // @ts-ignore\n    set(index, value) { return this; }\n    append(value) { return this.set(this.length, value); }\n    reserve(extra) {\n        if (extra > 0) {\n            this.length += extra;\n            const stride = this.stride;\n            const length = this.length * stride;\n            const reserved = this.buffer.length;\n            if (length >= reserved) {\n                this._resize(reserved === 0\n                    ? roundLengthUpToNearest64Bytes(length * 1, this.BYTES_PER_ELEMENT)\n                    : roundLengthUpToNearest64Bytes(length * 2, this.BYTES_PER_ELEMENT));\n            }\n        }\n        return this;\n    }\n    flush(length = this.length) {\n        length = roundLengthUpToNearest64Bytes(length * this.stride, this.BYTES_PER_ELEMENT);\n        const array = sliceOrExtendArray(this.buffer, length);\n        this.clear();\n        return array;\n    }\n    clear() {\n        this.length = 0;\n        this._resize(0);\n        return this;\n    }\n    _resize(newLength) {\n        return this.buffer = memcpy(new this.ArrayType(newLength), this.buffer);\n    }\n}\nBufferBuilder.prototype.offset = 0;\n/** @ignore */\nexport class DataBufferBuilder extends BufferBuilder {\n    last() { return this.get(this.length - 1); }\n    get(index) { return this.buffer[index]; }\n    set(index, value) {\n        this.reserve(index - this.length + 1);\n        this.buffer[index * this.stride] = value;\n        return this;\n    }\n}\n/** @ignore */\nexport class BitmapBufferBuilder extends DataBufferBuilder {\n    constructor(data = new Uint8Array(0)) {\n        super(data, 1 / 8);\n        this.numValid = 0;\n    }\n    get numInvalid() { return this.length - this.numValid; }\n    get(idx) { return this.buffer[idx >> 3] >> idx % 8 & 1; }\n    set(idx, val) {\n        const { buffer } = this.reserve(idx - this.length + 1);\n        const byte = idx >> 3, bit = idx % 8, cur = buffer[byte] >> bit & 1;\n        // If `val` is truthy and the current bit is 0, flip it to 1 and increment `numValid`.\n        // If `val` is falsey and the current bit is 1, flip it to 0 and decrement `numValid`.\n        val ? cur === 0 && ((buffer[byte] |= (1 << bit)), ++this.numValid)\n            : cur === 1 && ((buffer[byte] &= ~(1 << bit)), --this.numValid);\n        return this;\n    }\n    clear() {\n        this.numValid = 0;\n        return super.clear();\n    }\n}\n/** @ignore */\nexport class OffsetsBufferBuilder extends DataBufferBuilder {\n    constructor(data = new Int32Array(1)) { super(data, 1); }\n    append(value) {\n        return this.set(this.length - 1, value);\n    }\n    set(index, value) {\n        const offset = this.length - 1;\n        const buffer = this.reserve(index - offset + 1).buffer;\n        if (offset < index++) {\n            buffer.fill(buffer[offset], offset, index);\n        }\n        buffer[index] = buffer[index - 1] + value;\n        return this;\n    }\n    flush(length = this.length - 1) {\n        if (length > this.length) {\n            this.set(length - 1, 0);\n        }\n        return super.flush(length + 1);\n    }\n}\n/** @ignore */\nexport class WideBufferBuilder extends BufferBuilder {\n    get ArrayType64() {\n        return this._ArrayType64 || (this._ArrayType64 = (this.buffer instanceof Int32Array ? BigInt64Array : BigUint64Array));\n    }\n    set(index, value) {\n        this.reserve(index - this.length + 1);\n        switch (typeof value) {\n            case 'bigint':\n                this.buffer64[index] = value;\n                break;\n            case 'number':\n                this.buffer[index * this.stride] = value;\n                break;\n            default: this.buffer.set(value, index * this.stride);\n        }\n        return this;\n    }\n    _resize(newLength) {\n        const data = super._resize(newLength);\n        const length = data.byteLength / (this.BYTES_PER_ELEMENT * this.stride);\n        if (BigIntAvailable) {\n            this.buffer64 = new this.ArrayType64(data.buffer, data.byteOffset, length);\n        }\n        return data;\n    }\n}\n\n//# sourceMappingURL=buffer.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Vector } from './vector';\nimport { BufferType } from './enum';\nimport { Data } from './data';\nimport { createIsValidFunction } from './builder/valid';\nimport { BitmapBufferBuilder, DataBufferBuilder, OffsetsBufferBuilder } from './builder/buffer';\nimport { strideForType } from './type';\n/**\n * An abstract base class for types that construct Arrow Vectors from arbitrary JavaScript values.\n *\n * A `Builder` is responsible for writing arbitrary JavaScript values\n * to ArrayBuffers and/or child Builders according to the Arrow specification\n * for each DataType, creating or resizing the underlying ArrayBuffers as necessary.\n *\n * The `Builder` for each Arrow `DataType` handles converting and appending\n * values for a given `DataType`. The high-level {@link Builder.new `Builder.new()`} convenience\n * method creates the specific `Builder` subclass for the supplied `DataType`.\n *\n * Once created, `Builder` instances support both appending values to the end\n * of the `Builder`, and random-access writes to specific indices\n * (`Builder.prototype.append(value)` is a convenience method for\n * `builder.set(builder.length, value)`). Appending or setting values beyond the\n * Builder's current length may cause the builder to grow its underlying buffers\n * or child Builders (if applicable) to accommodate the new values.\n *\n * After enough values have been written to a `Builder`, `Builder.prototype.flush()`\n * will commit the values to the underlying ArrayBuffers (or child Builders). The\n * internal Builder state will be reset, and an instance of `Data<T>` is returned.\n * Alternatively, `Builder.prototype.toVector()` will flush the `Builder` and return\n * an instance of `Vector<T>` instead.\n *\n * When there are no more values to write, use `Builder.prototype.finish()` to\n * finalize the `Builder`. This does not reset the internal state, so it is\n * necessary to call `Builder.prototype.flush()` or `toVector()` one last time\n * if there are still values queued to be flushed.\n *\n * Note: calling `Builder.prototype.finish()` is required when using a `DictionaryBuilder`,\n * because this is when it flushes the values that have been enqueued in its internal\n * dictionary's `Builder`, and creates the `dictionaryVector` for the `Dictionary` `DataType`.\n *\n * ```ts\n * import { Builder, Utf8 } from 'apache-arrow';\n *\n * const utf8Builder = Builder.new({\n *     type: new Utf8(),\n *     nullValues: [null, 'n/a']\n * });\n *\n * utf8Builder\n *     .append('hello')\n *     .append('n/a')\n *     .append('world')\n *     .append(null);\n *\n * const utf8Vector = utf8Builder.finish().toVector();\n *\n * console.log(utf8Vector.toJSON());\n * // > [\"hello\", null, \"world\", null]\n * ```\n *\n * @typeparam T The `DataType` of this `Builder`.\n * @typeparam TNull The type(s) of values which will be considered null-value sentinels.\n */\nexport class Builder {\n    /**\n     * Construct a builder with the given Arrow DataType with optional null values,\n     * which will be interpreted as \"null\" when set or appended to the `Builder`.\n     * @param {{ type: T, nullValues?: any[] }} options A `BuilderOptions` object used to create this `Builder`.\n     */\n    constructor({ 'type': type, 'nullValues': nulls }) {\n        /**\n         * The number of values written to the `Builder` that haven't been flushed yet.\n         * @readonly\n         */\n        this.length = 0;\n        /**\n         * A boolean indicating whether `Builder.prototype.finish()` has been called on this `Builder`.\n         * @readonly\n         */\n        this.finished = false;\n        this.type = type;\n        this.children = [];\n        this.nullValues = nulls;\n        this.stride = strideForType(type);\n        this._nulls = new BitmapBufferBuilder();\n        if (nulls && nulls.length > 0) {\n            this._isValid = createIsValidFunction(nulls);\n        }\n    }\n    /**\n     * Create a `Builder` instance based on the `type` property of the supplied `options` object.\n     * @param {BuilderOptions<T, TNull>} options An object with a required `DataType` instance\n     * and other optional parameters to be passed to the `Builder` subclass for the given `type`.\n     *\n     * @typeparam T The `DataType` of the `Builder` to create.\n     * @typeparam TNull The type(s) of values which will be considered null-value sentinels.\n     * @nocollapse\n     */\n    // @ts-ignore\n    static new(options) { }\n    /** @nocollapse */\n    // @ts-ignore\n    static throughNode(options) {\n        throw new Error(`\"throughNode\" not available in this environment`);\n    }\n    /** @nocollapse */\n    // @ts-ignore\n    static throughDOM(options) {\n        throw new Error(`\"throughDOM\" not available in this environment`);\n    }\n    /**\n     * Transform a synchronous `Iterable` of arbitrary JavaScript values into a\n     * sequence of Arrow Vector<T> following the chunking semantics defined in\n     * the supplied `options` argument.\n     *\n     * This function returns a function that accepts an `Iterable` of values to\n     * transform. When called, this function returns an Iterator of `Vector<T>`.\n     *\n     * The resulting `Iterator<Vector<T>>` yields Vectors based on the\n     * `queueingStrategy` and `highWaterMark` specified in the `options` argument.\n     *\n     * * If `queueingStrategy` is `\"count\"` (or omitted), The `Iterator<Vector<T>>`\n     *   will flush the underlying `Builder` (and yield a new `Vector<T>`) once the\n     *   Builder's `length` reaches or exceeds the supplied `highWaterMark`.\n     * * If `queueingStrategy` is `\"bytes\"`, the `Iterator<Vector<T>>` will flush\n     *   the underlying `Builder` (and yield a new `Vector<T>`) once its `byteLength`\n     *   reaches or exceeds the supplied `highWaterMark`.\n     *\n     * @param {IterableBuilderOptions<T, TNull>} options An object of properties which determine the `Builder` to create and the chunking semantics to use.\n     * @returns A function which accepts a JavaScript `Iterable` of values to\n     *          write, and returns an `Iterator` that yields Vectors according\n     *          to the chunking semantics defined in the `options` argument.\n     * @nocollapse\n     */\n    static throughIterable(options) {\n        return throughIterable(options);\n    }\n    /**\n     * Transform an `AsyncIterable` of arbitrary JavaScript values into a\n     * sequence of Arrow Vector<T> following the chunking semantics defined in\n     * the supplied `options` argument.\n     *\n     * This function returns a function that accepts an `AsyncIterable` of values to\n     * transform. When called, this function returns an AsyncIterator of `Vector<T>`.\n     *\n     * The resulting `AsyncIterator<Vector<T>>` yields Vectors based on the\n     * `queueingStrategy` and `highWaterMark` specified in the `options` argument.\n     *\n     * * If `queueingStrategy` is `\"count\"` (or omitted), The `AsyncIterator<Vector<T>>`\n     *   will flush the underlying `Builder` (and yield a new `Vector<T>`) once the\n     *   Builder's `length` reaches or exceeds the supplied `highWaterMark`.\n     * * If `queueingStrategy` is `\"bytes\"`, the `AsyncIterator<Vector<T>>` will flush\n     *   the underlying `Builder` (and yield a new `Vector<T>`) once its `byteLength`\n     *   reaches or exceeds the supplied `highWaterMark`.\n     *\n     * @param {IterableBuilderOptions<T, TNull>} options An object of properties which determine the `Builder` to create and the chunking semantics to use.\n     * @returns A function which accepts a JavaScript `AsyncIterable` of values\n     *          to write, and returns an `AsyncIterator` that yields Vectors\n     *          according to the chunking semantics defined in the `options`\n     *          argument.\n     * @nocollapse\n     */\n    static throughAsyncIterable(options) {\n        return throughAsyncIterable(options);\n    }\n    /**\n     * Flush the `Builder` and return a `Vector<T>`.\n     * @returns {Vector<T>} A `Vector<T>` of the flushed values.\n     */\n    toVector() { return Vector.new(this.flush()); }\n    get ArrayType() { return this.type.ArrayType; }\n    get nullCount() { return this._nulls.numInvalid; }\n    get numChildren() { return this.children.length; }\n    /**\n     * @returns The aggregate length (in bytes) of the values that have been written.\n     */\n    get byteLength() {\n        let size = 0;\n        this._offsets && (size += this._offsets.byteLength);\n        this._values && (size += this._values.byteLength);\n        this._nulls && (size += this._nulls.byteLength);\n        this._typeIds && (size += this._typeIds.byteLength);\n        return this.children.reduce((size, child) => size + child.byteLength, size);\n    }\n    /**\n     * @returns The aggregate number of rows that have been reserved to write new values.\n     */\n    get reservedLength() {\n        return this._nulls.reservedLength;\n    }\n    /**\n     * @returns The aggregate length (in bytes) that has been reserved to write new values.\n     */\n    get reservedByteLength() {\n        let size = 0;\n        this._offsets && (size += this._offsets.reservedByteLength);\n        this._values && (size += this._values.reservedByteLength);\n        this._nulls && (size += this._nulls.reservedByteLength);\n        this._typeIds && (size += this._typeIds.reservedByteLength);\n        return this.children.reduce((size, child) => size + child.reservedByteLength, size);\n    }\n    get valueOffsets() { return this._offsets ? this._offsets.buffer : null; }\n    get values() { return this._values ? this._values.buffer : null; }\n    get nullBitmap() { return this._nulls ? this._nulls.buffer : null; }\n    get typeIds() { return this._typeIds ? this._typeIds.buffer : null; }\n    /**\n     * Appends a value (or null) to this `Builder`.\n     * This is equivalent to `builder.set(builder.length, value)`.\n     * @param {T['TValue'] | TNull } value The value to append.\n     */\n    append(value) { return this.set(this.length, value); }\n    /**\n     * Validates whether a value is valid (true), or null (false)\n     * @param {T['TValue'] | TNull } value The value to compare against null the value representations\n     */\n    // @ts-ignore\n    isValid(value) { return this._isValid(value); }\n    /**\n     * Write a value (or null-value sentinel) at the supplied index.\n     * If the value matches one of the null-value representations, a 1-bit is\n     * written to the null `BitmapBufferBuilder`. Otherwise, a 0 is written to\n     * the null `BitmapBufferBuilder`, and the value is passed to\n     * `Builder.prototype.setValue()`.\n     * @param {number} index The index of the value to write.\n     * @param {T['TValue'] | TNull } value The value to write at the supplied index.\n     * @returns {this} The updated `Builder` instance.\n     */\n    set(index, value) {\n        if (this.setValid(index, this.isValid(value))) {\n            this.setValue(index, value);\n        }\n        return this;\n    }\n    /**\n     * Write a value to the underlying buffers at the supplied index, bypassing\n     * the null-value check. This is a low-level method that\n     * @param {number} index\n     * @param {T['TValue'] | TNull } value\n     */\n    // @ts-ignore\n    setValue(index, value) { this._setValue(this, index, value); }\n    setValid(index, valid) {\n        this.length = this._nulls.set(index, +valid).length;\n        return valid;\n    }\n    // @ts-ignore\n    addChild(child, name = `${this.numChildren}`) {\n        throw new Error(`Cannot append children to non-nested type \"${this.type}\"`);\n    }\n    /**\n     * Retrieve the child `Builder` at the supplied `index`, or null if no child\n     * exists at that index.\n     * @param {number} index The index of the child `Builder` to retrieve.\n     * @returns {Builder | null} The child Builder at the supplied index or null.\n     */\n    getChildAt(index) {\n        return this.children[index] || null;\n    }\n    /**\n     * Commit all the values that have been written to their underlying\n     * ArrayBuffers, including any child Builders if applicable, and reset\n     * the internal `Builder` state.\n     * @returns A `Data<T>` of the buffers and childData representing the values written.\n     */\n    flush() {\n        const buffers = [];\n        const values = this._values;\n        const offsets = this._offsets;\n        const typeIds = this._typeIds;\n        const { length, nullCount } = this;\n        if (typeIds) { /* Unions */\n            buffers[BufferType.TYPE] = typeIds.flush(length);\n            // DenseUnions\n            offsets && (buffers[BufferType.OFFSET] = offsets.flush(length));\n        }\n        else if (offsets) { /* Variable-width primitives (Binary, Utf8) and Lists */\n            // Binary, Utf8\n            values && (buffers[BufferType.DATA] = values.flush(offsets.last()));\n            buffers[BufferType.OFFSET] = offsets.flush(length);\n        }\n        else if (values) { /* Fixed-width primitives (Int, Float, Decimal, Time, Timestamp, and Interval) */\n            buffers[BufferType.DATA] = values.flush(length);\n        }\n        nullCount > 0 && (buffers[BufferType.VALIDITY] = this._nulls.flush(length));\n        const data = Data.new(this.type, 0, length, nullCount, buffers, this.children.map((child) => child.flush()));\n        this.clear();\n        return data;\n    }\n    /**\n     * Finalize this `Builder`, and child builders if applicable.\n     * @returns {this} The finalized `Builder` instance.\n     */\n    finish() {\n        this.finished = true;\n        this.children.forEach((child) => child.finish());\n        return this;\n    }\n    /**\n     * Clear this Builder's internal state, including child Builders if applicable, and reset the length to 0.\n     * @returns {this} The cleared `Builder` instance.\n     */\n    clear() {\n        this.length = 0;\n        this._offsets && (this._offsets.clear());\n        this._values && (this._values.clear());\n        this._nulls && (this._nulls.clear());\n        this._typeIds && (this._typeIds.clear());\n        this.children.forEach((child) => child.clear());\n        return this;\n    }\n}\nBuilder.prototype.length = 1;\nBuilder.prototype.stride = 1;\nBuilder.prototype.children = null;\nBuilder.prototype.finished = false;\nBuilder.prototype.nullValues = null;\nBuilder.prototype._isValid = () => true;\n/** @ignore */\nexport class FixedWidthBuilder extends Builder {\n    constructor(opts) {\n        super(opts);\n        this._values = new DataBufferBuilder(new this.ArrayType(0), this.stride);\n    }\n    setValue(index, value) {\n        const values = this._values;\n        values.reserve(index - values.length + 1);\n        return super.setValue(index, value);\n    }\n}\n/** @ignore */\nexport class VariableWidthBuilder extends Builder {\n    constructor(opts) {\n        super(opts);\n        this._pendingLength = 0;\n        this._offsets = new OffsetsBufferBuilder();\n    }\n    setValue(index, value) {\n        const pending = this._pending || (this._pending = new Map());\n        const current = pending.get(index);\n        current && (this._pendingLength -= current.length);\n        this._pendingLength += value.length;\n        pending.set(index, value);\n    }\n    setValid(index, isValid) {\n        if (!super.setValid(index, isValid)) {\n            (this._pending || (this._pending = new Map())).set(index, undefined);\n            return false;\n        }\n        return true;\n    }\n    clear() {\n        this._pendingLength = 0;\n        this._pending = undefined;\n        return super.clear();\n    }\n    flush() {\n        this._flush();\n        return super.flush();\n    }\n    finish() {\n        this._flush();\n        return super.finish();\n    }\n    _flush() {\n        const pending = this._pending;\n        const pendingLength = this._pendingLength;\n        this._pendingLength = 0;\n        this._pending = undefined;\n        if (pending && pending.size > 0) {\n            this._flushPending(pending, pendingLength);\n        }\n        return this;\n    }\n}\n/** @ignore */\nfunction throughIterable(options) {\n    const { ['queueingStrategy']: queueingStrategy = 'count' } = options;\n    const { ['highWaterMark']: highWaterMark = queueingStrategy !== 'bytes' ? 1000 : 2 ** 14 } = options;\n    const sizeProperty = queueingStrategy !== 'bytes' ? 'length' : 'byteLength';\n    return function* (source) {\n        let numChunks = 0;\n        let builder = Builder.new(options);\n        for (const value of source) {\n            if (builder.append(value)[sizeProperty] >= highWaterMark) {\n                ++numChunks && (yield builder.toVector());\n            }\n        }\n        if (builder.finish().length > 0 || numChunks === 0) {\n            yield builder.toVector();\n        }\n    };\n}\n/** @ignore */\nfunction throughAsyncIterable(options) {\n    const { ['queueingStrategy']: queueingStrategy = 'count' } = options;\n    const { ['highWaterMark']: highWaterMark = queueingStrategy !== 'bytes' ? 1000 : 2 ** 14 } = options;\n    const sizeProperty = queueingStrategy !== 'bytes' ? 'length' : 'byteLength';\n    return async function* (source) {\n        let numChunks = 0;\n        let builder = Builder.new(options);\n        for await (const value of source) {\n            if (builder.append(value)[sizeProperty] >= highWaterMark) {\n                ++numChunks && (yield builder.toVector());\n            }\n        }\n        if (builder.finish().length > 0 || numChunks === 0) {\n            yield builder.toVector();\n        }\n    };\n}\n\n//# sourceMappingURL=builder.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { BitmapBufferBuilder } from './buffer';\nimport { Builder } from '../builder';\n/** @ignore */\nexport class BoolBuilder extends Builder {\n    constructor(options) {\n        super(options);\n        this._values = new BitmapBufferBuilder();\n    }\n    setValue(index, value) {\n        this._values.set(index, +value);\n    }\n}\n\n//# sourceMappingURL=bool.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Builder } from '../builder';\n/** @ignore */\nexport class NullBuilder extends Builder {\n    // @ts-ignore\n    setValue(index, value) { }\n    setValid(index, valid) {\n        this.length = Math.max(index + 1, this.length);\n        return valid;\n    }\n}\n\n//# sourceMappingURL=null.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { FixedWidthBuilder } from '../builder';\n/** @ignore */\nexport class DateBuilder extends FixedWidthBuilder {\n}\n/** @ignore */\nexport class DateDayBuilder extends DateBuilder {\n}\n/** @ignore */\nexport class DateMillisecondBuilder extends DateBuilder {\n}\n\n//# sourceMappingURL=date.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { FixedWidthBuilder } from '../builder';\n/** @ignore */\nexport class DecimalBuilder extends FixedWidthBuilder {\n}\n\n//# sourceMappingURL=decimal.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Dictionary } from '../type';\nimport { Builder } from '../builder';\n/** @ignore */\nexport class DictionaryBuilder extends Builder {\n    constructor({ 'type': type, 'nullValues': nulls, 'dictionaryHashFunction': hashFn }) {\n        super({ type: new Dictionary(type.dictionary, type.indices, type.id, type.isOrdered) });\n        this._nulls = null;\n        this._dictionaryOffset = 0;\n        this._keysToIndices = Object.create(null);\n        this.indices = Builder.new({ 'type': this.type.indices, 'nullValues': nulls });\n        this.dictionary = Builder.new({ 'type': this.type.dictionary, 'nullValues': null });\n        if (typeof hashFn === 'function') {\n            this.valueToKey = hashFn;\n        }\n    }\n    get values() { return this.indices.values; }\n    get nullCount() { return this.indices.nullCount; }\n    get nullBitmap() { return this.indices.nullBitmap; }\n    get byteLength() { return this.indices.byteLength + this.dictionary.byteLength; }\n    get reservedLength() { return this.indices.reservedLength + this.dictionary.reservedLength; }\n    get reservedByteLength() { return this.indices.reservedByteLength + this.dictionary.reservedByteLength; }\n    isValid(value) { return this.indices.isValid(value); }\n    setValid(index, valid) {\n        const indices = this.indices;\n        valid = indices.setValid(index, valid);\n        this.length = indices.length;\n        return valid;\n    }\n    setValue(index, value) {\n        let keysToIndices = this._keysToIndices;\n        let key = this.valueToKey(value);\n        let idx = keysToIndices[key];\n        if (idx === undefined) {\n            keysToIndices[key] = idx = this._dictionaryOffset + this.dictionary.append(value).length - 1;\n        }\n        return this.indices.setValue(index, idx);\n    }\n    flush() {\n        const type = this.type;\n        const prev = this._dictionary;\n        const curr = this.dictionary.toVector();\n        const data = this.indices.flush().clone(type);\n        data.dictionary = prev ? prev.concat(curr) : curr;\n        this.finished || (this._dictionaryOffset += curr.length);\n        this._dictionary = data.dictionary;\n        this.clear();\n        return data;\n    }\n    finish() {\n        this.indices.finish();\n        this.dictionary.finish();\n        this._dictionaryOffset = 0;\n        this._keysToIndices = Object.create(null);\n        return super.finish();\n    }\n    clear() {\n        this.indices.clear();\n        this.dictionary.clear();\n        return super.clear();\n    }\n    valueToKey(val) {\n        return typeof val === 'string' ? val : `${val}`;\n    }\n}\n\n//# sourceMappingURL=dictionary.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { FixedWidthBuilder } from '../builder';\n/** @ignore */\nexport class FixedSizeBinaryBuilder extends FixedWidthBuilder {\n}\n\n//# sourceMappingURL=fixedsizebinary.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nconst f64 = new Float64Array(1);\nconst u32 = new Uint32Array(f64.buffer);\n/**\n * Convert uint16 (logically a float16) to a JS float64. Inspired by numpy's `npy_half_to_double`:\n * https://github.com/numpy/numpy/blob/5a5987291dc95376bb098be8d8e5391e89e77a2c/numpy/core/src/npymath/halffloat.c#L29\n * @param h {number} the uint16 to convert\n * @private\n * @ignore\n */\nexport function uint16ToFloat64(h) {\n    let expo = (h & 0x7C00) >> 10;\n    let sigf = (h & 0x03FF) / 1024;\n    let sign = (-1) ** ((h & 0x8000) >> 15);\n    switch (expo) {\n        case 0x1F: return sign * (sigf ? NaN : 1 / 0);\n        case 0x00: return sign * (sigf ? 6.103515625e-5 * sigf : 0);\n    }\n    return sign * (2 ** (expo - 15)) * (1 + sigf);\n}\n/**\n * Convert a float64 to uint16 (assuming the float64 is logically a float16). Inspired by numpy's `npy_double_to_half`:\n * https://github.com/numpy/numpy/blob/5a5987291dc95376bb098be8d8e5391e89e77a2c/numpy/core/src/npymath/halffloat.c#L43\n * @param d {number} The float64 to convert\n * @private\n * @ignore\n */\nexport function float64ToUint16(d) {\n    if (d !== d) {\n        return 0x7E00;\n    } // NaN\n    f64[0] = d;\n    // Magic numbers:\n    // 0x80000000 = 10000000 00000000 00000000 00000000 -- masks the 32nd bit\n    // 0x7ff00000 = 01111111 11110000 00000000 00000000 -- masks the 21st-31st bits\n    // 0x000fffff = 00000000 00001111 11111111 11111111 -- masks the 1st-20th bit\n    let sign = (u32[1] & 0x80000000) >> 16 & 0xFFFF;\n    let expo = (u32[1] & 0x7ff00000), sigf = 0x0000;\n    if (expo >= 0x40f00000) {\n        //\n        // If exponent overflowed, the float16 is either NaN or Infinity.\n        // Rules to propagate the sign bit: mantissa > 0 ? NaN : +/-Infinity\n        //\n        // Magic numbers:\n        // 0x40F00000 = 01000000 11110000 00000000 00000000 -- 6-bit exponent overflow\n        // 0x7C000000 = 01111100 00000000 00000000 00000000 -- masks the 27th-31st bits\n        //\n        // returns:\n        // qNaN, aka 32256 decimal, 0x7E00 hex, or 01111110 00000000 binary\n        // sNaN, aka 32000 decimal, 0x7D00 hex, or 01111101 00000000 binary\n        // +inf, aka 31744 decimal, 0x7C00 hex, or 01111100 00000000 binary\n        // -inf, aka 64512 decimal, 0xFC00 hex, or 11111100 00000000 binary\n        //\n        // If mantissa is greater than 23 bits, set to +Infinity like numpy\n        if (u32[0] > 0) {\n            expo = 0x7C00;\n        }\n        else {\n            expo = (expo & 0x7C000000) >> 16;\n            sigf = (u32[1] & 0x000fffff) >> 10;\n        }\n    }\n    else if (expo <= 0x3f000000) {\n        //\n        // If exponent underflowed, the float is either signed zero or subnormal.\n        //\n        // Magic numbers:\n        // 0x3F000000 = 00111111 00000000 00000000 00000000 -- 6-bit exponent underflow\n        //\n        sigf = 0x100000 + (u32[1] & 0x000fffff);\n        sigf = 0x100000 + (sigf << ((expo >> 20) - 998)) >> 21;\n        expo = 0;\n    }\n    else {\n        //\n        // No overflow or underflow, rebase the exponent and round the mantissa\n        // Magic numbers:\n        // 0x200 = 00000010 00000000 -- masks off the 10th bit\n        //\n        // Ensure the first mantissa bit (the 10th one) is 1 and round\n        expo = (expo - 0x3f000000) >> 10;\n        sigf = ((u32[1] & 0x000fffff) + 0x200) >> 10;\n    }\n    return sign | expo | sigf & 0xFFFF;\n}\n\n//# sourceMappingURL=math.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { float64ToUint16 } from '../util/math';\nimport { FixedWidthBuilder } from '../builder';\n/** @ignore */\nexport class FloatBuilder extends FixedWidthBuilder {\n}\n/** @ignore */\nexport class Float16Builder extends FloatBuilder {\n    setValue(index, value) {\n        // convert JS float64 to a uint16\n        this._values.set(index, float64ToUint16(value));\n    }\n}\n/** @ignore */\nexport class Float32Builder extends FloatBuilder {\n    setValue(index, value) {\n        this._values.set(index, value);\n    }\n}\n/** @ignore */\nexport class Float64Builder extends FloatBuilder {\n    setValue(index, value) {\n        this._values.set(index, value);\n    }\n}\n\n//# sourceMappingURL=float.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { toArrayBufferView } from './buffer';\nimport { BigIntAvailable, BigInt64Array, BigUint64Array } from './compat';\n/** @ignore */\nexport const isArrowBigNumSymbol = Symbol.for('isArrowBigNum');\n/** @ignore */\nfunction BigNum(x, ...xs) {\n    if (xs.length === 0) {\n        return Object.setPrototypeOf(toArrayBufferView(this['TypedArray'], x), this.constructor.prototype);\n    }\n    return Object.setPrototypeOf(new this['TypedArray'](x, ...xs), this.constructor.prototype);\n}\nBigNum.prototype[isArrowBigNumSymbol] = true;\nBigNum.prototype.toJSON = function () { return `\"${bignumToString(this)}\"`; };\nBigNum.prototype.valueOf = function () { return bignumToNumber(this); };\nBigNum.prototype.toString = function () { return bignumToString(this); };\nBigNum.prototype[Symbol.toPrimitive] = function (hint = 'default') {\n    switch (hint) {\n        case 'number': return bignumToNumber(this);\n        case 'string': return bignumToString(this);\n        case 'default': return bignumToBigInt(this);\n    }\n    return bignumToString(this);\n};\n/** @ignore */\nfunction SignedBigNum(...args) { return BigNum.apply(this, args); }\n/** @ignore */\nfunction UnsignedBigNum(...args) { return BigNum.apply(this, args); }\n/** @ignore */\nfunction DecimalBigNum(...args) { return BigNum.apply(this, args); }\nObject.setPrototypeOf(SignedBigNum.prototype, Object.create(Int32Array.prototype));\nObject.setPrototypeOf(UnsignedBigNum.prototype, Object.create(Uint32Array.prototype));\nObject.setPrototypeOf(DecimalBigNum.prototype, Object.create(Uint32Array.prototype));\nObject.assign(SignedBigNum.prototype, BigNum.prototype, { 'constructor': SignedBigNum, 'signed': true, 'TypedArray': Int32Array, 'BigIntArray': BigInt64Array });\nObject.assign(UnsignedBigNum.prototype, BigNum.prototype, { 'constructor': UnsignedBigNum, 'signed': false, 'TypedArray': Uint32Array, 'BigIntArray': BigUint64Array });\nObject.assign(DecimalBigNum.prototype, BigNum.prototype, { 'constructor': DecimalBigNum, 'signed': true, 'TypedArray': Uint32Array, 'BigIntArray': BigUint64Array });\n/** @ignore */\nfunction bignumToNumber(bn) {\n    let { buffer, byteOffset, length, 'signed': signed } = bn;\n    let words = new Int32Array(buffer, byteOffset, length);\n    let number = 0, i = 0, n = words.length, hi, lo;\n    while (i < n) {\n        lo = words[i++];\n        hi = words[i++];\n        signed || (hi = hi >>> 0);\n        number += (lo >>> 0) + (hi * (i ** 32));\n    }\n    return number;\n}\n/** @ignore */\nexport let bignumToString;\n/** @ignore */\nexport let bignumToBigInt;\nif (!BigIntAvailable) {\n    bignumToString = decimalToString;\n    bignumToBigInt = bignumToString;\n}\nelse {\n    bignumToBigInt = ((a) => a.byteLength === 8 ? new a['BigIntArray'](a.buffer, a.byteOffset, 1)[0] : decimalToString(a));\n    bignumToString = ((a) => a.byteLength === 8 ? `${new a['BigIntArray'](a.buffer, a.byteOffset, 1)[0]}` : decimalToString(a));\n}\n/** @ignore */\nfunction decimalToString(a) {\n    let digits = '';\n    let base64 = new Uint32Array(2);\n    let base32 = new Uint16Array(a.buffer, a.byteOffset, a.byteLength / 2);\n    let checks = new Uint32Array((base32 = new Uint16Array(base32).reverse()).buffer);\n    let i = -1, n = base32.length - 1;\n    do {\n        for (base64[0] = base32[i = 0]; i < n;) {\n            base32[i++] = base64[1] = base64[0] / 10;\n            base64[0] = ((base64[0] - base64[1] * 10) << 16) + base32[i];\n        }\n        base32[i] = base64[1] = base64[0] / 10;\n        base64[0] = base64[0] - base64[1] * 10;\n        digits = `${base64[0]}${digits}`;\n    } while (checks[0] || checks[1] || checks[2] || checks[3]);\n    return digits ? digits : `0`;\n}\n/** @ignore */\nexport class BN {\n    constructor(num, isSigned) {\n        return BN.new(num, isSigned);\n    }\n    /** @nocollapse */\n    static new(num, isSigned) {\n        switch (isSigned) {\n            case true: return new SignedBigNum(num);\n            case false: return new UnsignedBigNum(num);\n        }\n        switch (num.constructor) {\n            case Int8Array:\n            case Int16Array:\n            case Int32Array:\n            case BigInt64Array:\n                return new SignedBigNum(num);\n        }\n        if (num.byteLength === 16) {\n            return new DecimalBigNum(num);\n        }\n        return new UnsignedBigNum(num);\n    }\n    /** @nocollapse */\n    static signed(num) {\n        return new SignedBigNum(num);\n    }\n    /** @nocollapse */\n    static unsigned(num) {\n        return new UnsignedBigNum(num);\n    }\n    /** @nocollapse */\n    static decimal(num) {\n        return new DecimalBigNum(num);\n    }\n}\n\n//# sourceMappingURL=bn.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { bignumToBigInt } from '../util/bn';\nimport { WideBufferBuilder } from './buffer';\nimport { BigInt64Array } from '../util/compat';\nimport { FixedWidthBuilder } from '../builder';\n/** @ignore */\nexport class IntBuilder extends FixedWidthBuilder {\n    setValue(index, value) {\n        this._values.set(index, value);\n    }\n}\n/** @ignore */\nexport class Int8Builder extends IntBuilder {\n}\n/** @ignore */\nexport class Int16Builder extends IntBuilder {\n}\n/** @ignore */\nexport class Int32Builder extends IntBuilder {\n}\n/** @ignore */\nexport class Int64Builder extends IntBuilder {\n    constructor(options) {\n        if (options['nullValues']) {\n            options['nullValues'] = options['nullValues'].map(toBigInt);\n        }\n        super(options);\n        this._values = new WideBufferBuilder(new Int32Array(0), 2);\n    }\n    get values64() { return this._values.buffer64; }\n    isValid(value) { return super.isValid(toBigInt(value)); }\n}\n/** @ignore */\nexport class Uint8Builder extends IntBuilder {\n}\n/** @ignore */\nexport class Uint16Builder extends IntBuilder {\n}\n/** @ignore */\nexport class Uint32Builder extends IntBuilder {\n}\n/** @ignore */\nexport class Uint64Builder extends IntBuilder {\n    constructor(options) {\n        if (options['nullValues']) {\n            options['nullValues'] = options['nullValues'].map(toBigInt);\n        }\n        super(options);\n        this._values = new WideBufferBuilder(new Uint32Array(0), 2);\n    }\n    get values64() { return this._values.buffer64; }\n    isValid(value) { return super.isValid(toBigInt(value)); }\n}\nconst toBigInt = ((memo) => (value) => {\n    if (ArrayBuffer.isView(value)) {\n        memo.buffer = value.buffer;\n        memo.byteOffset = value.byteOffset;\n        memo.byteLength = value.byteLength;\n        value = bignumToBigInt(memo);\n        memo.buffer = null;\n    }\n    return value;\n})({ 'BigIntArray': BigInt64Array });\n\n//# sourceMappingURL=int.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { FixedWidthBuilder } from '../builder';\n/** @ignore */\nexport class TimeBuilder extends FixedWidthBuilder {\n}\n/** @ignore */\nexport class TimeSecondBuilder extends TimeBuilder {\n}\n/** @ignore */\nexport class TimeMillisecondBuilder extends TimeBuilder {\n}\n/** @ignore */\nexport class TimeMicrosecondBuilder extends TimeBuilder {\n}\n/** @ignore */\nexport class TimeNanosecondBuilder extends TimeBuilder {\n}\n\n//# sourceMappingURL=time.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { FixedWidthBuilder } from '../builder';\n/** @ignore */\nexport class TimestampBuilder extends FixedWidthBuilder {\n}\n/** @ignore */\nexport class TimestampSecondBuilder extends TimestampBuilder {\n}\n/** @ignore */\nexport class TimestampMillisecondBuilder extends TimestampBuilder {\n}\n/** @ignore */\nexport class TimestampMicrosecondBuilder extends TimestampBuilder {\n}\n/** @ignore */\nexport class TimestampNanosecondBuilder extends TimestampBuilder {\n}\n\n//# sourceMappingURL=timestamp.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { FixedWidthBuilder } from '../builder';\n/** @ignore */\nexport class IntervalBuilder extends FixedWidthBuilder {\n}\n/** @ignore */\nexport class IntervalDayTimeBuilder extends IntervalBuilder {\n}\n/** @ignore */\nexport class IntervalYearMonthBuilder extends IntervalBuilder {\n}\n\n//# sourceMappingURL=interval.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { toUint8Array } from '../util/buffer';\nimport { BufferBuilder } from './buffer';\nimport { VariableWidthBuilder } from '../builder';\n/** @ignore */\nexport class BinaryBuilder extends VariableWidthBuilder {\n    constructor(opts) {\n        super(opts);\n        this._values = new BufferBuilder(new Uint8Array(0));\n    }\n    get byteLength() {\n        let size = this._pendingLength + (this.length * 4);\n        this._offsets && (size += this._offsets.byteLength);\n        this._values && (size += this._values.byteLength);\n        this._nulls && (size += this._nulls.byteLength);\n        return size;\n    }\n    setValue(index, value) {\n        return super.setValue(index, toUint8Array(value));\n    }\n    _flushPending(pending, pendingLength) {\n        const offsets = this._offsets;\n        const data = this._values.reserve(pendingLength).buffer;\n        let index = 0, length = 0, offset = 0, value;\n        for ([index, value] of pending) {\n            if (value === undefined) {\n                offsets.set(index, 0);\n            }\n            else {\n                length = value.length;\n                data.set(value, offset);\n                offsets.set(index, length);\n                offset += length;\n            }\n        }\n    }\n}\n\n//# sourceMappingURL=binary.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { encodeUtf8 } from '../util/utf8';\nimport { BinaryBuilder } from './binary';\nimport { BufferBuilder } from './buffer';\nimport { VariableWidthBuilder } from '../builder';\n/** @ignore */\nexport class Utf8Builder extends VariableWidthBuilder {\n    constructor(opts) {\n        super(opts);\n        this._values = new BufferBuilder(new Uint8Array(0));\n    }\n    get byteLength() {\n        let size = this._pendingLength + (this.length * 4);\n        this._offsets && (size += this._offsets.byteLength);\n        this._values && (size += this._values.byteLength);\n        this._nulls && (size += this._nulls.byteLength);\n        return size;\n    }\n    setValue(index, value) {\n        return super.setValue(index, encodeUtf8(value));\n    }\n    // @ts-ignore\n    _flushPending(pending, pendingLength) { }\n}\nUtf8Builder.prototype._flushPending = BinaryBuilder.prototype._flushPending;\n\n//# sourceMappingURL=utf8.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Vector } from '../vector';\n/** @ignore */\nexport class Run {\n    get length() { return this._values.length; }\n    get(index) { return this._values[index]; }\n    clear() { this._values = null; return this; }\n    bind(values) {\n        if (values instanceof Vector) {\n            return values;\n        }\n        this._values = values;\n        return this;\n    }\n}\n\n//# sourceMappingURL=run.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { valueToString } from '../util/pretty';\n/** @ignore */ const kParent = Symbol.for('parent');\n/** @ignore */ const kRowIndex = Symbol.for('rowIndex');\n/** @ignore */ const kKeyToIdx = Symbol.for('keyToIdx');\n/** @ignore */ const kIdxToVal = Symbol.for('idxToVal');\n/** @ignore */ const kCustomInspect = Symbol.for('nodejs.util.inspect.custom');\nclass Row {\n    constructor(parent, numKeys) {\n        this[kParent] = parent;\n        this.size = numKeys;\n    }\n    entries() { return this[Symbol.iterator](); }\n    has(key) { return this.get(key) !== undefined; }\n    get(key) {\n        let val = undefined;\n        if (key !== null && key !== undefined) {\n            const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n            let idx = ktoi.get(key);\n            if (idx !== undefined) {\n                const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n                ((val = itov[idx]) !== undefined) || (itov[idx] = val = this.getValue(idx));\n            }\n            else if ((idx = this.getIndex(key)) > -1) {\n                ktoi.set(key, idx);\n                const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n                ((val = itov[idx]) !== undefined) || (itov[idx] = val = this.getValue(idx));\n            }\n        }\n        return val;\n    }\n    set(key, val) {\n        if (key !== null && key !== undefined) {\n            const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n            let idx = ktoi.get(key);\n            if (idx === undefined) {\n                ktoi.set(key, idx = this.getIndex(key));\n            }\n            if (idx > -1) {\n                const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n                itov[idx] = this.setValue(idx, val);\n            }\n        }\n        return this;\n    }\n    clear() { throw new Error(`Clearing ${this[Symbol.toStringTag]} not supported.`); }\n    delete(_) { throw new Error(`Deleting ${this[Symbol.toStringTag]} values not supported.`); }\n    *[Symbol.iterator]() {\n        const ki = this.keys();\n        const vi = this.values();\n        const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n        const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n        for (let k, v, i = 0, kr, vr; !((kr = ki.next()).done || (vr = vi.next()).done); ++i) {\n            k = kr.value;\n            v = vr.value;\n            itov[i] = v;\n            ktoi.has(k) || ktoi.set(k, i);\n            yield [k, v];\n        }\n    }\n    forEach(callbackfn, thisArg) {\n        const ki = this.keys();\n        const vi = this.values();\n        const callback = thisArg === undefined ? callbackfn :\n            (v, k, m) => callbackfn.call(thisArg, v, k, m);\n        const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n        const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n        for (let k, v, i = 0, kr, vr; !((kr = ki.next()).done || (vr = vi.next()).done); ++i) {\n            k = kr.value;\n            v = vr.value;\n            itov[i] = v;\n            ktoi.has(k) || ktoi.set(k, i);\n            callback(v, k, this);\n        }\n    }\n    toArray() { return [...this.values()]; }\n    toJSON() {\n        const obj = {};\n        this.forEach((val, key) => obj[key] = val);\n        return obj;\n    }\n    inspect() { return this.toString(); }\n    [kCustomInspect]() { return this.toString(); }\n    toString() {\n        const str = [];\n        this.forEach((val, key) => {\n            key = valueToString(key);\n            val = valueToString(val);\n            str.push(`${key}: ${val}`);\n        });\n        return `{ ${str.join(', ')} }`;\n    }\n}\nRow[Symbol.toStringTag] = ((proto) => {\n    Object.defineProperties(proto, {\n        'size': { writable: true, enumerable: false, configurable: false, value: 0 },\n        [kParent]: { writable: true, enumerable: false, configurable: false, value: null },\n        [kRowIndex]: { writable: true, enumerable: false, configurable: false, value: -1 },\n    });\n    return proto[Symbol.toStringTag] = 'Row';\n})(Row.prototype);\nexport class MapRow extends Row {\n    constructor(slice) {\n        super(slice, slice.length);\n        return createRowProxy(this);\n    }\n    keys() {\n        return this[kParent].getChildAt(0)[Symbol.iterator]();\n    }\n    values() {\n        return this[kParent].getChildAt(1)[Symbol.iterator]();\n    }\n    getKey(idx) {\n        return this[kParent].getChildAt(0).get(idx);\n    }\n    getIndex(key) {\n        return this[kParent].getChildAt(0).indexOf(key);\n    }\n    getValue(index) {\n        return this[kParent].getChildAt(1).get(index);\n    }\n    setValue(index, value) {\n        this[kParent].getChildAt(1).set(index, value);\n    }\n}\nexport class StructRow extends Row {\n    constructor(parent) {\n        super(parent, parent.type.children.length);\n        return defineRowProxyProperties(this);\n    }\n    *keys() {\n        for (const field of this[kParent].type.children) {\n            yield field.name;\n        }\n    }\n    *values() {\n        for (const field of this[kParent].type.children) {\n            yield this[field.name];\n        }\n    }\n    getKey(idx) {\n        return this[kParent].type.children[idx].name;\n    }\n    getIndex(key) {\n        return this[kParent].type.children.findIndex((f) => f.name === key);\n    }\n    getValue(index) {\n        return this[kParent].getChildAt(index).get(this[kRowIndex]);\n    }\n    setValue(index, value) {\n        return this[kParent].getChildAt(index).set(this[kRowIndex], value);\n    }\n}\nObject.setPrototypeOf(Row.prototype, Map.prototype);\n/** @ignore */\nconst defineRowProxyProperties = (() => {\n    const desc = { enumerable: true, configurable: false, get: null, set: null };\n    return (row) => {\n        let idx = -1, ktoi = row[kKeyToIdx] || (row[kKeyToIdx] = new Map());\n        const getter = (key) => function () { return this.get(key); };\n        const setter = (key) => function (val) { return this.set(key, val); };\n        for (const key of row.keys()) {\n            ktoi.set(key, ++idx);\n            desc.get = getter(key);\n            desc.set = setter(key);\n            row.hasOwnProperty(key) || (desc.enumerable = true, Object.defineProperty(row, key, desc));\n            row.hasOwnProperty(idx) || (desc.enumerable = false, Object.defineProperty(row, idx, desc));\n        }\n        desc.get = desc.set = null;\n        return row;\n    };\n})();\n/** @ignore */\nconst createRowProxy = (() => {\n    if (typeof Proxy === 'undefined') {\n        return defineRowProxyProperties;\n    }\n    const has = Row.prototype.has;\n    const get = Row.prototype.get;\n    const set = Row.prototype.set;\n    const getKey = Row.prototype.getKey;\n    const RowProxyHandler = {\n        isExtensible() { return false; },\n        deleteProperty() { return false; },\n        preventExtensions() { return true; },\n        ownKeys(row) { return [...row.keys()].map((x) => `${x}`); },\n        has(row, key) {\n            switch (key) {\n                case 'getKey':\n                case 'getIndex':\n                case 'getValue':\n                case 'setValue':\n                case 'toArray':\n                case 'toJSON':\n                case 'inspect':\n                case 'constructor':\n                case 'isPrototypeOf':\n                case 'propertyIsEnumerable':\n                case 'toString':\n                case 'toLocaleString':\n                case 'valueOf':\n                case 'size':\n                case 'has':\n                case 'get':\n                case 'set':\n                case 'clear':\n                case 'delete':\n                case 'keys':\n                case 'values':\n                case 'entries':\n                case 'forEach':\n                case '__proto__':\n                case '__defineGetter__':\n                case '__defineSetter__':\n                case 'hasOwnProperty':\n                case '__lookupGetter__':\n                case '__lookupSetter__':\n                case Symbol.iterator:\n                case Symbol.toStringTag:\n                case kParent:\n                case kRowIndex:\n                case kIdxToVal:\n                case kKeyToIdx:\n                case kCustomInspect:\n                    return true;\n            }\n            if (typeof key === 'number' && !row.has(key)) {\n                key = row.getKey(key);\n            }\n            return row.has(key);\n        },\n        get(row, key, receiver) {\n            switch (key) {\n                case 'getKey':\n                case 'getIndex':\n                case 'getValue':\n                case 'setValue':\n                case 'toArray':\n                case 'toJSON':\n                case 'inspect':\n                case 'constructor':\n                case 'isPrototypeOf':\n                case 'propertyIsEnumerable':\n                case 'toString':\n                case 'toLocaleString':\n                case 'valueOf':\n                case 'size':\n                case 'has':\n                case 'get':\n                case 'set':\n                case 'clear':\n                case 'delete':\n                case 'keys':\n                case 'values':\n                case 'entries':\n                case 'forEach':\n                case '__proto__':\n                case '__defineGetter__':\n                case '__defineSetter__':\n                case 'hasOwnProperty':\n                case '__lookupGetter__':\n                case '__lookupSetter__':\n                case Symbol.iterator:\n                case Symbol.toStringTag:\n                case kParent:\n                case kRowIndex:\n                case kIdxToVal:\n                case kKeyToIdx:\n                case kCustomInspect:\n                    return Reflect.get(row, key, receiver);\n            }\n            if (typeof key === 'number' && !has.call(receiver, key)) {\n                key = getKey.call(receiver, key);\n            }\n            return get.call(receiver, key);\n        },\n        set(row, key, val, receiver) {\n            switch (key) {\n                case kParent:\n                case kRowIndex:\n                case kIdxToVal:\n                case kKeyToIdx:\n                    return Reflect.set(row, key, val, receiver);\n                case 'getKey':\n                case 'getIndex':\n                case 'getValue':\n                case 'setValue':\n                case 'toArray':\n                case 'toJSON':\n                case 'inspect':\n                case 'constructor':\n                case 'isPrototypeOf':\n                case 'propertyIsEnumerable':\n                case 'toString':\n                case 'toLocaleString':\n                case 'valueOf':\n                case 'size':\n                case 'has':\n                case 'get':\n                case 'set':\n                case 'clear':\n                case 'delete':\n                case 'keys':\n                case 'values':\n                case 'entries':\n                case 'forEach':\n                case '__proto__':\n                case '__defineGetter__':\n                case '__defineSetter__':\n                case 'hasOwnProperty':\n                case '__lookupGetter__':\n                case '__lookupSetter__':\n                case Symbol.iterator:\n                case Symbol.toStringTag:\n                    return false;\n            }\n            if (typeof key === 'number' && !has.call(receiver, key)) {\n                key = getKey.call(receiver, key);\n            }\n            return has.call(receiver, key) ? !!set.call(receiver, key, val) : false;\n        },\n    };\n    return (row) => new Proxy(row, RowProxyHandler);\n})();\n\n//# sourceMappingURL=row.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Vector } from '../vector';\nimport { MapRow, StructRow } from '../vector/row';\nimport { compareArrayLike } from '../util/buffer';\nimport { BigInt, BigIntAvailable } from './compat';\n/** @ignore */\nexport function clampIndex(source, index, then) {\n    const length = source.length;\n    const adjust = index > -1 ? index : (length + (index % length));\n    return then ? then(source, adjust) : adjust;\n}\n/** @ignore */\nlet tmp;\n/** @ignore */\nexport function clampRange(source, begin, end, then) {\n    // Adjust args similar to Array.prototype.slice. Normalize begin/end to\n    // clamp between 0 and length, and wrap around on negative indices, e.g.\n    // slice(-1, 5) or slice(5, -1)\n    let { length: len = 0 } = source;\n    let lhs = typeof begin !== 'number' ? 0 : begin;\n    let rhs = typeof end !== 'number' ? len : end;\n    // wrap around on negative start/end positions\n    (lhs < 0) && (lhs = ((lhs % len) + len) % len);\n    (rhs < 0) && (rhs = ((rhs % len) + len) % len);\n    // ensure lhs <= rhs\n    (rhs < lhs) && (tmp = lhs, lhs = rhs, rhs = tmp);\n    // ensure rhs <= length\n    (rhs > len) && (rhs = len);\n    return then ? then(source, lhs, rhs) : [lhs, rhs];\n}\nconst big0 = BigIntAvailable ? BigInt(0) : 0;\nconst isNaNFast = (value) => value !== value;\n/** @ignore */\nexport function createElementComparator(search) {\n    let typeofSearch = typeof search;\n    // Compare primitives\n    if (typeofSearch !== 'object' || search === null) {\n        // Compare NaN\n        if (isNaNFast(search)) {\n            return isNaNFast;\n        }\n        return typeofSearch !== 'bigint'\n            ? (value) => value === search\n            : (value) => (big0 + value) === search;\n    }\n    // Compare Dates\n    if (search instanceof Date) {\n        const valueOfSearch = search.valueOf();\n        return (value) => value instanceof Date ? (value.valueOf() === valueOfSearch) : false;\n    }\n    // Compare TypedArrays\n    if (ArrayBuffer.isView(search)) {\n        return (value) => value ? compareArrayLike(search, value) : false;\n    }\n    // Compare Maps and Rows\n    if (search instanceof Map) {\n        return creatMapComparator(search);\n    }\n    // Compare Array-likes\n    if (Array.isArray(search)) {\n        return createArrayLikeComparator(search);\n    }\n    // Compare Vectors\n    if (search instanceof Vector) {\n        return createVectorComparator(search);\n    }\n    // Compare non-empty Objects\n    return createObjectComparator(search);\n}\n/** @ignore */\nfunction createArrayLikeComparator(lhs) {\n    const comparators = [];\n    for (let i = -1, n = lhs.length; ++i < n;) {\n        comparators[i] = createElementComparator(lhs[i]);\n    }\n    return createSubElementsComparator(comparators);\n}\n/** @ignore */\nfunction creatMapComparator(lhs) {\n    let i = -1;\n    const comparators = [];\n    lhs.forEach((v) => comparators[++i] = createElementComparator(v));\n    return createSubElementsComparator(comparators);\n}\n/** @ignore */\nfunction createVectorComparator(lhs) {\n    const comparators = [];\n    for (let i = -1, n = lhs.length; ++i < n;) {\n        comparators[i] = createElementComparator(lhs.get(i));\n    }\n    return createSubElementsComparator(comparators);\n}\n/** @ignore */\nfunction createObjectComparator(lhs) {\n    const keys = Object.keys(lhs);\n    // Only compare non-empty Objects\n    if (keys.length === 0) {\n        return () => false;\n    }\n    const comparators = [];\n    for (let i = -1, n = keys.length; ++i < n;) {\n        comparators[i] = createElementComparator(lhs[keys[i]]);\n    }\n    return createSubElementsComparator(comparators, keys);\n}\nfunction createSubElementsComparator(comparators, keys) {\n    return (rhs) => {\n        if (!rhs || typeof rhs !== 'object') {\n            return false;\n        }\n        switch (rhs.constructor) {\n            case Array: return compareArray(comparators, rhs);\n            case Map:\n            case MapRow:\n            case StructRow:\n                return compareObject(comparators, rhs, rhs.keys());\n            case Object:\n            case undefined: // support `Object.create(null)` objects\n                return compareObject(comparators, rhs, keys || Object.keys(rhs));\n        }\n        return rhs instanceof Vector ? compareVector(comparators, rhs) : false;\n    };\n}\nfunction compareArray(comparators, arr) {\n    const n = comparators.length;\n    if (arr.length !== n) {\n        return false;\n    }\n    for (let i = -1; ++i < n;) {\n        if (!(comparators[i](arr[i]))) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction compareVector(comparators, vec) {\n    const n = comparators.length;\n    if (vec.length !== n) {\n        return false;\n    }\n    for (let i = -1; ++i < n;) {\n        if (!(comparators[i](vec.get(i)))) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction compareObject(comparators, obj, keys) {\n    const lKeyItr = keys[Symbol.iterator]();\n    const rKeyItr = obj instanceof Map ? obj.keys() : Object.keys(obj)[Symbol.iterator]();\n    const rValItr = obj instanceof Map ? obj.values() : Object.values(obj)[Symbol.iterator]();\n    let i = 0;\n    let n = comparators.length;\n    let rVal = rValItr.next();\n    let lKey = lKeyItr.next();\n    let rKey = rKeyItr.next();\n    for (; i < n && !lKey.done && !rKey.done && !rVal.done; ++i, lKey = lKeyItr.next(), rKey = rKeyItr.next(), rVal = rValItr.next()) {\n        if (lKey.value !== rKey.value || !comparators[i](rVal.value)) {\n            break;\n        }\n    }\n    if (i === n && lKey.done && rKey.done && rVal.done) {\n        return true;\n    }\n    lKeyItr.return && lKeyItr.return();\n    rKeyItr.return && rKeyItr.return();\n    rValItr.return && rValItr.return();\n    return false;\n}\n\n//# sourceMappingURL=vector.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { clampRange } from '../util/vector';\nimport { DataType } from '../type';\nimport { selectChunkArgs } from '../util/args';\nimport { AbstractVector, Vector } from '../vector';\n/** @ignore */\nexport class Chunked extends AbstractVector {\n    constructor(type, chunks = [], offsets = calculateOffsets(chunks)) {\n        super();\n        this._nullCount = -1;\n        this._type = type;\n        this._chunks = chunks;\n        this._chunkOffsets = offsets;\n        this._length = offsets[offsets.length - 1];\n        this._numChildren = (this._type.children || []).length;\n    }\n    /** @nocollapse */\n    static flatten(...vectors) {\n        return selectChunkArgs(Vector, vectors);\n    }\n    /** @nocollapse */\n    static concat(...vectors) {\n        const chunks = Chunked.flatten(...vectors);\n        return new Chunked(chunks[0].type, chunks);\n    }\n    get type() { return this._type; }\n    get length() { return this._length; }\n    get chunks() { return this._chunks; }\n    get typeId() { return this._type.typeId; }\n    get VectorName() { return `Chunked<${this._type}>`; }\n    get data() {\n        return this._chunks[0] ? this._chunks[0].data : null;\n    }\n    get ArrayType() { return this._type.ArrayType; }\n    get numChildren() { return this._numChildren; }\n    get stride() { return this._chunks[0] ? this._chunks[0].stride : 1; }\n    get byteLength() {\n        return this._chunks.reduce((byteLength, chunk) => byteLength + chunk.byteLength, 0);\n    }\n    get nullCount() {\n        let nullCount = this._nullCount;\n        if (nullCount < 0) {\n            this._nullCount = nullCount = this._chunks.reduce((x, { nullCount }) => x + nullCount, 0);\n        }\n        return nullCount;\n    }\n    get indices() {\n        if (DataType.isDictionary(this._type)) {\n            if (!this._indices) {\n                const chunks = this._chunks;\n                this._indices = (chunks.length === 1\n                    ? chunks[0].indices\n                    : Chunked.concat(...chunks.map((x) => x.indices)));\n            }\n            return this._indices;\n        }\n        return null;\n    }\n    get dictionary() {\n        if (DataType.isDictionary(this._type)) {\n            return this._chunks[this._chunks.length - 1].data.dictionary;\n        }\n        return null;\n    }\n    *[Symbol.iterator]() {\n        for (const chunk of this._chunks) {\n            yield* chunk;\n        }\n    }\n    clone(chunks = this._chunks) {\n        return new Chunked(this._type, chunks);\n    }\n    concat(...others) {\n        return this.clone(Chunked.flatten(this, ...others));\n    }\n    slice(begin, end) {\n        return clampRange(this, begin, end, this._sliceInternal);\n    }\n    getChildAt(index) {\n        if (index < 0 || index >= this._numChildren) {\n            return null;\n        }\n        let columns = this._children || (this._children = []);\n        let child, field, chunks;\n        if (child = columns[index]) {\n            return child;\n        }\n        if (field = (this._type.children || [])[index]) {\n            chunks = this._chunks\n                .map((vector) => vector.getChildAt(index))\n                .filter((vec) => vec != null);\n            if (chunks.length > 0) {\n                return (columns[index] = new Chunked(field.type, chunks));\n            }\n        }\n        return null;\n    }\n    search(index, then) {\n        let idx = index;\n        // binary search to find the child vector and value indices\n        let offsets = this._chunkOffsets, rhs = offsets.length - 1;\n        // return early if out of bounds, or if there's just one child\n        if (idx < 0) {\n            return null;\n        }\n        if (idx >= offsets[rhs]) {\n            return null;\n        }\n        if (rhs <= 1) {\n            return then ? then(this, 0, idx) : [0, idx];\n        }\n        let lhs = 0, pos = 0, mid = 0;\n        do {\n            if (lhs + 1 === rhs) {\n                return then ? then(this, lhs, idx - pos) : [lhs, idx - pos];\n            }\n            mid = lhs + ((rhs - lhs) / 2) | 0;\n            idx >= offsets[mid] ? (lhs = mid) : (rhs = mid);\n        } while (idx < offsets[rhs] && idx >= (pos = offsets[lhs]));\n        return null;\n    }\n    isValid(index) {\n        return !!this.search(index, this.isValidInternal);\n    }\n    get(index) {\n        return this.search(index, this.getInternal);\n    }\n    set(index, value) {\n        this.search(index, ({ chunks }, i, j) => chunks[i].set(j, value));\n    }\n    indexOf(element, offset) {\n        if (offset && typeof offset === 'number') {\n            return this.search(offset, (self, i, j) => this.indexOfInternal(self, i, j, element));\n        }\n        return this.indexOfInternal(this, 0, Math.max(0, offset || 0), element);\n    }\n    toArray() {\n        const { chunks } = this;\n        const n = chunks.length;\n        let ArrayType = this._type.ArrayType;\n        if (n <= 0) {\n            return new ArrayType(0);\n        }\n        if (n <= 1) {\n            return chunks[0].toArray();\n        }\n        let len = 0, src = new Array(n);\n        for (let i = -1; ++i < n;) {\n            len += (src[i] = chunks[i].toArray()).length;\n        }\n        if (ArrayType !== src[0].constructor) {\n            ArrayType = src[0].constructor;\n        }\n        let dst = new ArrayType(len);\n        let set = ArrayType === Array ? arraySet : typedSet;\n        for (let i = -1, idx = 0; ++i < n;) {\n            idx = set(src[i], dst, idx);\n        }\n        return dst;\n    }\n    getInternal({ _chunks }, i, j) { return _chunks[i].get(j); }\n    isValidInternal({ _chunks }, i, j) { return _chunks[i].isValid(j); }\n    indexOfInternal({ _chunks }, chunkIndex, fromIndex, element) {\n        let i = chunkIndex - 1, n = _chunks.length;\n        let start = fromIndex, offset = 0, found = -1;\n        while (++i < n) {\n            if (~(found = _chunks[i].indexOf(element, start))) {\n                return offset + found;\n            }\n            start = 0;\n            offset += _chunks[i].length;\n        }\n        return -1;\n    }\n    _sliceInternal(self, begin, end) {\n        const slices = [];\n        const { chunks, _chunkOffsets: chunkOffsets } = self;\n        for (let i = -1, n = chunks.length; ++i < n;) {\n            const chunk = chunks[i];\n            const chunkLength = chunk.length;\n            const chunkOffset = chunkOffsets[i];\n            // If the child is to the right of the slice boundary, we can stop\n            if (chunkOffset >= end) {\n                break;\n            }\n            // If the child is to the left of of the slice boundary, exclude\n            if (begin >= chunkOffset + chunkLength) {\n                continue;\n            }\n            // If the child is between both left and right boundaries, include w/o slicing\n            if (chunkOffset >= begin && (chunkOffset + chunkLength) <= end) {\n                slices.push(chunk);\n                continue;\n            }\n            // If the child overlaps one of the slice boundaries, include that slice\n            const from = Math.max(0, begin - chunkOffset);\n            const to = Math.min(end - chunkOffset, chunkLength);\n            slices.push(chunk.slice(from, to));\n        }\n        return self.clone(slices);\n    }\n}\n/** @ignore */\nfunction calculateOffsets(vectors) {\n    let offsets = new Uint32Array((vectors || []).length + 1);\n    let offset = offsets[0] = 0, length = offsets.length;\n    for (let index = 0; ++index < length;) {\n        offsets[index] = (offset += vectors[index - 1].length);\n    }\n    return offsets;\n}\n/** @ignore */\nconst typedSet = (src, dst, offset) => {\n    dst.set(src, offset);\n    return (offset + src.length);\n};\n/** @ignore */\nconst arraySet = (src, dst, offset) => {\n    let idx = offset;\n    for (let i = -1, n = src.length; ++i < n;) {\n        dst[idx++] = src[i];\n    }\n    return idx;\n};\n\n//# sourceMappingURL=chunked.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Field } from './schema';\nimport { Vector } from './vector';\nimport { Chunked } from './vector/chunked';\nexport class Column extends Chunked {\n    constructor(field, vectors = [], offsets) {\n        vectors = Chunked.flatten(...vectors);\n        super(field.type, vectors, offsets);\n        this._field = field;\n        if (vectors.length === 1 && !(this instanceof SingleChunkColumn)) {\n            return new SingleChunkColumn(field, vectors[0], this._chunkOffsets);\n        }\n    }\n    /** @nocollapse */\n    static new(field, data, ...rest) {\n        const chunks = Chunked.flatten(Array.isArray(data) ? [...data, ...rest] :\n            data instanceof Vector ? [data, ...rest] :\n                [Vector.new(data, ...rest)]);\n        if (typeof field === 'string') {\n            const type = chunks[0].data.type;\n            field = new Field(field, type, true);\n        }\n        else if (!field.nullable && chunks.some(({ nullCount }) => nullCount > 0)) {\n            field = field.clone({ nullable: true });\n        }\n        return new Column(field, chunks);\n    }\n    get field() { return this._field; }\n    get name() { return this._field.name; }\n    get nullable() { return this._field.nullable; }\n    get metadata() { return this._field.metadata; }\n    clone(chunks = this._chunks) {\n        return new Column(this._field, chunks);\n    }\n    getChildAt(index) {\n        if (index < 0 || index >= this.numChildren) {\n            return null;\n        }\n        let columns = this._children || (this._children = []);\n        let column, field, chunks;\n        if (column = columns[index]) {\n            return column;\n        }\n        if (field = (this.type.children || [])[index]) {\n            chunks = this._chunks\n                .map((vector) => vector.getChildAt(index))\n                .filter((vec) => vec != null);\n            if (chunks.length > 0) {\n                return (columns[index] = new Column(field, chunks));\n            }\n        }\n        return null;\n    }\n}\n/** @ignore */\nclass SingleChunkColumn extends Column {\n    constructor(field, vector, offsets) {\n        super(field, [vector], offsets);\n        this._chunk = vector;\n    }\n    search(index, then) {\n        return then ? then(this, 0, index) : [0, index];\n    }\n    isValid(index) {\n        return this._chunk.isValid(index);\n    }\n    get(index) {\n        return this._chunk.get(index);\n    }\n    set(index, value) {\n        this._chunk.set(index, value);\n    }\n    indexOf(element, offset) {\n        return this._chunk.indexOf(element, offset);\n    }\n}\n\n//# sourceMappingURL=column.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Data } from '../data';\nimport { Field } from '../schema';\nimport { Column } from '../column';\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\nimport { Chunked } from '../vector/chunked';\nconst isArray = Array.isArray;\n/** @ignore */\nexport const selectArgs = (Ctor, vals) => _selectArgs(Ctor, vals, [], 0);\n/** @ignore */\nexport const selectColumnArgs = (args) => {\n    const [fields, values] = _selectFieldArgs(args, [[], []]);\n    return values.map((x, i) => x instanceof Column ? Column.new(x.field.clone(fields[i]), x) :\n        x instanceof Vector ? Column.new(fields[i], x) :\n            Column.new(fields[i], []));\n};\n/** @ignore */\nexport const selectFieldArgs = (args) => _selectFieldArgs(args, [[], []]);\n/** @ignore */\nexport const selectChunkArgs = (Ctor, vals) => _selectChunkArgs(Ctor, vals, [], 0);\n/** @ignore */\nexport const selectVectorChildrenArgs = (Ctor, vals) => _selectVectorChildrenArgs(Ctor, vals, [], 0);\n/** @ignore */\nexport const selectColumnChildrenArgs = (Ctor, vals) => _selectColumnChildrenArgs(Ctor, vals, [], 0);\n/** @ignore */\nfunction _selectArgs(Ctor, vals, res, idx) {\n    let value, j = idx;\n    let i = -1, n = vals.length;\n    while (++i < n) {\n        if (isArray(value = vals[i])) {\n            j = _selectArgs(Ctor, value, res, j).length;\n        }\n        else if (value instanceof Ctor) {\n            res[j++] = value;\n        }\n    }\n    return res;\n}\n/** @ignore */\nfunction _selectChunkArgs(Ctor, vals, res, idx) {\n    let value, j = idx;\n    let i = -1, n = vals.length;\n    while (++i < n) {\n        if (isArray(value = vals[i])) {\n            j = _selectChunkArgs(Ctor, value, res, j).length;\n        }\n        else if (value instanceof Chunked) {\n            j = _selectChunkArgs(Ctor, value.chunks, res, j).length;\n        }\n        else if (value instanceof Ctor) {\n            res[j++] = value;\n        }\n    }\n    return res;\n}\n/** @ignore */\nfunction _selectVectorChildrenArgs(Ctor, vals, res, idx) {\n    let value, j = idx;\n    let i = -1, n = vals.length;\n    while (++i < n) {\n        if (isArray(value = vals[i])) {\n            j = _selectVectorChildrenArgs(Ctor, value, res, j).length;\n        }\n        else if (value instanceof Ctor) {\n            j = _selectArgs(Vector, value.schema.fields.map((_, i) => value.getChildAt(i)), res, j).length;\n        }\n        else if (value instanceof Vector) {\n            res[j++] = value;\n        }\n    }\n    return res;\n}\n/** @ignore */\nfunction _selectColumnChildrenArgs(Ctor, vals, res, idx) {\n    let value, j = idx;\n    let i = -1, n = vals.length;\n    while (++i < n) {\n        if (isArray(value = vals[i])) {\n            j = _selectColumnChildrenArgs(Ctor, value, res, j).length;\n        }\n        else if (value instanceof Ctor) {\n            j = _selectArgs(Column, value.schema.fields.map((f, i) => Column.new(f, value.getChildAt(i))), res, j).length;\n        }\n        else if (value instanceof Column) {\n            res[j++] = value;\n        }\n    }\n    return res;\n}\n/** @ignore */\nconst toKeysAndValues = (xs, [k, v], i) => (xs[0][i] = k, xs[1][i] = v, xs);\n/** @ignore */\nfunction _selectFieldArgs(vals, ret) {\n    let keys, n;\n    switch (n = vals.length) {\n        case 0: return ret;\n        case 1:\n            keys = ret[0];\n            if (!(vals[0])) {\n                return ret;\n            }\n            if (isArray(vals[0])) {\n                return _selectFieldArgs(vals[0], ret);\n            }\n            if (!(vals[0] instanceof Data || vals[0] instanceof Vector || vals[0] instanceof DataType)) {\n                [keys, vals] = Object.entries(vals[0]).reduce(toKeysAndValues, ret);\n            }\n            break;\n        default:\n            !isArray(keys = vals[n - 1])\n                ? (vals = isArray(vals[0]) ? vals[0] : vals, keys = [])\n                : (vals = isArray(vals[0]) ? vals[0] : vals.slice(0, n - 1));\n    }\n    let fieldIndex = -1;\n    let valueIndex = -1;\n    let idx = -1, len = vals.length;\n    let field;\n    let val;\n    let [fields, values] = ret;\n    while (++idx < len) {\n        val = vals[idx];\n        if (val instanceof Column && (values[++valueIndex] = val)) {\n            fields[++fieldIndex] = val.field.clone(keys[idx], val.type, true);\n        }\n        else {\n            ({ [idx]: field = idx } = keys);\n            if (val instanceof DataType && (values[++valueIndex] = val)) {\n                fields[++fieldIndex] = Field.new(field, val, true);\n            }\n            else if (val && val.type && (values[++valueIndex] = val)) {\n                val instanceof Data && (values[valueIndex] = val = Vector.new(val));\n                fields[++fieldIndex] = Field.new(field, val.type, true);\n            }\n        }\n    }\n    return ret;\n}\n\n//# sourceMappingURL=args.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { DataType } from './type';\nimport { selectArgs } from './util/args';\nimport { selectFieldArgs } from './util/args';\nimport { instance as comparer } from './visitor/typecomparator';\nexport class Schema {\n    constructor(fields = [], metadata, dictionaries) {\n        this.fields = (fields || []);\n        this.metadata = metadata || new Map();\n        if (!dictionaries) {\n            dictionaries = generateDictionaryMap(fields);\n        }\n        this.dictionaries = dictionaries;\n    }\n    /** @nocollapse */\n    static from(...args) {\n        return Schema.new(args[0], args[1]);\n    }\n    /** @nocollapse */\n    static new(...args) {\n        return new Schema(selectFieldArgs(args)[0]);\n    }\n    get [Symbol.toStringTag]() { return 'Schema'; }\n    toString() {\n        return `Schema<{ ${this.fields.map((f, i) => `${i}: ${f}`).join(', ')} }>`;\n    }\n    compareTo(other) {\n        return comparer.compareSchemas(this, other);\n    }\n    select(...columnNames) {\n        const names = columnNames.reduce((xs, x) => (xs[x] = true) && xs, Object.create(null));\n        return new Schema(this.fields.filter((f) => names[f.name]), this.metadata);\n    }\n    selectAt(...columnIndices) {\n        return new Schema(columnIndices.map((i) => this.fields[i]).filter(Boolean), this.metadata);\n    }\n    assign(...args) {\n        const other = args[0] instanceof Schema ? args[0]\n            : new Schema(selectArgs(Field, args));\n        const curFields = [...this.fields];\n        const metadata = mergeMaps(mergeMaps(new Map(), this.metadata), other.metadata);\n        const newFields = other.fields.filter((f2) => {\n            const i = curFields.findIndex((f) => f.name === f2.name);\n            return ~i ? (curFields[i] = f2.clone({\n                metadata: mergeMaps(mergeMaps(new Map(), curFields[i].metadata), f2.metadata)\n            })) && false : true;\n        });\n        const newDictionaries = generateDictionaryMap(newFields, new Map());\n        return new Schema([...curFields, ...newFields], metadata, new Map([...this.dictionaries, ...newDictionaries]));\n    }\n}\nexport class Field {\n    constructor(name, type, nullable = false, metadata) {\n        this.name = name;\n        this.type = type;\n        this.nullable = nullable;\n        this.metadata = metadata || new Map();\n    }\n    /** @nocollapse */\n    static new(...args) {\n        let [name, type, nullable, metadata] = args;\n        if (args[0] && typeof args[0] === 'object') {\n            ({ name } = args[0]);\n            (type === undefined) && (type = args[0].type);\n            (nullable === undefined) && (nullable = args[0].nullable);\n            (metadata === undefined) && (metadata = args[0].metadata);\n        }\n        return new Field(`${name}`, type, nullable, metadata);\n    }\n    get typeId() { return this.type.typeId; }\n    get [Symbol.toStringTag]() { return 'Field'; }\n    toString() { return `${this.name}: ${this.type}`; }\n    compareTo(other) {\n        return comparer.compareField(this, other);\n    }\n    clone(...args) {\n        let [name, type, nullable, metadata] = args;\n        (!args[0] || typeof args[0] !== 'object')\n            ? ([name = this.name, type = this.type, nullable = this.nullable, metadata = this.metadata] = args)\n            : ({ name = this.name, type = this.type, nullable = this.nullable, metadata = this.metadata } = args[0]);\n        return Field.new(name, type, nullable, metadata);\n    }\n}\n/** @ignore */\nfunction mergeMaps(m1, m2) {\n    return new Map([...(m1 || new Map()), ...(m2 || new Map())]);\n}\n/** @ignore */\nfunction generateDictionaryMap(fields, dictionaries = new Map()) {\n    for (let i = -1, n = fields.length; ++i < n;) {\n        const field = fields[i];\n        const type = field.type;\n        if (DataType.isDictionary(type)) {\n            if (!dictionaries.has(type.id)) {\n                dictionaries.set(type.id, type.dictionary);\n            }\n            else if (dictionaries.get(type.id) !== type.dictionary) {\n                throw new Error(`Cannot create Schema containing two different dictionaries with the same Id`);\n            }\n        }\n        if (type.children && type.children.length > 0) {\n            generateDictionaryMap(type.children, dictionaries);\n        }\n    }\n    return dictionaries;\n}\n// Add these here so they're picked up by the externs creator\n// in the build, and closure-compiler doesn't minify them away\nSchema.prototype.fields = null;\nSchema.prototype.metadata = null;\nSchema.prototype.dictionaries = null;\nField.prototype.type = null;\nField.prototype.name = null;\nField.prototype.nullable = null;\nField.prototype.metadata = null;\n\n//# sourceMappingURL=schema.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Run } from './run';\nimport { Field } from '../schema';\nimport { List } from '../type';\nimport { OffsetsBufferBuilder } from './buffer';\nimport { VariableWidthBuilder } from '../builder';\n/** @ignore */\nexport class ListBuilder extends VariableWidthBuilder {\n    constructor(opts) {\n        super(opts);\n        this._run = new Run();\n        this._offsets = new OffsetsBufferBuilder();\n    }\n    addChild(child, name = '0') {\n        if (this.numChildren > 0) {\n            throw new Error('ListBuilder can only have one child.');\n        }\n        this.children[this.numChildren] = child;\n        this.type = new List(new Field(name, child.type, true));\n        return this.numChildren - 1;\n    }\n    clear() {\n        this._run.clear();\n        return super.clear();\n    }\n    _flushPending(pending) {\n        const run = this._run;\n        const offsets = this._offsets;\n        const setValue = this._setValue;\n        let index = 0, value;\n        for ([index, value] of pending) {\n            if (value === undefined) {\n                offsets.set(index, 0);\n            }\n            else {\n                offsets.set(index, value.length);\n                setValue(this, index, run.bind(value));\n            }\n        }\n    }\n}\n\n//# sourceMappingURL=list.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Run } from './run';\nimport { Field } from '../schema';\nimport { Builder } from '../builder';\nimport { FixedSizeList } from '../type';\n/** @ignore */\nexport class FixedSizeListBuilder extends Builder {\n    constructor() {\n        super(...arguments);\n        this._run = new Run();\n    }\n    setValue(index, value) {\n        super.setValue(index, this._run.bind(value));\n    }\n    addChild(child, name = '0') {\n        if (this.numChildren > 0) {\n            throw new Error('FixedSizeListBuilder can only have one child.');\n        }\n        const childIndex = this.children.push(child);\n        this.type = new FixedSizeList(this.type.listSize, new Field(name, child.type, true));\n        return childIndex;\n    }\n    clear() {\n        this._run.clear();\n        return super.clear();\n    }\n}\n\n//# sourceMappingURL=fixedsizelist.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Field } from '../schema';\nimport { Map_ } from '../type';\nimport { VariableWidthBuilder } from '../builder';\n/** @ignore */\nexport class MapBuilder extends VariableWidthBuilder {\n    set(index, value) {\n        return super.set(index, value);\n    }\n    setValue(index, value) {\n        value = value instanceof Map ? value : new Map(Object.entries(value));\n        const pending = this._pending || (this._pending = new Map());\n        const current = pending.get(index);\n        current && (this._pendingLength -= current.size);\n        this._pendingLength += value.size;\n        pending.set(index, value);\n    }\n    addChild(child, name = `${this.numChildren}`) {\n        if (this.numChildren > 0) {\n            throw new Error('ListBuilder can only have one child.');\n        }\n        this.children[this.numChildren] = child;\n        this.type = new Map_(new Field(name, child.type, true), this.type.keysSorted);\n        return this.numChildren - 1;\n    }\n    _flushPending(pending) {\n        const offsets = this._offsets;\n        const setValue = this._setValue;\n        pending.forEach((value, index) => {\n            if (value === undefined) {\n                offsets.set(index, 0);\n            }\n            else {\n                offsets.set(index, value.size);\n                setValue(this, index, value);\n            }\n        });\n    }\n}\n\n//# sourceMappingURL=map.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Field } from '../schema';\nimport { Builder } from '../builder';\nimport { Struct } from '../type';\n/** @ignore */\nexport class StructBuilder extends Builder {\n    addChild(child, name = `${this.numChildren}`) {\n        const childIndex = this.children.push(child);\n        this.type = new Struct([...this.type.children, new Field(name, child.type, true)]);\n        return childIndex;\n    }\n}\n\n//# sourceMappingURL=struct.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Field } from '../schema';\nimport { DataBufferBuilder } from './buffer';\nimport { Builder } from '../builder';\nimport { Union } from '../type';\n/** @ignore */\nexport class UnionBuilder extends Builder {\n    constructor(options) {\n        super(options);\n        this._typeIds = new DataBufferBuilder(new Int8Array(0), 1);\n        if (typeof options['valueToChildTypeId'] === 'function') {\n            this._valueToChildTypeId = options['valueToChildTypeId'];\n        }\n    }\n    get typeIdToChildIndex() { return this.type.typeIdToChildIndex; }\n    append(value, childTypeId) {\n        return this.set(this.length, value, childTypeId);\n    }\n    set(index, value, childTypeId) {\n        if (childTypeId === undefined) {\n            childTypeId = this._valueToChildTypeId(this, value, index);\n        }\n        if (this.setValid(index, this.isValid(value))) {\n            this.setValue(index, value, childTypeId);\n        }\n        return this;\n    }\n    // @ts-ignore\n    setValue(index, value, childTypeId) {\n        this._typeIds.set(index, childTypeId);\n        super.setValue(index, value);\n    }\n    // @ts-ignore\n    addChild(child, name = `${this.children.length}`) {\n        const childTypeId = this.children.push(child);\n        const { type: { children, mode, typeIds } } = this;\n        const fields = [...children, new Field(name, child.type)];\n        this.type = new Union(mode, [...typeIds, childTypeId], fields);\n        return childTypeId;\n    }\n    /** @ignore */\n    // @ts-ignore\n    _valueToChildTypeId(builder, value, offset) {\n        throw new Error(`Cannot map UnionBuilder value to child typeId. \\\nPass the \\`childTypeId\\` as the second argument to unionBuilder.append(), \\\nor supply a \\`valueToChildTypeId\\` function as part of the UnionBuilder constructor options.`);\n    }\n}\n/** @ignore */\nexport class SparseUnionBuilder extends UnionBuilder {\n}\n/** @ignore */\nexport class DenseUnionBuilder extends UnionBuilder {\n    constructor(options) {\n        super(options);\n        this._offsets = new DataBufferBuilder(new Int32Array(0));\n    }\n    /** @ignore */\n    setValue(index, value, childTypeId) {\n        const childIndex = this.type.typeIdToChildIndex[childTypeId];\n        this._offsets.set(index, this.getChildAt(childIndex).length);\n        return super.setValue(index, value, childTypeId);\n    }\n}\n\n//# sourceMappingURL=union.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Vector } from '../vector';\nimport { Visitor } from '../visitor';\nimport { encodeUtf8 } from '../util/utf8';\nimport { float64ToUint16 } from '../util/math';\nimport { toArrayBufferView } from '../util/buffer';\nimport { UnionMode, Precision, DateUnit, TimeUnit, IntervalUnit } from '../enum';\n/** @ignore */\nexport class SetVisitor extends Visitor {\n}\n/** @ignore */\nconst setEpochMsToDays = (data, index, epochMs) => { data[index] = (epochMs / 86400000) | 0; };\n/** @ignore */\nconst setEpochMsToMillisecondsLong = (data, index, epochMs) => {\n    data[index] = (epochMs % 4294967296) | 0;\n    data[index + 1] = (epochMs / 4294967296) | 0;\n};\n/** @ignore */\nconst setEpochMsToMicrosecondsLong = (data, index, epochMs) => {\n    data[index] = ((epochMs * 1000) % 4294967296) | 0;\n    data[index + 1] = ((epochMs * 1000) / 4294967296) | 0;\n};\n/** @ignore */\nconst setEpochMsToNanosecondsLong = (data, index, epochMs) => {\n    data[index] = ((epochMs * 1000000) % 4294967296) | 0;\n    data[index + 1] = ((epochMs * 1000000) / 4294967296) | 0;\n};\n/** @ignore */\nconst setVariableWidthBytes = (values, valueOffsets, index, value) => {\n    const { [index]: x, [index + 1]: y } = valueOffsets;\n    if (x != null && y != null) {\n        values.set(value.subarray(0, y - x), x);\n    }\n};\n/** @ignore */\nconst setBool = ({ offset, values }, index, val) => {\n    const idx = offset + index;\n    val ? (values[idx >> 3] |= (1 << (idx % 8))) // true\n        : (values[idx >> 3] &= ~(1 << (idx % 8))); // false\n};\n/** @ignore */\nconst setDateDay = ({ values }, index, value) => { setEpochMsToDays(values, index, value.valueOf()); };\n/** @ignore */\nconst setDateMillisecond = ({ values }, index, value) => { setEpochMsToMillisecondsLong(values, index * 2, value.valueOf()); };\n/** @ignore */\nconst setNumeric = ({ stride, values }, index, value) => { values[stride * index] = value; };\n/** @ignore */\nconst setFloat16 = ({ stride, values }, index, value) => { values[stride * index] = float64ToUint16(value); };\n/** @ignore */\nconst setNumericX2 = (vector, index, value) => {\n    switch (typeof value) {\n        case 'bigint':\n            vector.values64[index] = value;\n            break;\n        case 'number':\n            vector.values[index * vector.stride] = value;\n            break;\n        default:\n            const val = value;\n            const { stride, ArrayType } = vector;\n            const long = toArrayBufferView(ArrayType, val);\n            vector.values.set(long.subarray(0, stride), stride * index);\n    }\n};\n/** @ignore */\nconst setFixedSizeBinary = ({ stride, values }, index, value) => { values.set(value.subarray(0, stride), stride * index); };\n/** @ignore */\nconst setBinary = ({ values, valueOffsets }, index, value) => setVariableWidthBytes(values, valueOffsets, index, value);\n/** @ignore */\nconst setUtf8 = ({ values, valueOffsets }, index, value) => {\n    setVariableWidthBytes(values, valueOffsets, index, encodeUtf8(value));\n};\n/* istanbul ignore next */\n/** @ignore */\nconst setInt = (vector, index, value) => {\n    vector.type.bitWidth < 64\n        ? setNumeric(vector, index, value)\n        : setNumericX2(vector, index, value);\n};\n/* istanbul ignore next */\n/** @ignore */\nconst setFloat = (vector, index, value) => {\n    vector.type.precision !== Precision.HALF\n        ? setNumeric(vector, index, value)\n        : setFloat16(vector, index, value);\n};\n/* istanbul ignore next */\nconst setDate = (vector, index, value) => {\n    vector.type.unit === DateUnit.DAY\n        ? setDateDay(vector, index, value)\n        : setDateMillisecond(vector, index, value);\n};\n/** @ignore */\nconst setTimestampSecond = ({ values }, index, value) => setEpochMsToMillisecondsLong(values, index * 2, value / 1000);\n/** @ignore */\nconst setTimestampMillisecond = ({ values }, index, value) => setEpochMsToMillisecondsLong(values, index * 2, value);\n/** @ignore */\nconst setTimestampMicrosecond = ({ values }, index, value) => setEpochMsToMicrosecondsLong(values, index * 2, value);\n/** @ignore */\nconst setTimestampNanosecond = ({ values }, index, value) => setEpochMsToNanosecondsLong(values, index * 2, value);\n/* istanbul ignore next */\n/** @ignore */\nconst setTimestamp = (vector, index, value) => {\n    switch (vector.type.unit) {\n        case TimeUnit.SECOND: return setTimestampSecond(vector, index, value);\n        case TimeUnit.MILLISECOND: return setTimestampMillisecond(vector, index, value);\n        case TimeUnit.MICROSECOND: return setTimestampMicrosecond(vector, index, value);\n        case TimeUnit.NANOSECOND: return setTimestampNanosecond(vector, index, value);\n    }\n};\n/** @ignore */\nconst setTimeSecond = ({ values, stride }, index, value) => { values[stride * index] = value; };\n/** @ignore */\nconst setTimeMillisecond = ({ values, stride }, index, value) => { values[stride * index] = value; };\n/** @ignore */\nconst setTimeMicrosecond = ({ values }, index, value) => { values.set(value.subarray(0, 2), 2 * index); };\n/** @ignore */\nconst setTimeNanosecond = ({ values }, index, value) => { values.set(value.subarray(0, 2), 2 * index); };\n/* istanbul ignore next */\n/** @ignore */\nconst setTime = (vector, index, value) => {\n    switch (vector.type.unit) {\n        case TimeUnit.SECOND: return setTimeSecond(vector, index, value);\n        case TimeUnit.MILLISECOND: return setTimeMillisecond(vector, index, value);\n        case TimeUnit.MICROSECOND: return setTimeMicrosecond(vector, index, value);\n        case TimeUnit.NANOSECOND: return setTimeNanosecond(vector, index, value);\n    }\n};\n/** @ignore */\nconst setDecimal = ({ values }, index, value) => { values.set(value.subarray(0, 4), 4 * index); };\n/** @ignore */\nconst setList = (vector, index, value) => {\n    const values = vector.getChildAt(0), valueOffsets = vector.valueOffsets;\n    for (let idx = -1, itr = valueOffsets[index], end = valueOffsets[index + 1]; itr < end;) {\n        values.set(itr++, value.get(++idx));\n    }\n};\n/** @ignore */\nconst setMap = (vector, index, value) => {\n    const values = vector.getChildAt(0), valueOffsets = vector.valueOffsets;\n    const entries = value instanceof Map ? [...value] : Object.entries(value);\n    for (let idx = -1, itr = valueOffsets[index], end = valueOffsets[index + 1]; itr < end;) {\n        values.set(itr++, entries[++idx]);\n    }\n};\n/** @ignore */ const _setStructArrayValue = (o, v) => (c, _, i) => c && c.set(o, v[i]);\n/** @ignore */ const _setStructVectorValue = (o, v) => (c, _, i) => c && c.set(o, v.get(i));\n/** @ignore */ const _setStructMapValue = (o, v) => (c, f, _) => c && c.set(o, v.get(f.name));\n/** @ignore */ const _setStructObjectValue = (o, v) => (c, f, _) => c && c.set(o, v[f.name]);\n/** @ignore */\nconst setStruct = (vector, index, value) => {\n    const setValue = value instanceof Map ? _setStructMapValue(index, value) :\n        value instanceof Vector ? _setStructVectorValue(index, value) :\n            Array.isArray(value) ? _setStructArrayValue(index, value) :\n                _setStructObjectValue(index, value);\n    vector.type.children.forEach((f, i) => setValue(vector.getChildAt(i), f, i));\n};\n/* istanbul ignore next */\n/** @ignore */\nconst setUnion = (vector, index, value) => {\n    vector.type.mode === UnionMode.Dense ?\n        setDenseUnion(vector, index, value) :\n        setSparseUnion(vector, index, value);\n};\n/** @ignore */\nconst setDenseUnion = (vector, index, value) => {\n    const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n    const child = vector.getChildAt(childIndex);\n    child && child.set(vector.valueOffsets[index], value);\n};\n/** @ignore */\nconst setSparseUnion = (vector, index, value) => {\n    const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n    const child = vector.getChildAt(childIndex);\n    child && child.set(index, value);\n};\n/** @ignore */\nconst setDictionary = (vector, index, value) => {\n    const key = vector.getKey(index);\n    if (key !== null) {\n        vector.setValue(key, value);\n    }\n};\n/* istanbul ignore next */\n/** @ignore */\nconst setIntervalValue = (vector, index, value) => {\n    (vector.type.unit === IntervalUnit.DAY_TIME)\n        ? setIntervalDayTime(vector, index, value)\n        : setIntervalYearMonth(vector, index, value);\n};\n/** @ignore */\nconst setIntervalDayTime = ({ values }, index, value) => { values.set(value.subarray(0, 2), 2 * index); };\n/** @ignore */\nconst setIntervalYearMonth = ({ values }, index, value) => { values[index] = (value[0] * 12) + (value[1] % 12); };\n/** @ignore */\nconst setFixedSizeList = (vector, index, value) => {\n    const child = vector.getChildAt(0), { stride } = vector;\n    for (let idx = -1, offset = index * stride; ++idx < stride;) {\n        child.set(offset + idx, value.get(idx));\n    }\n};\nSetVisitor.prototype.visitBool = setBool;\nSetVisitor.prototype.visitInt = setInt;\nSetVisitor.prototype.visitInt8 = setNumeric;\nSetVisitor.prototype.visitInt16 = setNumeric;\nSetVisitor.prototype.visitInt32 = setNumeric;\nSetVisitor.prototype.visitInt64 = setNumericX2;\nSetVisitor.prototype.visitUint8 = setNumeric;\nSetVisitor.prototype.visitUint16 = setNumeric;\nSetVisitor.prototype.visitUint32 = setNumeric;\nSetVisitor.prototype.visitUint64 = setNumericX2;\nSetVisitor.prototype.visitFloat = setFloat;\nSetVisitor.prototype.visitFloat16 = setFloat16;\nSetVisitor.prototype.visitFloat32 = setNumeric;\nSetVisitor.prototype.visitFloat64 = setNumeric;\nSetVisitor.prototype.visitUtf8 = setUtf8;\nSetVisitor.prototype.visitBinary = setBinary;\nSetVisitor.prototype.visitFixedSizeBinary = setFixedSizeBinary;\nSetVisitor.prototype.visitDate = setDate;\nSetVisitor.prototype.visitDateDay = setDateDay;\nSetVisitor.prototype.visitDateMillisecond = setDateMillisecond;\nSetVisitor.prototype.visitTimestamp = setTimestamp;\nSetVisitor.prototype.visitTimestampSecond = setTimestampSecond;\nSetVisitor.prototype.visitTimestampMillisecond = setTimestampMillisecond;\nSetVisitor.prototype.visitTimestampMicrosecond = setTimestampMicrosecond;\nSetVisitor.prototype.visitTimestampNanosecond = setTimestampNanosecond;\nSetVisitor.prototype.visitTime = setTime;\nSetVisitor.prototype.visitTimeSecond = setTimeSecond;\nSetVisitor.prototype.visitTimeMillisecond = setTimeMillisecond;\nSetVisitor.prototype.visitTimeMicrosecond = setTimeMicrosecond;\nSetVisitor.prototype.visitTimeNanosecond = setTimeNanosecond;\nSetVisitor.prototype.visitDecimal = setDecimal;\nSetVisitor.prototype.visitList = setList;\nSetVisitor.prototype.visitStruct = setStruct;\nSetVisitor.prototype.visitUnion = setUnion;\nSetVisitor.prototype.visitDenseUnion = setDenseUnion;\nSetVisitor.prototype.visitSparseUnion = setSparseUnion;\nSetVisitor.prototype.visitDictionary = setDictionary;\nSetVisitor.prototype.visitInterval = setIntervalValue;\nSetVisitor.prototype.visitIntervalDayTime = setIntervalDayTime;\nSetVisitor.prototype.visitIntervalYearMonth = setIntervalYearMonth;\nSetVisitor.prototype.visitFixedSizeList = setFixedSizeList;\nSetVisitor.prototype.visitMap = setMap;\n/** @ignore */\nexport const instance = new SetVisitor();\n\n//# sourceMappingURL=set.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Visitor } from '../visitor';\nimport { BinaryBuilder } from '../builder/binary';\nimport { BoolBuilder } from '../builder/bool';\nimport { DateBuilder, DateDayBuilder, DateMillisecondBuilder } from '../builder/date';\nimport { DecimalBuilder } from '../builder/decimal';\nimport { DictionaryBuilder } from '../builder/dictionary';\nimport { FixedSizeBinaryBuilder } from '../builder/fixedsizebinary';\nimport { FixedSizeListBuilder } from '../builder/fixedsizelist';\nimport { FloatBuilder, Float16Builder, Float32Builder, Float64Builder } from '../builder/float';\nimport { IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder } from '../builder/interval';\nimport { IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder } from '../builder/int';\nimport { ListBuilder } from '../builder/list';\nimport { MapBuilder } from '../builder/map';\nimport { NullBuilder } from '../builder/null';\nimport { StructBuilder } from '../builder/struct';\nimport { TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder } from '../builder/timestamp';\nimport { TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder } from '../builder/time';\nimport { UnionBuilder, DenseUnionBuilder, SparseUnionBuilder } from '../builder/union';\nimport { Utf8Builder } from '../builder/utf8';\n/** @ignore */\nexport class GetBuilderCtor extends Visitor {\n    visitNull() { return NullBuilder; }\n    visitBool() { return BoolBuilder; }\n    visitInt() { return IntBuilder; }\n    visitInt8() { return Int8Builder; }\n    visitInt16() { return Int16Builder; }\n    visitInt32() { return Int32Builder; }\n    visitInt64() { return Int64Builder; }\n    visitUint8() { return Uint8Builder; }\n    visitUint16() { return Uint16Builder; }\n    visitUint32() { return Uint32Builder; }\n    visitUint64() { return Uint64Builder; }\n    visitFloat() { return FloatBuilder; }\n    visitFloat16() { return Float16Builder; }\n    visitFloat32() { return Float32Builder; }\n    visitFloat64() { return Float64Builder; }\n    visitUtf8() { return Utf8Builder; }\n    visitBinary() { return BinaryBuilder; }\n    visitFixedSizeBinary() { return FixedSizeBinaryBuilder; }\n    visitDate() { return DateBuilder; }\n    visitDateDay() { return DateDayBuilder; }\n    visitDateMillisecond() { return DateMillisecondBuilder; }\n    visitTimestamp() { return TimestampBuilder; }\n    visitTimestampSecond() { return TimestampSecondBuilder; }\n    visitTimestampMillisecond() { return TimestampMillisecondBuilder; }\n    visitTimestampMicrosecond() { return TimestampMicrosecondBuilder; }\n    visitTimestampNanosecond() { return TimestampNanosecondBuilder; }\n    visitTime() { return TimeBuilder; }\n    visitTimeSecond() { return TimeSecondBuilder; }\n    visitTimeMillisecond() { return TimeMillisecondBuilder; }\n    visitTimeMicrosecond() { return TimeMicrosecondBuilder; }\n    visitTimeNanosecond() { return TimeNanosecondBuilder; }\n    visitDecimal() { return DecimalBuilder; }\n    visitList() { return ListBuilder; }\n    visitStruct() { return StructBuilder; }\n    visitUnion() { return UnionBuilder; }\n    visitDenseUnion() { return DenseUnionBuilder; }\n    visitSparseUnion() { return SparseUnionBuilder; }\n    visitDictionary() { return DictionaryBuilder; }\n    visitInterval() { return IntervalBuilder; }\n    visitIntervalDayTime() { return IntervalDayTimeBuilder; }\n    visitIntervalYearMonth() { return IntervalYearMonthBuilder; }\n    visitFixedSizeList() { return FixedSizeListBuilder; }\n    visitMap() { return MapBuilder; }\n}\n/** @ignore */\nexport const instance = new GetBuilderCtor();\n\n//# sourceMappingURL=builderctor.mjs.map\n","// automatically generated by the FlatBuffers compiler, do not modify\nimport * as NS7624605610262437867 from './Schema';\n/**\n * ----------------------------------------------------------------------\n * Arrow File metadata\n *\n *\n * @constructor\n */\nexport var org;\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Footer {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Footer\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Footer= obj\n                     * @returns Footer\n                     */\n                    static getRootAsFooter(bb, obj) {\n                        return (obj || new Footer).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @returns org.apache.arrow.flatbuf.MetadataVersion\n                     */\n                    version() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? /**  */ (this.bb.readInt16(this.bb_pos + offset)) : NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1;\n                    }\n                    /**\n                     * @param org.apache.arrow.flatbuf.Schema= obj\n                     * @returns org.apache.arrow.flatbuf.Schema|null\n                     */\n                    schema(obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? (obj || new NS7624605610262437867.org.apache.arrow.flatbuf.Schema).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\n                    }\n                    /**\n                     * @param number index\n                     * @param org.apache.arrow.flatbuf.Block= obj\n                     * @returns org.apache.arrow.flatbuf.Block\n                     */\n                    dictionaries(index, obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 8);\n                        return offset ? (obj || new org.apache.arrow.flatbuf.Block).__init(this.bb.__vector(this.bb_pos + offset) + index * 24, this.bb) : null;\n                    }\n                    /**\n                     * @returns number\n                     */\n                    dictionariesLength() {\n                        let offset = this.bb.__offset(this.bb_pos, 8);\n                        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * @param number index\n                     * @param org.apache.arrow.flatbuf.Block= obj\n                     * @returns org.apache.arrow.flatbuf.Block\n                     */\n                    recordBatches(index, obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 10);\n                        return offset ? (obj || new org.apache.arrow.flatbuf.Block).__init(this.bb.__vector(this.bb_pos + offset) + index * 24, this.bb) : null;\n                    }\n                    /**\n                     * @returns number\n                     */\n                    recordBatchesLength() {\n                        let offset = this.bb.__offset(this.bb_pos, 10);\n                        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startFooter(builder) {\n                        builder.startObject(4);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param org.apache.arrow.flatbuf.MetadataVersion version\n                     */\n                    static addVersion(builder, version) {\n                        builder.addFieldInt16(0, version, NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset schemaOffset\n                     */\n                    static addSchema(builder, schemaOffset) {\n                        builder.addFieldOffset(1, schemaOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset dictionariesOffset\n                     */\n                    static addDictionaries(builder, dictionariesOffset) {\n                        builder.addFieldOffset(2, dictionariesOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number numElems\n                     */\n                    static startDictionariesVector(builder, numElems) {\n                        builder.startVector(24, numElems, 8);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset recordBatchesOffset\n                     */\n                    static addRecordBatches(builder, recordBatchesOffset) {\n                        builder.addFieldOffset(3, recordBatchesOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number numElems\n                     */\n                    static startRecordBatchesVector(builder, numElems) {\n                        builder.startVector(24, numElems, 8);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endFooter(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset offset\n                     */\n                    static finishFooterBuffer(builder, offset) {\n                        builder.finish(offset);\n                    }\n                    static createFooter(builder, version, schemaOffset, dictionariesOffset, recordBatchesOffset) {\n                        Footer.startFooter(builder);\n                        Footer.addVersion(builder, version);\n                        Footer.addSchema(builder, schemaOffset);\n                        Footer.addDictionaries(builder, dictionariesOffset);\n                        Footer.addRecordBatches(builder, recordBatchesOffset);\n                        return Footer.endFooter(builder);\n                    }\n                }\n                flatbuf.Footer = Footer;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Block {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Block\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * Index to the start of the RecordBlock (note this is past the Message header)\n                     *\n                     * @returns flatbuffers.Long\n                     */\n                    offset() {\n                        return this.bb.readInt64(this.bb_pos);\n                    }\n                    /**\n                     * Length of the metadata\n                     *\n                     * @returns number\n                     */\n                    metaDataLength() {\n                        return this.bb.readInt32(this.bb_pos + 8);\n                    }\n                    /**\n                     * Length of the data (this is aligned so there can be a gap between this and\n                     * the metatdata).\n                     *\n                     * @returns flatbuffers.Long\n                     */\n                    bodyLength() {\n                        return this.bb.readInt64(this.bb_pos + 16);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Long offset\n                     * @param number metaDataLength\n                     * @param flatbuffers.Long bodyLength\n                     * @returns flatbuffers.Offset\n                     */\n                    static createBlock(builder, offset, metaDataLength, bodyLength) {\n                        builder.prep(8, 24);\n                        builder.writeInt64(bodyLength);\n                        builder.pad(4);\n                        builder.writeInt32(metaDataLength);\n                        builder.writeInt64(offset);\n                        return builder.offset();\n                    }\n                }\n                flatbuf.Block = Block;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n\n//# sourceMappingURL=File.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n/** @ignore */\nexport { Builder } from '../builder';\nexport { BoolBuilder } from './bool';\nexport { NullBuilder } from './null';\nexport { DateBuilder, DateDayBuilder, DateMillisecondBuilder } from './date';\nexport { DecimalBuilder } from './decimal';\nexport { DictionaryBuilder } from './dictionary';\nexport { FixedSizeBinaryBuilder } from './fixedsizebinary';\nexport { FloatBuilder, Float16Builder, Float32Builder, Float64Builder } from './float';\nexport { IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder } from './int';\nexport { TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder } from './time';\nexport { TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder } from './timestamp';\nexport { IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder } from './interval';\nexport { Utf8Builder } from './utf8';\nexport { BinaryBuilder } from './binary';\nexport { ListBuilder } from './list';\nexport { FixedSizeListBuilder } from './fixedsizelist';\nexport { MapBuilder } from './map';\nexport { StructBuilder } from './struct';\nexport { UnionBuilder, SparseUnionBuilder, DenseUnionBuilder } from './union';\nimport { Type } from '../enum';\nimport { Utf8Builder } from './utf8';\nimport { Builder } from '../builder';\nimport { instance as setVisitor } from '../visitor/set';\nimport { instance as getBuilderConstructor } from '../visitor/builderctor';\n/** @nocollapse */\nBuilder.new = newBuilder;\nfunction newBuilder(options) {\n    const type = options.type;\n    const builder = new (getBuilderConstructor.getVisitFn(type)())(options);\n    if (type.children && type.children.length > 0) {\n        const children = options['children'] || [];\n        const defaultOptions = { 'nullValues': options['nullValues'] };\n        const getChildOptions = Array.isArray(children)\n            ? ((_, i) => children[i] || defaultOptions)\n            : (({ name }) => children[name] || defaultOptions);\n        type.children.forEach((field, index) => {\n            const { type } = field;\n            const opts = getChildOptions(field, index);\n            builder.children.push(newBuilder({ ...opts, type }));\n        });\n    }\n    return builder;\n}\nObject.keys(Type)\n    .map((T) => Type[T])\n    .filter((T) => typeof T === 'number' && T !== Type.NONE)\n    .forEach((typeId) => {\n    const BuilderCtor = getBuilderConstructor.visit(typeId);\n    BuilderCtor.prototype._setValue = setVisitor.getVisitFn(typeId);\n});\nUtf8Builder.prototype._setValue = setVisitor.visitBinary;\n\n//# sourceMappingURL=index.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n/* tslint:disable:class-name */\nimport * as File_ from '../../fb/File';\nimport { flatbuffers } from 'flatbuffers';\nvar Long = flatbuffers.Long;\nvar Builder = flatbuffers.Builder;\nvar ByteBuffer = flatbuffers.ByteBuffer;\nvar _Block = File_.org.apache.arrow.flatbuf.Block;\nvar _Footer = File_.org.apache.arrow.flatbuf.Footer;\nimport { Schema } from '../../schema';\nimport { MetadataVersion } from '../../enum';\nimport { toUint8Array } from '../../util/buffer';\n/** @ignore */\nclass Footer_ {\n    constructor(schema, version = MetadataVersion.V4, recordBatches, dictionaryBatches) {\n        this.schema = schema;\n        this.version = version;\n        recordBatches && (this._recordBatches = recordBatches);\n        dictionaryBatches && (this._dictionaryBatches = dictionaryBatches);\n    }\n    /** @nocollapse */\n    static decode(buf) {\n        buf = new ByteBuffer(toUint8Array(buf));\n        const footer = _Footer.getRootAsFooter(buf);\n        const schema = Schema.decode(footer.schema());\n        return new OffHeapFooter(schema, footer);\n    }\n    /** @nocollapse */\n    static encode(footer) {\n        const b = new Builder();\n        const schemaOffset = Schema.encode(b, footer.schema);\n        _Footer.startRecordBatchesVector(b, footer.numRecordBatches);\n        [...footer.recordBatches()].slice().reverse().forEach((rb) => FileBlock.encode(b, rb));\n        const recordBatchesOffset = b.endVector();\n        _Footer.startDictionariesVector(b, footer.numDictionaries);\n        [...footer.dictionaryBatches()].slice().reverse().forEach((db) => FileBlock.encode(b, db));\n        const dictionaryBatchesOffset = b.endVector();\n        _Footer.startFooter(b);\n        _Footer.addSchema(b, schemaOffset);\n        _Footer.addVersion(b, MetadataVersion.V4);\n        _Footer.addRecordBatches(b, recordBatchesOffset);\n        _Footer.addDictionaries(b, dictionaryBatchesOffset);\n        _Footer.finishFooterBuffer(b, _Footer.endFooter(b));\n        return b.asUint8Array();\n    }\n    get numRecordBatches() { return this._recordBatches.length; }\n    get numDictionaries() { return this._dictionaryBatches.length; }\n    *recordBatches() {\n        for (let block, i = -1, n = this.numRecordBatches; ++i < n;) {\n            if (block = this.getRecordBatch(i)) {\n                yield block;\n            }\n        }\n    }\n    *dictionaryBatches() {\n        for (let block, i = -1, n = this.numDictionaries; ++i < n;) {\n            if (block = this.getDictionaryBatch(i)) {\n                yield block;\n            }\n        }\n    }\n    getRecordBatch(index) {\n        return index >= 0\n            && index < this.numRecordBatches\n            && this._recordBatches[index] || null;\n    }\n    getDictionaryBatch(index) {\n        return index >= 0\n            && index < this.numDictionaries\n            && this._dictionaryBatches[index] || null;\n    }\n}\nexport { Footer_ as Footer };\n/** @ignore */\nclass OffHeapFooter extends Footer_ {\n    constructor(schema, _footer) {\n        super(schema, _footer.version());\n        this._footer = _footer;\n    }\n    get numRecordBatches() { return this._footer.recordBatchesLength(); }\n    get numDictionaries() { return this._footer.dictionariesLength(); }\n    getRecordBatch(index) {\n        if (index >= 0 && index < this.numRecordBatches) {\n            const fileBlock = this._footer.recordBatches(index);\n            if (fileBlock) {\n                return FileBlock.decode(fileBlock);\n            }\n        }\n        return null;\n    }\n    getDictionaryBatch(index) {\n        if (index >= 0 && index < this.numDictionaries) {\n            const fileBlock = this._footer.dictionaries(index);\n            if (fileBlock) {\n                return FileBlock.decode(fileBlock);\n            }\n        }\n        return null;\n    }\n}\n/** @ignore */\nexport class FileBlock {\n    /** @nocollapse */\n    static decode(block) {\n        return new FileBlock(block.metaDataLength(), block.bodyLength(), block.offset());\n    }\n    /** @nocollapse */\n    static encode(b, fileBlock) {\n        const { metaDataLength } = fileBlock;\n        const offset = new Long(fileBlock.offset, 0);\n        const bodyLength = new Long(fileBlock.bodyLength, 0);\n        return _Block.createBlock(b, offset, metaDataLength, bodyLength);\n    }\n    constructor(metaDataLength, bodyLength, offset) {\n        this.metaDataLength = metaDataLength;\n        this.offset = typeof offset === 'number' ? offset : offset.low;\n        this.bodyLength = typeof bodyLength === 'number' ? bodyLength : bodyLength.low;\n    }\n}\n\n//# sourceMappingURL=file.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport streamAdapters from './adapters';\nimport { decodeUtf8 } from '../util/utf8';\nimport { ITERATOR_DONE, AsyncQueue } from './interfaces';\nimport { toUint8Array, joinUint8Arrays } from '../util/buffer';\nimport { isPromise, isFetchResponse, isIterable, isAsyncIterable, isReadableDOMStream, isReadableNodeStream } from '../util/compat';\n/** @ignore */\nexport class AsyncByteQueue extends AsyncQueue {\n    write(value) {\n        if ((value = toUint8Array(value)).byteLength > 0) {\n            return super.write(value);\n        }\n    }\n    toString(sync = false) {\n        return sync\n            ? decodeUtf8(this.toUint8Array(true))\n            : this.toUint8Array(false).then(decodeUtf8);\n    }\n    toUint8Array(sync = false) {\n        return sync ? joinUint8Arrays(this._values)[0] : (async () => {\n            let buffers = [], byteLength = 0;\n            for await (const chunk of this) {\n                buffers.push(chunk);\n                byteLength += chunk.byteLength;\n            }\n            return joinUint8Arrays(buffers, byteLength)[0];\n        })();\n    }\n}\n/** @ignore */\nexport class ByteStream {\n    constructor(source) {\n        if (source) {\n            this.source = new ByteStreamSource(streamAdapters.fromIterable(source));\n        }\n    }\n    [Symbol.iterator]() { return this; }\n    next(value) { return this.source.next(value); }\n    throw(value) { return this.source.throw(value); }\n    return(value) { return this.source.return(value); }\n    peek(size) { return this.source.peek(size); }\n    read(size) { return this.source.read(size); }\n}\n/** @ignore */\nexport class AsyncByteStream {\n    constructor(source) {\n        if (source instanceof AsyncByteStream) {\n            this.source = source.source;\n        }\n        else if (source instanceof AsyncByteQueue) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromAsyncIterable(source));\n        }\n        else if (isReadableNodeStream(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromNodeStream(source));\n        }\n        else if (isReadableDOMStream(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromDOMStream(source));\n        }\n        else if (isFetchResponse(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromDOMStream(source.body));\n        }\n        else if (isIterable(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromIterable(source));\n        }\n        else if (isPromise(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromAsyncIterable(source));\n        }\n        else if (isAsyncIterable(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromAsyncIterable(source));\n        }\n    }\n    [Symbol.asyncIterator]() { return this; }\n    next(value) { return this.source.next(value); }\n    throw(value) { return this.source.throw(value); }\n    return(value) { return this.source.return(value); }\n    get closed() { return this.source.closed; }\n    cancel(reason) { return this.source.cancel(reason); }\n    peek(size) { return this.source.peek(size); }\n    read(size) { return this.source.read(size); }\n}\n/** @ignore */\nclass ByteStreamSource {\n    constructor(source) {\n        this.source = source;\n    }\n    cancel(reason) { this.return(reason); }\n    peek(size) { return this.next(size, 'peek').value; }\n    read(size) { return this.next(size, 'read').value; }\n    next(size, cmd = 'read') { return this.source.next({ cmd, size }); }\n    throw(value) { return Object.create((this.source.throw && this.source.throw(value)) || ITERATOR_DONE); }\n    return(value) { return Object.create((this.source.return && this.source.return(value)) || ITERATOR_DONE); }\n}\n/** @ignore */\nclass AsyncByteStreamSource {\n    constructor(source) {\n        this.source = source;\n        this._closedPromise = new Promise((r) => this._closedPromiseResolve = r);\n    }\n    async cancel(reason) { await this.return(reason); }\n    get closed() { return this._closedPromise; }\n    async read(size) { return (await this.next(size, 'read')).value; }\n    async peek(size) { return (await this.next(size, 'peek')).value; }\n    async next(size, cmd = 'read') { return (await this.source.next({ cmd, size })); }\n    async throw(value) {\n        const result = (this.source.throw && await this.source.throw(value)) || ITERATOR_DONE;\n        this._closedPromiseResolve && this._closedPromiseResolve();\n        this._closedPromiseResolve = undefined;\n        return Object.create(result);\n    }\n    async return(value) {\n        const result = (this.source.return && await this.source.return(value)) || ITERATOR_DONE;\n        this._closedPromiseResolve && this._closedPromiseResolve();\n        this._closedPromiseResolve = undefined;\n        return Object.create(result);\n    }\n}\n\n//# sourceMappingURL=stream.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { ByteStream, AsyncByteStream } from './stream';\nimport { toUint8Array } from '../util/buffer';\n/** @ignore */\nexport class RandomAccessFile extends ByteStream {\n    constructor(buffer, byteLength) {\n        super();\n        this.position = 0;\n        this.buffer = toUint8Array(buffer);\n        this.size = typeof byteLength === 'undefined' ? this.buffer.byteLength : byteLength;\n    }\n    readInt32(position) {\n        const { buffer, byteOffset } = this.readAt(position, 4);\n        return new DataView(buffer, byteOffset).getInt32(0, true);\n    }\n    seek(position) {\n        this.position = Math.min(position, this.size);\n        return position < this.size;\n    }\n    read(nBytes) {\n        const { buffer, size, position } = this;\n        if (buffer && position < size) {\n            if (typeof nBytes !== 'number') {\n                nBytes = Infinity;\n            }\n            this.position = Math.min(size, position + Math.min(size - position, nBytes));\n            return buffer.subarray(position, this.position);\n        }\n        return null;\n    }\n    readAt(position, nBytes) {\n        const buf = this.buffer;\n        const end = Math.min(this.size, position + nBytes);\n        return buf ? buf.subarray(position, end) : new Uint8Array(nBytes);\n    }\n    close() { this.buffer && (this.buffer = null); }\n    throw(value) { this.close(); return { done: true, value }; }\n    return(value) { this.close(); return { done: true, value }; }\n}\n/** @ignore */\nexport class AsyncRandomAccessFile extends AsyncByteStream {\n    constructor(file, byteLength) {\n        super();\n        this.position = 0;\n        this._handle = file;\n        if (typeof byteLength === 'number') {\n            this.size = byteLength;\n        }\n        else {\n            this._pending = (async () => {\n                this.size = (await file.stat()).size;\n                delete this._pending;\n            })();\n        }\n    }\n    async readInt32(position) {\n        const { buffer, byteOffset } = await this.readAt(position, 4);\n        return new DataView(buffer, byteOffset).getInt32(0, true);\n    }\n    async seek(position) {\n        this._pending && await this._pending;\n        this.position = Math.min(position, this.size);\n        return position < this.size;\n    }\n    async read(nBytes) {\n        this._pending && await this._pending;\n        const { _handle: file, size, position } = this;\n        if (file && position < size) {\n            if (typeof nBytes !== 'number') {\n                nBytes = Infinity;\n            }\n            let pos = position, offset = 0, bytesRead = 0;\n            let end = Math.min(size, pos + Math.min(size - pos, nBytes));\n            let buffer = new Uint8Array(Math.max(0, (this.position = end) - pos));\n            while ((pos += bytesRead) < end && (offset += bytesRead) < buffer.byteLength) {\n                ({ bytesRead } = await file.read(buffer, offset, buffer.byteLength - offset, pos));\n            }\n            return buffer;\n        }\n        return null;\n    }\n    async readAt(position, nBytes) {\n        this._pending && await this._pending;\n        const { _handle: file, size } = this;\n        if (file && (position + nBytes) < size) {\n            const end = Math.min(size, position + nBytes);\n            const buffer = new Uint8Array(end - position);\n            return (await file.read(buffer, 0, nBytes, position)).buffer;\n        }\n        return new Uint8Array(nBytes);\n    }\n    async close() { const f = this._handle; this._handle = null; f && await f.close(); }\n    async throw(value) { await this.close(); return { done: true, value }; }\n    async return(value) { await this.close(); return { done: true, value }; }\n}\n\n//# sourceMappingURL=file.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n/** @ignore */\nconst carryBit16 = 1 << 16;\n/** @ignore */\nfunction intAsHex(value) {\n    if (value < 0) {\n        value = 0xFFFFFFFF + value + 1;\n    }\n    return `0x${value.toString(16)}`;\n}\n/** @ignore */\nconst kInt32DecimalDigits = 8;\n/** @ignore */\nconst kPowersOfTen = [1,\n    10,\n    100,\n    1000,\n    10000,\n    100000,\n    1000000,\n    10000000,\n    100000000];\n/** @ignore */\nexport class BaseInt64 {\n    constructor(buffer) {\n        this.buffer = buffer;\n    }\n    high() { return this.buffer[1]; }\n    low() { return this.buffer[0]; }\n    _times(other) {\n        // Break the left and right numbers into 16 bit chunks\n        // so that we can multiply them without overflow.\n        const L = new Uint32Array([\n            this.buffer[1] >>> 16,\n            this.buffer[1] & 0xFFFF,\n            this.buffer[0] >>> 16,\n            this.buffer[0] & 0xFFFF\n        ]);\n        const R = new Uint32Array([\n            other.buffer[1] >>> 16,\n            other.buffer[1] & 0xFFFF,\n            other.buffer[0] >>> 16,\n            other.buffer[0] & 0xFFFF\n        ]);\n        let product = L[3] * R[3];\n        this.buffer[0] = product & 0xFFFF;\n        let sum = product >>> 16;\n        product = L[2] * R[3];\n        sum += product;\n        product = (L[3] * R[2]) >>> 0;\n        sum += product;\n        this.buffer[0] += sum << 16;\n        this.buffer[1] = (sum >>> 0 < product ? carryBit16 : 0);\n        this.buffer[1] += sum >>> 16;\n        this.buffer[1] += L[1] * R[3] + L[2] * R[2] + L[3] * R[1];\n        this.buffer[1] += (L[0] * R[3] + L[1] * R[2] + L[2] * R[1] + L[3] * R[0]) << 16;\n        return this;\n    }\n    _plus(other) {\n        const sum = (this.buffer[0] + other.buffer[0]) >>> 0;\n        this.buffer[1] += other.buffer[1];\n        if (sum < (this.buffer[0] >>> 0)) {\n            ++this.buffer[1];\n        }\n        this.buffer[0] = sum;\n    }\n    lessThan(other) {\n        return this.buffer[1] < other.buffer[1] ||\n            (this.buffer[1] === other.buffer[1] && this.buffer[0] < other.buffer[0]);\n    }\n    equals(other) {\n        return this.buffer[1] === other.buffer[1] && this.buffer[0] == other.buffer[0];\n    }\n    greaterThan(other) {\n        return other.lessThan(this);\n    }\n    hex() {\n        return `${intAsHex(this.buffer[1])} ${intAsHex(this.buffer[0])}`;\n    }\n}\n/** @ignore */\nexport class Uint64 extends BaseInt64 {\n    times(other) {\n        this._times(other);\n        return this;\n    }\n    plus(other) {\n        this._plus(other);\n        return this;\n    }\n    /** @nocollapse */\n    static from(val, out_buffer = new Uint32Array(2)) {\n        return Uint64.fromString(typeof (val) === 'string' ? val : val.toString(), out_buffer);\n    }\n    /** @nocollapse */\n    static fromNumber(num, out_buffer = new Uint32Array(2)) {\n        // Always parse numbers as strings - pulling out high and low bits\n        // directly seems to lose precision sometimes\n        // For example:\n        //     > -4613034156400212000 >>> 0\n        //     721782784\n        // The correct lower 32-bits are 721782752\n        return Uint64.fromString(num.toString(), out_buffer);\n    }\n    /** @nocollapse */\n    static fromString(str, out_buffer = new Uint32Array(2)) {\n        const length = str.length;\n        let out = new Uint64(out_buffer);\n        for (let posn = 0; posn < length;) {\n            const group = kInt32DecimalDigits < length - posn ?\n                kInt32DecimalDigits : length - posn;\n            const chunk = new Uint64(new Uint32Array([parseInt(str.substr(posn, group), 10), 0]));\n            const multiple = new Uint64(new Uint32Array([kPowersOfTen[group], 0]));\n            out.times(multiple);\n            out.plus(chunk);\n            posn += group;\n        }\n        return out;\n    }\n    /** @nocollapse */\n    static convertArray(values) {\n        const data = new Uint32Array(values.length * 2);\n        for (let i = -1, n = values.length; ++i < n;) {\n            Uint64.from(values[i], new Uint32Array(data.buffer, data.byteOffset + 2 * i * 4, 2));\n        }\n        return data;\n    }\n    /** @nocollapse */\n    static multiply(left, right) {\n        let rtrn = new Uint64(new Uint32Array(left.buffer));\n        return rtrn.times(right);\n    }\n    /** @nocollapse */\n    static add(left, right) {\n        let rtrn = new Uint64(new Uint32Array(left.buffer));\n        return rtrn.plus(right);\n    }\n}\n/** @ignore */\nexport class Int64 extends BaseInt64 {\n    negate() {\n        this.buffer[0] = ~this.buffer[0] + 1;\n        this.buffer[1] = ~this.buffer[1];\n        if (this.buffer[0] == 0) {\n            ++this.buffer[1];\n        }\n        return this;\n    }\n    times(other) {\n        this._times(other);\n        return this;\n    }\n    plus(other) {\n        this._plus(other);\n        return this;\n    }\n    lessThan(other) {\n        // force high bytes to be signed\n        const this_high = this.buffer[1] << 0;\n        const other_high = other.buffer[1] << 0;\n        return this_high < other_high ||\n            (this_high === other_high && this.buffer[0] < other.buffer[0]);\n    }\n    /** @nocollapse */\n    static from(val, out_buffer = new Uint32Array(2)) {\n        return Int64.fromString(typeof (val) === 'string' ? val : val.toString(), out_buffer);\n    }\n    /** @nocollapse */\n    static fromNumber(num, out_buffer = new Uint32Array(2)) {\n        // Always parse numbers as strings - pulling out high and low bits\n        // directly seems to lose precision sometimes\n        // For example:\n        //     > -4613034156400212000 >>> 0\n        //     721782784\n        // The correct lower 32-bits are 721782752\n        return Int64.fromString(num.toString(), out_buffer);\n    }\n    /** @nocollapse */\n    static fromString(str, out_buffer = new Uint32Array(2)) {\n        // TODO: Assert that out_buffer is 0 and length = 2\n        const negate = str.startsWith('-');\n        const length = str.length;\n        let out = new Int64(out_buffer);\n        for (let posn = negate ? 1 : 0; posn < length;) {\n            const group = kInt32DecimalDigits < length - posn ?\n                kInt32DecimalDigits : length - posn;\n            const chunk = new Int64(new Uint32Array([parseInt(str.substr(posn, group), 10), 0]));\n            const multiple = new Int64(new Uint32Array([kPowersOfTen[group], 0]));\n            out.times(multiple);\n            out.plus(chunk);\n            posn += group;\n        }\n        return negate ? out.negate() : out;\n    }\n    /** @nocollapse */\n    static convertArray(values) {\n        const data = new Uint32Array(values.length * 2);\n        for (let i = -1, n = values.length; ++i < n;) {\n            Int64.from(values[i], new Uint32Array(data.buffer, data.byteOffset + 2 * i * 4, 2));\n        }\n        return data;\n    }\n    /** @nocollapse */\n    static multiply(left, right) {\n        let rtrn = new Int64(new Uint32Array(left.buffer));\n        return rtrn.times(right);\n    }\n    /** @nocollapse */\n    static add(left, right) {\n        let rtrn = new Int64(new Uint32Array(left.buffer));\n        return rtrn.plus(right);\n    }\n}\n/** @ignore */\nexport class Int128 {\n    constructor(buffer) {\n        this.buffer = buffer;\n        // buffer[3] MSB (high)\n        // buffer[2]\n        // buffer[1]\n        // buffer[0] LSB (low)\n    }\n    high() {\n        return new Int64(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset + 8, 2));\n    }\n    low() {\n        return new Int64(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset, 2));\n    }\n    negate() {\n        this.buffer[0] = ~this.buffer[0] + 1;\n        this.buffer[1] = ~this.buffer[1];\n        this.buffer[2] = ~this.buffer[2];\n        this.buffer[3] = ~this.buffer[3];\n        if (this.buffer[0] == 0) {\n            ++this.buffer[1];\n        }\n        if (this.buffer[1] == 0) {\n            ++this.buffer[2];\n        }\n        if (this.buffer[2] == 0) {\n            ++this.buffer[3];\n        }\n        return this;\n    }\n    times(other) {\n        // Break the left and right numbers into 32 bit chunks\n        // so that we can multiply them without overflow.\n        const L0 = new Uint64(new Uint32Array([this.buffer[3], 0]));\n        const L1 = new Uint64(new Uint32Array([this.buffer[2], 0]));\n        const L2 = new Uint64(new Uint32Array([this.buffer[1], 0]));\n        const L3 = new Uint64(new Uint32Array([this.buffer[0], 0]));\n        const R0 = new Uint64(new Uint32Array([other.buffer[3], 0]));\n        const R1 = new Uint64(new Uint32Array([other.buffer[2], 0]));\n        const R2 = new Uint64(new Uint32Array([other.buffer[1], 0]));\n        const R3 = new Uint64(new Uint32Array([other.buffer[0], 0]));\n        let product = Uint64.multiply(L3, R3);\n        this.buffer[0] = product.low();\n        let sum = new Uint64(new Uint32Array([product.high(), 0]));\n        product = Uint64.multiply(L2, R3);\n        sum.plus(product);\n        product = Uint64.multiply(L3, R2);\n        sum.plus(product);\n        this.buffer[1] = sum.low();\n        this.buffer[3] = (sum.lessThan(product) ? 1 : 0);\n        this.buffer[2] = sum.high();\n        let high = new Uint64(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset + 8, 2));\n        high.plus(Uint64.multiply(L1, R3))\n            .plus(Uint64.multiply(L2, R2))\n            .plus(Uint64.multiply(L3, R1));\n        this.buffer[3] += Uint64.multiply(L0, R3)\n            .plus(Uint64.multiply(L1, R2))\n            .plus(Uint64.multiply(L2, R1))\n            .plus(Uint64.multiply(L3, R0)).low();\n        return this;\n    }\n    plus(other) {\n        let sums = new Uint32Array(4);\n        sums[3] = (this.buffer[3] + other.buffer[3]) >>> 0;\n        sums[2] = (this.buffer[2] + other.buffer[2]) >>> 0;\n        sums[1] = (this.buffer[1] + other.buffer[1]) >>> 0;\n        sums[0] = (this.buffer[0] + other.buffer[0]) >>> 0;\n        if (sums[0] < (this.buffer[0] >>> 0)) {\n            ++sums[1];\n        }\n        if (sums[1] < (this.buffer[1] >>> 0)) {\n            ++sums[2];\n        }\n        if (sums[2] < (this.buffer[2] >>> 0)) {\n            ++sums[3];\n        }\n        this.buffer[3] = sums[3];\n        this.buffer[2] = sums[2];\n        this.buffer[1] = sums[1];\n        this.buffer[0] = sums[0];\n        return this;\n    }\n    hex() {\n        return `${intAsHex(this.buffer[3])} ${intAsHex(this.buffer[2])} ${intAsHex(this.buffer[1])} ${intAsHex(this.buffer[0])}`;\n    }\n    /** @nocollapse */\n    static multiply(left, right) {\n        let rtrn = new Int128(new Uint32Array(left.buffer));\n        return rtrn.times(right);\n    }\n    /** @nocollapse */\n    static add(left, right) {\n        let rtrn = new Int128(new Uint32Array(left.buffer));\n        return rtrn.plus(right);\n    }\n    /** @nocollapse */\n    static from(val, out_buffer = new Uint32Array(4)) {\n        return Int128.fromString(typeof (val) === 'string' ? val : val.toString(), out_buffer);\n    }\n    /** @nocollapse */\n    static fromNumber(num, out_buffer = new Uint32Array(4)) {\n        // Always parse numbers as strings - pulling out high and low bits\n        // directly seems to lose precision sometimes\n        // For example:\n        //     > -4613034156400212000 >>> 0\n        //     721782784\n        // The correct lower 32-bits are 721782752\n        return Int128.fromString(num.toString(), out_buffer);\n    }\n    /** @nocollapse */\n    static fromString(str, out_buffer = new Uint32Array(4)) {\n        // TODO: Assert that out_buffer is 0 and length = 4\n        const negate = str.startsWith('-');\n        const length = str.length;\n        let out = new Int128(out_buffer);\n        for (let posn = negate ? 1 : 0; posn < length;) {\n            const group = kInt32DecimalDigits < length - posn ?\n                kInt32DecimalDigits : length - posn;\n            const chunk = new Int128(new Uint32Array([parseInt(str.substr(posn, group), 10), 0, 0, 0]));\n            const multiple = new Int128(new Uint32Array([kPowersOfTen[group], 0, 0, 0]));\n            out.times(multiple);\n            out.plus(chunk);\n            posn += group;\n        }\n        return negate ? out.negate() : out;\n    }\n    /** @nocollapse */\n    static convertArray(values) {\n        // TODO: Distinguish between string and number at compile-time\n        const data = new Uint32Array(values.length * 4);\n        for (let i = -1, n = values.length; ++i < n;) {\n            Int128.from(values[i], new Uint32Array(data.buffer, data.byteOffset + 4 * 4 * i, 4));\n        }\n        return data;\n    }\n}\n\n//# sourceMappingURL=int.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Data } from '../data';\nimport { Field } from '../schema';\nimport { DataType } from '../type';\nimport { Visitor } from '../visitor';\nimport { packBools } from '../util/bit';\nimport { encodeUtf8 } from '../util/utf8';\nimport { Int64, Int128 } from '../util/int';\nimport { UnionMode, DateUnit } from '../enum';\nimport { toArrayBufferView } from '../util/buffer';\n/** @ignore */\nexport class VectorLoader extends Visitor {\n    constructor(bytes, nodes, buffers, dictionaries) {\n        super();\n        this.nodesIndex = -1;\n        this.buffersIndex = -1;\n        this.bytes = bytes;\n        this.nodes = nodes;\n        this.buffers = buffers;\n        this.dictionaries = dictionaries;\n    }\n    visit(node) {\n        return super.visit(node instanceof Field ? node.type : node);\n    }\n    visitNull(type, { length, } = this.nextFieldNode()) { return Data.Null(type, 0, length); }\n    visitBool(type, { length, nullCount } = this.nextFieldNode()) { return Data.Bool(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type)); }\n    visitInt(type, { length, nullCount } = this.nextFieldNode()) { return Data.Int(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type)); }\n    visitFloat(type, { length, nullCount } = this.nextFieldNode()) { return Data.Float(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type)); }\n    visitUtf8(type, { length, nullCount } = this.nextFieldNode()) { return Data.Utf8(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.readData(type)); }\n    visitBinary(type, { length, nullCount } = this.nextFieldNode()) { return Data.Binary(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.readData(type)); }\n    visitFixedSizeBinary(type, { length, nullCount } = this.nextFieldNode()) { return Data.FixedSizeBinary(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type)); }\n    visitDate(type, { length, nullCount } = this.nextFieldNode()) { return Data.Date(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type)); }\n    visitTimestamp(type, { length, nullCount } = this.nextFieldNode()) { return Data.Timestamp(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type)); }\n    visitTime(type, { length, nullCount } = this.nextFieldNode()) { return Data.Time(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type)); }\n    visitDecimal(type, { length, nullCount } = this.nextFieldNode()) { return Data.Decimal(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type)); }\n    visitList(type, { length, nullCount } = this.nextFieldNode()) { return Data.List(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.visit(type.children[0])); }\n    visitStruct(type, { length, nullCount } = this.nextFieldNode()) { return Data.Struct(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.visitMany(type.children)); }\n    visitUnion(type) { return type.mode === UnionMode.Sparse ? this.visitSparseUnion(type) : this.visitDenseUnion(type); }\n    visitDenseUnion(type, { length, nullCount } = this.nextFieldNode()) { return Data.Union(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readTypeIds(type), this.readOffsets(type), this.visitMany(type.children)); }\n    visitSparseUnion(type, { length, nullCount } = this.nextFieldNode()) { return Data.Union(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readTypeIds(type), this.visitMany(type.children)); }\n    visitDictionary(type, { length, nullCount } = this.nextFieldNode()) { return Data.Dictionary(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type.indices), this.readDictionary(type)); }\n    visitInterval(type, { length, nullCount } = this.nextFieldNode()) { return Data.Interval(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type)); }\n    visitFixedSizeList(type, { length, nullCount } = this.nextFieldNode()) { return Data.FixedSizeList(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.visit(type.children[0])); }\n    visitMap(type, { length, nullCount } = this.nextFieldNode()) { return Data.Map(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.visit(type.children[0])); }\n    nextFieldNode() { return this.nodes[++this.nodesIndex]; }\n    nextBufferRange() { return this.buffers[++this.buffersIndex]; }\n    readNullBitmap(type, nullCount, buffer = this.nextBufferRange()) {\n        return nullCount > 0 && this.readData(type, buffer) || new Uint8Array(0);\n    }\n    readOffsets(type, buffer) { return this.readData(type, buffer); }\n    readTypeIds(type, buffer) { return this.readData(type, buffer); }\n    readData(_type, { length, offset } = this.nextBufferRange()) {\n        return this.bytes.subarray(offset, offset + length);\n    }\n    readDictionary(type) {\n        return this.dictionaries.get(type.id);\n    }\n}\n/** @ignore */\nexport class JSONVectorLoader extends VectorLoader {\n    constructor(sources, nodes, buffers, dictionaries) {\n        super(new Uint8Array(0), nodes, buffers, dictionaries);\n        this.sources = sources;\n    }\n    readNullBitmap(_type, nullCount, { offset } = this.nextBufferRange()) {\n        return nullCount <= 0 ? new Uint8Array(0) : packBools(this.sources[offset]);\n    }\n    readOffsets(_type, { offset } = this.nextBufferRange()) {\n        return toArrayBufferView(Uint8Array, toArrayBufferView(Int32Array, this.sources[offset]));\n    }\n    readTypeIds(type, { offset } = this.nextBufferRange()) {\n        return toArrayBufferView(Uint8Array, toArrayBufferView(type.ArrayType, this.sources[offset]));\n    }\n    readData(type, { offset } = this.nextBufferRange()) {\n        const { sources } = this;\n        if (DataType.isTimestamp(type)) {\n            return toArrayBufferView(Uint8Array, Int64.convertArray(sources[offset]));\n        }\n        else if ((DataType.isInt(type) || DataType.isTime(type)) && type.bitWidth === 64) {\n            return toArrayBufferView(Uint8Array, Int64.convertArray(sources[offset]));\n        }\n        else if (DataType.isDate(type) && type.unit === DateUnit.MILLISECOND) {\n            return toArrayBufferView(Uint8Array, Int64.convertArray(sources[offset]));\n        }\n        else if (DataType.isDecimal(type)) {\n            return toArrayBufferView(Uint8Array, Int128.convertArray(sources[offset]));\n        }\n        else if (DataType.isBinary(type) || DataType.isFixedSizeBinary(type)) {\n            return binaryDataFromJSON(sources[offset]);\n        }\n        else if (DataType.isBool(type)) {\n            return packBools(sources[offset]);\n        }\n        else if (DataType.isUtf8(type)) {\n            return encodeUtf8(sources[offset].join(''));\n        }\n        return toArrayBufferView(Uint8Array, toArrayBufferView(type.ArrayType, sources[offset].map((x) => +x)));\n    }\n}\n/** @ignore */\nfunction binaryDataFromJSON(values) {\n    // \"DATA\": [\"49BC7D5B6C47D2\",\"3F5FB6D9322026\"]\n    // There are definitely more efficient ways to do this... but it gets the\n    // job done.\n    const joined = values.join('');\n    const data = new Uint8Array(joined.length / 2);\n    for (let i = 0; i < joined.length; i += 2) {\n        data[i >> 1] = parseInt(joined.substr(i, 2), 16);\n    }\n    return data;\n}\n\n//# sourceMappingURL=vectorloader.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { flatbuffers } from 'flatbuffers';\nvar Long = flatbuffers.Long;\nimport * as Schema_ from '../fb/Schema';\nimport { Visitor } from '../visitor';\nvar Null = Schema_.org.apache.arrow.flatbuf.Null;\nvar Int = Schema_.org.apache.arrow.flatbuf.Int;\nvar FloatingPoint = Schema_.org.apache.arrow.flatbuf.FloatingPoint;\nvar Binary = Schema_.org.apache.arrow.flatbuf.Binary;\nvar Bool = Schema_.org.apache.arrow.flatbuf.Bool;\nvar Utf8 = Schema_.org.apache.arrow.flatbuf.Utf8;\nvar Decimal = Schema_.org.apache.arrow.flatbuf.Decimal;\nvar Date = Schema_.org.apache.arrow.flatbuf.Date;\nvar Time = Schema_.org.apache.arrow.flatbuf.Time;\nvar Timestamp = Schema_.org.apache.arrow.flatbuf.Timestamp;\nvar Interval = Schema_.org.apache.arrow.flatbuf.Interval;\nvar List = Schema_.org.apache.arrow.flatbuf.List;\nvar Struct = Schema_.org.apache.arrow.flatbuf.Struct_;\nvar Union = Schema_.org.apache.arrow.flatbuf.Union;\nvar DictionaryEncoding = Schema_.org.apache.arrow.flatbuf.DictionaryEncoding;\nvar FixedSizeBinary = Schema_.org.apache.arrow.flatbuf.FixedSizeBinary;\nvar FixedSizeList = Schema_.org.apache.arrow.flatbuf.FixedSizeList;\nvar Map_ = Schema_.org.apache.arrow.flatbuf.Map;\n/** @ignore */\nexport class TypeAssembler extends Visitor {\n    visit(node, builder) {\n        return (node == null || builder == null) ? undefined : super.visit(node, builder);\n    }\n    visitNull(_node, b) {\n        Null.startNull(b);\n        return Null.endNull(b);\n    }\n    visitInt(node, b) {\n        Int.startInt(b);\n        Int.addBitWidth(b, node.bitWidth);\n        Int.addIsSigned(b, node.isSigned);\n        return Int.endInt(b);\n    }\n    visitFloat(node, b) {\n        FloatingPoint.startFloatingPoint(b);\n        FloatingPoint.addPrecision(b, node.precision);\n        return FloatingPoint.endFloatingPoint(b);\n    }\n    visitBinary(_node, b) {\n        Binary.startBinary(b);\n        return Binary.endBinary(b);\n    }\n    visitBool(_node, b) {\n        Bool.startBool(b);\n        return Bool.endBool(b);\n    }\n    visitUtf8(_node, b) {\n        Utf8.startUtf8(b);\n        return Utf8.endUtf8(b);\n    }\n    visitDecimal(node, b) {\n        Decimal.startDecimal(b);\n        Decimal.addScale(b, node.scale);\n        Decimal.addPrecision(b, node.precision);\n        return Decimal.endDecimal(b);\n    }\n    visitDate(node, b) {\n        Date.startDate(b);\n        Date.addUnit(b, node.unit);\n        return Date.endDate(b);\n    }\n    visitTime(node, b) {\n        Time.startTime(b);\n        Time.addUnit(b, node.unit);\n        Time.addBitWidth(b, node.bitWidth);\n        return Time.endTime(b);\n    }\n    visitTimestamp(node, b) {\n        const timezone = (node.timezone && b.createString(node.timezone)) || undefined;\n        Timestamp.startTimestamp(b);\n        Timestamp.addUnit(b, node.unit);\n        if (timezone !== undefined) {\n            Timestamp.addTimezone(b, timezone);\n        }\n        return Timestamp.endTimestamp(b);\n    }\n    visitInterval(node, b) {\n        Interval.startInterval(b);\n        Interval.addUnit(b, node.unit);\n        return Interval.endInterval(b);\n    }\n    visitList(_node, b) {\n        List.startList(b);\n        return List.endList(b);\n    }\n    visitStruct(_node, b) {\n        Struct.startStruct_(b);\n        return Struct.endStruct_(b);\n    }\n    visitUnion(node, b) {\n        Union.startTypeIdsVector(b, node.typeIds.length);\n        const typeIds = Union.createTypeIdsVector(b, node.typeIds);\n        Union.startUnion(b);\n        Union.addMode(b, node.mode);\n        Union.addTypeIds(b, typeIds);\n        return Union.endUnion(b);\n    }\n    visitDictionary(node, b) {\n        const indexType = this.visit(node.indices, b);\n        DictionaryEncoding.startDictionaryEncoding(b);\n        DictionaryEncoding.addId(b, new Long(node.id, 0));\n        DictionaryEncoding.addIsOrdered(b, node.isOrdered);\n        if (indexType !== undefined) {\n            DictionaryEncoding.addIndexType(b, indexType);\n        }\n        return DictionaryEncoding.endDictionaryEncoding(b);\n    }\n    visitFixedSizeBinary(node, b) {\n        FixedSizeBinary.startFixedSizeBinary(b);\n        FixedSizeBinary.addByteWidth(b, node.byteWidth);\n        return FixedSizeBinary.endFixedSizeBinary(b);\n    }\n    visitFixedSizeList(node, b) {\n        FixedSizeList.startFixedSizeList(b);\n        FixedSizeList.addListSize(b, node.listSize);\n        return FixedSizeList.endFixedSizeList(b);\n    }\n    visitMap(node, b) {\n        Map_.startMap(b);\n        Map_.addKeysSorted(b, node.keysSorted);\n        return Map_.endMap(b);\n    }\n}\n/** @ignore */\nexport const instance = new TypeAssembler();\n\n//# sourceMappingURL=typeassembler.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Schema, Field } from '../../schema';\nimport { Dictionary, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct, Union, Bool, Null, Int, Float, Date_, Time, Interval, Timestamp, Int32, } from '../../type';\nimport { DictionaryBatch, RecordBatch, FieldNode, BufferRegion } from './message';\nimport { TimeUnit, Precision, IntervalUnit, UnionMode, DateUnit } from '../../enum';\n/** @ignore */\nexport function schemaFromJSON(_schema, dictionaries = new Map()) {\n    return new Schema(schemaFieldsFromJSON(_schema, dictionaries), customMetadataFromJSON(_schema['customMetadata']), dictionaries);\n}\n/** @ignore */\nexport function recordBatchFromJSON(b) {\n    return new RecordBatch(b['count'], fieldNodesFromJSON(b['columns']), buffersFromJSON(b['columns']));\n}\n/** @ignore */\nexport function dictionaryBatchFromJSON(b) {\n    return new DictionaryBatch(recordBatchFromJSON(b['data']), b['id'], b['isDelta']);\n}\n/** @ignore */\nfunction schemaFieldsFromJSON(_schema, dictionaries) {\n    return (_schema['fields'] || []).filter(Boolean).map((f) => Field.fromJSON(f, dictionaries));\n}\n/** @ignore */\nfunction fieldChildrenFromJSON(_field, dictionaries) {\n    return (_field['children'] || []).filter(Boolean).map((f) => Field.fromJSON(f, dictionaries));\n}\n/** @ignore */\nfunction fieldNodesFromJSON(xs) {\n    return (xs || []).reduce((fieldNodes, column) => [\n        ...fieldNodes,\n        new FieldNode(column['count'], nullCountFromJSON(column['VALIDITY'])),\n        ...fieldNodesFromJSON(column['children'])\n    ], []);\n}\n/** @ignore */\nfunction buffersFromJSON(xs, buffers = []) {\n    for (let i = -1, n = (xs || []).length; ++i < n;) {\n        const column = xs[i];\n        column['VALIDITY'] && buffers.push(new BufferRegion(buffers.length, column['VALIDITY'].length));\n        column['TYPE'] && buffers.push(new BufferRegion(buffers.length, column['TYPE'].length));\n        column['OFFSET'] && buffers.push(new BufferRegion(buffers.length, column['OFFSET'].length));\n        column['DATA'] && buffers.push(new BufferRegion(buffers.length, column['DATA'].length));\n        buffers = buffersFromJSON(column['children'], buffers);\n    }\n    return buffers;\n}\n/** @ignore */\nfunction nullCountFromJSON(validity) {\n    return (validity || []).reduce((sum, val) => sum + +(val === 0), 0);\n}\n/** @ignore */\nexport function fieldFromJSON(_field, dictionaries) {\n    let id;\n    let keys;\n    let field;\n    let dictMeta;\n    let type;\n    let dictType;\n    // If no dictionary encoding\n    if (!dictionaries || !(dictMeta = _field['dictionary'])) {\n        type = typeFromJSON(_field, fieldChildrenFromJSON(_field, dictionaries));\n        field = new Field(_field['name'], type, _field['nullable'], customMetadataFromJSON(_field['customMetadata']));\n    }\n    // tslint:disable\n    // If dictionary encoded and the first time we've seen this dictionary id, decode\n    // the data type and child fields, then wrap in a Dictionary type and insert the\n    // data type into the dictionary types map.\n    else if (!dictionaries.has(id = dictMeta['id'])) {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta['indexType']) ? indexTypeFromJSON(keys) : new Int32();\n        dictionaries.set(id, type = typeFromJSON(_field, fieldChildrenFromJSON(_field, dictionaries)));\n        dictType = new Dictionary(type, keys, id, dictMeta['isOrdered']);\n        field = new Field(_field['name'], dictType, _field['nullable'], customMetadataFromJSON(_field['customMetadata']));\n    }\n    // If dictionary encoded, and have already seen this dictionary Id in the schema, then reuse the\n    // data type and wrap in a new Dictionary type and field.\n    else {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta['indexType']) ? indexTypeFromJSON(keys) : new Int32();\n        dictType = new Dictionary(dictionaries.get(id), keys, id, dictMeta['isOrdered']);\n        field = new Field(_field['name'], dictType, _field['nullable'], customMetadataFromJSON(_field['customMetadata']));\n    }\n    return field || null;\n}\n/** @ignore */\nfunction customMetadataFromJSON(_metadata) {\n    return new Map(Object.entries(_metadata || {}));\n}\n/** @ignore */\nfunction indexTypeFromJSON(_type) {\n    return new Int(_type['isSigned'], _type['bitWidth']);\n}\n/** @ignore */\nfunction typeFromJSON(f, children) {\n    const typeId = f['type']['name'];\n    switch (typeId) {\n        case 'NONE': return new Null();\n        case 'null': return new Null();\n        case 'binary': return new Binary();\n        case 'utf8': return new Utf8();\n        case 'bool': return new Bool();\n        case 'list': return new List((children || [])[0]);\n        case 'struct': return new Struct(children || []);\n        case 'struct_': return new Struct(children || []);\n    }\n    switch (typeId) {\n        case 'int': {\n            const t = f['type'];\n            return new Int(t['isSigned'], t['bitWidth']);\n        }\n        case 'floatingpoint': {\n            const t = f['type'];\n            return new Float(Precision[t['precision']]);\n        }\n        case 'decimal': {\n            const t = f['type'];\n            return new Decimal(t['scale'], t['precision']);\n        }\n        case 'date': {\n            const t = f['type'];\n            return new Date_(DateUnit[t['unit']]);\n        }\n        case 'time': {\n            const t = f['type'];\n            return new Time(TimeUnit[t['unit']], t['bitWidth']);\n        }\n        case 'timestamp': {\n            const t = f['type'];\n            return new Timestamp(TimeUnit[t['unit']], t['timezone']);\n        }\n        case 'interval': {\n            const t = f['type'];\n            return new Interval(IntervalUnit[t['unit']]);\n        }\n        case 'union': {\n            const t = f['type'];\n            return new Union(UnionMode[t['mode']], (t['typeIds'] || []), children || []);\n        }\n        case 'fixedsizebinary': {\n            const t = f['type'];\n            return new FixedSizeBinary(t['byteWidth']);\n        }\n        case 'fixedsizelist': {\n            const t = f['type'];\n            return new FixedSizeList(t['listSize'], (children || [])[0]);\n        }\n        case 'map': {\n            const t = f['type'];\n            return new Map_((children || [])[0], t['keysSorted']);\n        }\n    }\n    throw new Error(`Unrecognized type: \"${typeId}\"`);\n}\n\n//# sourceMappingURL=json.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { flatbuffers } from 'flatbuffers';\nimport * as Schema_ from '../../fb/Schema';\nimport * as Message_ from '../../fb/Message';\nimport { Schema, Field } from '../../schema';\nimport { toUint8Array } from '../../util/buffer';\nimport { MessageHeader, MetadataVersion } from '../../enum';\nimport { instance as typeAssembler } from '../../visitor/typeassembler';\nimport { fieldFromJSON, schemaFromJSON, recordBatchFromJSON, dictionaryBatchFromJSON } from './json';\nvar Long = flatbuffers.Long;\nvar Builder = flatbuffers.Builder;\nvar ByteBuffer = flatbuffers.ByteBuffer;\nvar Type = Schema_.org.apache.arrow.flatbuf.Type;\nvar _Field = Schema_.org.apache.arrow.flatbuf.Field;\nvar _Schema = Schema_.org.apache.arrow.flatbuf.Schema;\nvar _Buffer = Schema_.org.apache.arrow.flatbuf.Buffer;\nvar _Message = Message_.org.apache.arrow.flatbuf.Message;\nvar _KeyValue = Schema_.org.apache.arrow.flatbuf.KeyValue;\nvar _FieldNode = Message_.org.apache.arrow.flatbuf.FieldNode;\nvar _Endianness = Schema_.org.apache.arrow.flatbuf.Endianness;\nvar _RecordBatch = Message_.org.apache.arrow.flatbuf.RecordBatch;\nvar _DictionaryBatch = Message_.org.apache.arrow.flatbuf.DictionaryBatch;\nimport { DataType, Dictionary, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct, Union, Bool, Null, Int, Float, Date_, Time, Interval, Timestamp, Int32, } from '../../type';\n/**\n * @ignore\n * @private\n **/\nexport class Message {\n    constructor(bodyLength, version, headerType, header) {\n        this._version = version;\n        this._headerType = headerType;\n        this.body = new Uint8Array(0);\n        header && (this._createHeader = () => header);\n        this._bodyLength = typeof bodyLength === 'number' ? bodyLength : bodyLength.low;\n    }\n    /** @nocollapse */\n    static fromJSON(msg, headerType) {\n        const message = new Message(0, MetadataVersion.V4, headerType);\n        message._createHeader = messageHeaderFromJSON(msg, headerType);\n        return message;\n    }\n    /** @nocollapse */\n    static decode(buf) {\n        buf = new ByteBuffer(toUint8Array(buf));\n        const _message = _Message.getRootAsMessage(buf);\n        const bodyLength = _message.bodyLength();\n        const version = _message.version();\n        const headerType = _message.headerType();\n        const message = new Message(bodyLength, version, headerType);\n        message._createHeader = decodeMessageHeader(_message, headerType);\n        return message;\n    }\n    /** @nocollapse */\n    static encode(message) {\n        let b = new Builder(), headerOffset = -1;\n        if (message.isSchema()) {\n            headerOffset = Schema.encode(b, message.header());\n        }\n        else if (message.isRecordBatch()) {\n            headerOffset = RecordBatch.encode(b, message.header());\n        }\n        else if (message.isDictionaryBatch()) {\n            headerOffset = DictionaryBatch.encode(b, message.header());\n        }\n        _Message.startMessage(b);\n        _Message.addVersion(b, MetadataVersion.V4);\n        _Message.addHeader(b, headerOffset);\n        _Message.addHeaderType(b, message.headerType);\n        _Message.addBodyLength(b, new Long(message.bodyLength, 0));\n        _Message.finishMessageBuffer(b, _Message.endMessage(b));\n        return b.asUint8Array();\n    }\n    /** @nocollapse */\n    static from(header, bodyLength = 0) {\n        if (header instanceof Schema) {\n            return new Message(0, MetadataVersion.V4, MessageHeader.Schema, header);\n        }\n        if (header instanceof RecordBatch) {\n            return new Message(bodyLength, MetadataVersion.V4, MessageHeader.RecordBatch, header);\n        }\n        if (header instanceof DictionaryBatch) {\n            return new Message(bodyLength, MetadataVersion.V4, MessageHeader.DictionaryBatch, header);\n        }\n        throw new Error(`Unrecognized Message header: ${header}`);\n    }\n    get type() { return this.headerType; }\n    get version() { return this._version; }\n    get headerType() { return this._headerType; }\n    get bodyLength() { return this._bodyLength; }\n    header() { return this._createHeader(); }\n    isSchema() { return this.headerType === MessageHeader.Schema; }\n    isRecordBatch() { return this.headerType === MessageHeader.RecordBatch; }\n    isDictionaryBatch() { return this.headerType === MessageHeader.DictionaryBatch; }\n}\n/**\n * @ignore\n * @private\n **/\nexport class RecordBatch {\n    get nodes() { return this._nodes; }\n    get length() { return this._length; }\n    get buffers() { return this._buffers; }\n    constructor(length, nodes, buffers) {\n        this._nodes = nodes;\n        this._buffers = buffers;\n        this._length = typeof length === 'number' ? length : length.low;\n    }\n}\n/**\n * @ignore\n * @private\n **/\nexport class DictionaryBatch {\n    get id() { return this._id; }\n    get data() { return this._data; }\n    get isDelta() { return this._isDelta; }\n    get length() { return this.data.length; }\n    get nodes() { return this.data.nodes; }\n    get buffers() { return this.data.buffers; }\n    constructor(data, id, isDelta = false) {\n        this._data = data;\n        this._isDelta = isDelta;\n        this._id = typeof id === 'number' ? id : id.low;\n    }\n}\n/**\n * @ignore\n * @private\n **/\nexport class BufferRegion {\n    constructor(offset, length) {\n        this.offset = typeof offset === 'number' ? offset : offset.low;\n        this.length = typeof length === 'number' ? length : length.low;\n    }\n}\n/**\n * @ignore\n * @private\n **/\nexport class FieldNode {\n    constructor(length, nullCount) {\n        this.length = typeof length === 'number' ? length : length.low;\n        this.nullCount = typeof nullCount === 'number' ? nullCount : nullCount.low;\n    }\n}\n/** @ignore */\nfunction messageHeaderFromJSON(message, type) {\n    return (() => {\n        switch (type) {\n            case MessageHeader.Schema: return Schema.fromJSON(message);\n            case MessageHeader.RecordBatch: return RecordBatch.fromJSON(message);\n            case MessageHeader.DictionaryBatch: return DictionaryBatch.fromJSON(message);\n        }\n        throw new Error(`Unrecognized Message type: { name: ${MessageHeader[type]}, type: ${type} }`);\n    });\n}\n/** @ignore */\nfunction decodeMessageHeader(message, type) {\n    return (() => {\n        switch (type) {\n            case MessageHeader.Schema: return Schema.decode(message.header(new _Schema()));\n            case MessageHeader.RecordBatch: return RecordBatch.decode(message.header(new _RecordBatch()), message.version());\n            case MessageHeader.DictionaryBatch: return DictionaryBatch.decode(message.header(new _DictionaryBatch()), message.version());\n        }\n        throw new Error(`Unrecognized Message type: { name: ${MessageHeader[type]}, type: ${type} }`);\n    });\n}\nField['encode'] = encodeField;\nField['decode'] = decodeField;\nField['fromJSON'] = fieldFromJSON;\nSchema['encode'] = encodeSchema;\nSchema['decode'] = decodeSchema;\nSchema['fromJSON'] = schemaFromJSON;\nRecordBatch['encode'] = encodeRecordBatch;\nRecordBatch['decode'] = decodeRecordBatch;\nRecordBatch['fromJSON'] = recordBatchFromJSON;\nDictionaryBatch['encode'] = encodeDictionaryBatch;\nDictionaryBatch['decode'] = decodeDictionaryBatch;\nDictionaryBatch['fromJSON'] = dictionaryBatchFromJSON;\nFieldNode['encode'] = encodeFieldNode;\nFieldNode['decode'] = decodeFieldNode;\nBufferRegion['encode'] = encodeBufferRegion;\nBufferRegion['decode'] = decodeBufferRegion;\n/** @ignore */\nfunction decodeSchema(_schema, dictionaries = new Map()) {\n    const fields = decodeSchemaFields(_schema, dictionaries);\n    return new Schema(fields, decodeCustomMetadata(_schema), dictionaries);\n}\n/** @ignore */\nfunction decodeRecordBatch(batch, version = MetadataVersion.V4) {\n    return new RecordBatch(batch.length(), decodeFieldNodes(batch), decodeBuffers(batch, version));\n}\n/** @ignore */\nfunction decodeDictionaryBatch(batch, version = MetadataVersion.V4) {\n    return new DictionaryBatch(RecordBatch.decode(batch.data(), version), batch.id(), batch.isDelta());\n}\n/** @ignore */\nfunction decodeBufferRegion(b) {\n    return new BufferRegion(b.offset(), b.length());\n}\n/** @ignore */\nfunction decodeFieldNode(f) {\n    return new FieldNode(f.length(), f.nullCount());\n}\n/** @ignore */\nfunction decodeFieldNodes(batch) {\n    const nodes = [];\n    for (let f, i = -1, j = -1, n = batch.nodesLength(); ++i < n;) {\n        if (f = batch.nodes(i)) {\n            nodes[++j] = FieldNode.decode(f);\n        }\n    }\n    return nodes;\n}\n/** @ignore */\nfunction decodeBuffers(batch, version) {\n    const bufferRegions = [];\n    for (let b, i = -1, j = -1, n = batch.buffersLength(); ++i < n;) {\n        if (b = batch.buffers(i)) {\n            // If this Arrow buffer was written before version 4,\n            // advance the buffer's bb_pos 8 bytes to skip past\n            // the now-removed page_id field\n            if (version < MetadataVersion.V4) {\n                b.bb_pos += (8 * (i + 1));\n            }\n            bufferRegions[++j] = BufferRegion.decode(b);\n        }\n    }\n    return bufferRegions;\n}\n/** @ignore */\nfunction decodeSchemaFields(schema, dictionaries) {\n    const fields = [];\n    for (let f, i = -1, j = -1, n = schema.fieldsLength(); ++i < n;) {\n        if (f = schema.fields(i)) {\n            fields[++j] = Field.decode(f, dictionaries);\n        }\n    }\n    return fields;\n}\n/** @ignore */\nfunction decodeFieldChildren(field, dictionaries) {\n    const children = [];\n    for (let f, i = -1, j = -1, n = field.childrenLength(); ++i < n;) {\n        if (f = field.children(i)) {\n            children[++j] = Field.decode(f, dictionaries);\n        }\n    }\n    return children;\n}\n/** @ignore */\nfunction decodeField(f, dictionaries) {\n    let id;\n    let field;\n    let type;\n    let keys;\n    let dictType;\n    let dictMeta;\n    // If no dictionary encoding\n    if (!dictionaries || !(dictMeta = f.dictionary())) {\n        type = decodeFieldType(f, decodeFieldChildren(f, dictionaries));\n        field = new Field(f.name(), type, f.nullable(), decodeCustomMetadata(f));\n    }\n    // tslint:disable\n    // If dictionary encoded and the first time we've seen this dictionary id, decode\n    // the data type and child fields, then wrap in a Dictionary type and insert the\n    // data type into the dictionary types map.\n    else if (!dictionaries.has(id = dictMeta.id().low)) {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta.indexType()) ? decodeIndexType(keys) : new Int32();\n        dictionaries.set(id, type = decodeFieldType(f, decodeFieldChildren(f, dictionaries)));\n        dictType = new Dictionary(type, keys, id, dictMeta.isOrdered());\n        field = new Field(f.name(), dictType, f.nullable(), decodeCustomMetadata(f));\n    }\n    // If dictionary encoded, and have already seen this dictionary Id in the schema, then reuse the\n    // data type and wrap in a new Dictionary type and field.\n    else {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta.indexType()) ? decodeIndexType(keys) : new Int32();\n        dictType = new Dictionary(dictionaries.get(id), keys, id, dictMeta.isOrdered());\n        field = new Field(f.name(), dictType, f.nullable(), decodeCustomMetadata(f));\n    }\n    return field || null;\n}\n/** @ignore */\nfunction decodeCustomMetadata(parent) {\n    const data = new Map();\n    if (parent) {\n        for (let entry, key, i = -1, n = parent.customMetadataLength() | 0; ++i < n;) {\n            if ((entry = parent.customMetadata(i)) && (key = entry.key()) != null) {\n                data.set(key, entry.value());\n            }\n        }\n    }\n    return data;\n}\n/** @ignore */\nfunction decodeIndexType(_type) {\n    return new Int(_type.isSigned(), _type.bitWidth());\n}\n/** @ignore */\nfunction decodeFieldType(f, children) {\n    const typeId = f.typeType();\n    switch (typeId) {\n        case Type.NONE: return new Null();\n        case Type.Null: return new Null();\n        case Type.Binary: return new Binary();\n        case Type.Utf8: return new Utf8();\n        case Type.Bool: return new Bool();\n        case Type.List: return new List((children || [])[0]);\n        case Type.Struct_: return new Struct(children || []);\n    }\n    switch (typeId) {\n        case Type.Int: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Int());\n            return new Int(t.isSigned(), t.bitWidth());\n        }\n        case Type.FloatingPoint: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.FloatingPoint());\n            return new Float(t.precision());\n        }\n        case Type.Decimal: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Decimal());\n            return new Decimal(t.scale(), t.precision());\n        }\n        case Type.Date: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Date());\n            return new Date_(t.unit());\n        }\n        case Type.Time: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Time());\n            return new Time(t.unit(), t.bitWidth());\n        }\n        case Type.Timestamp: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Timestamp());\n            return new Timestamp(t.unit(), t.timezone());\n        }\n        case Type.Interval: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Interval());\n            return new Interval(t.unit());\n        }\n        case Type.Union: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Union());\n            return new Union(t.mode(), t.typeIdsArray() || [], children || []);\n        }\n        case Type.FixedSizeBinary: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.FixedSizeBinary());\n            return new FixedSizeBinary(t.byteWidth());\n        }\n        case Type.FixedSizeList: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.FixedSizeList());\n            return new FixedSizeList(t.listSize(), (children || [])[0]);\n        }\n        case Type.Map: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Map());\n            return new Map_((children || [])[0], t.keysSorted());\n        }\n    }\n    throw new Error(`Unrecognized type: \"${Type[typeId]}\" (${typeId})`);\n}\n/** @ignore */\nfunction encodeSchema(b, schema) {\n    const fieldOffsets = schema.fields.map((f) => Field.encode(b, f));\n    _Schema.startFieldsVector(b, fieldOffsets.length);\n    const fieldsVectorOffset = _Schema.createFieldsVector(b, fieldOffsets);\n    const metadataOffset = !(schema.metadata && schema.metadata.size > 0) ? -1 :\n        _Schema.createCustomMetadataVector(b, [...schema.metadata].map(([k, v]) => {\n            const key = b.createString(`${k}`);\n            const val = b.createString(`${v}`);\n            _KeyValue.startKeyValue(b);\n            _KeyValue.addKey(b, key);\n            _KeyValue.addValue(b, val);\n            return _KeyValue.endKeyValue(b);\n        }));\n    _Schema.startSchema(b);\n    _Schema.addFields(b, fieldsVectorOffset);\n    _Schema.addEndianness(b, platformIsLittleEndian ? _Endianness.Little : _Endianness.Big);\n    if (metadataOffset !== -1) {\n        _Schema.addCustomMetadata(b, metadataOffset);\n    }\n    return _Schema.endSchema(b);\n}\n/** @ignore */\nfunction encodeField(b, field) {\n    let nameOffset = -1;\n    let typeOffset = -1;\n    let dictionaryOffset = -1;\n    let type = field.type;\n    let typeId = field.typeId;\n    if (!DataType.isDictionary(type)) {\n        typeOffset = typeAssembler.visit(type, b);\n    }\n    else {\n        typeId = type.dictionary.typeId;\n        dictionaryOffset = typeAssembler.visit(type, b);\n        typeOffset = typeAssembler.visit(type.dictionary, b);\n    }\n    const childOffsets = (type.children || []).map((f) => Field.encode(b, f));\n    const childrenVectorOffset = _Field.createChildrenVector(b, childOffsets);\n    const metadataOffset = !(field.metadata && field.metadata.size > 0) ? -1 :\n        _Field.createCustomMetadataVector(b, [...field.metadata].map(([k, v]) => {\n            const key = b.createString(`${k}`);\n            const val = b.createString(`${v}`);\n            _KeyValue.startKeyValue(b);\n            _KeyValue.addKey(b, key);\n            _KeyValue.addValue(b, val);\n            return _KeyValue.endKeyValue(b);\n        }));\n    if (field.name) {\n        nameOffset = b.createString(field.name);\n    }\n    _Field.startField(b);\n    _Field.addType(b, typeOffset);\n    _Field.addTypeType(b, typeId);\n    _Field.addChildren(b, childrenVectorOffset);\n    _Field.addNullable(b, !!field.nullable);\n    if (nameOffset !== -1) {\n        _Field.addName(b, nameOffset);\n    }\n    if (dictionaryOffset !== -1) {\n        _Field.addDictionary(b, dictionaryOffset);\n    }\n    if (metadataOffset !== -1) {\n        _Field.addCustomMetadata(b, metadataOffset);\n    }\n    return _Field.endField(b);\n}\n/** @ignore */\nfunction encodeRecordBatch(b, recordBatch) {\n    const nodes = recordBatch.nodes || [];\n    const buffers = recordBatch.buffers || [];\n    _RecordBatch.startNodesVector(b, nodes.length);\n    nodes.slice().reverse().forEach((n) => FieldNode.encode(b, n));\n    const nodesVectorOffset = b.endVector();\n    _RecordBatch.startBuffersVector(b, buffers.length);\n    buffers.slice().reverse().forEach((b_) => BufferRegion.encode(b, b_));\n    const buffersVectorOffset = b.endVector();\n    _RecordBatch.startRecordBatch(b);\n    _RecordBatch.addLength(b, new Long(recordBatch.length, 0));\n    _RecordBatch.addNodes(b, nodesVectorOffset);\n    _RecordBatch.addBuffers(b, buffersVectorOffset);\n    return _RecordBatch.endRecordBatch(b);\n}\n/** @ignore */\nfunction encodeDictionaryBatch(b, dictionaryBatch) {\n    const dataOffset = RecordBatch.encode(b, dictionaryBatch.data);\n    _DictionaryBatch.startDictionaryBatch(b);\n    _DictionaryBatch.addId(b, new Long(dictionaryBatch.id, 0));\n    _DictionaryBatch.addIsDelta(b, dictionaryBatch.isDelta);\n    _DictionaryBatch.addData(b, dataOffset);\n    return _DictionaryBatch.endDictionaryBatch(b);\n}\n/** @ignore */\nfunction encodeFieldNode(b, node) {\n    return _FieldNode.createFieldNode(b, new Long(node.length, 0), new Long(node.nullCount, 0));\n}\n/** @ignore */\nfunction encodeBufferRegion(b, node) {\n    return _Buffer.createBuffer(b, new Long(node.offset, 0), new Long(node.length, 0));\n}\n/** @ignore */\nconst platformIsLittleEndian = (function () {\n    const buffer = new ArrayBuffer(2);\n    new DataView(buffer).setInt16(0, 256, true /* littleEndian */);\n    // Int16Array uses the platform's endianness.\n    return new Int16Array(buffer)[0] === 256;\n})();\n\n//# sourceMappingURL=message.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { MessageHeader } from '../enum';\nimport { flatbuffers } from 'flatbuffers';\nvar ByteBuffer = flatbuffers.ByteBuffer;\nimport { Message } from './metadata/message';\nimport { isFileHandle } from '../util/compat';\nimport { AsyncRandomAccessFile } from '../io/file';\nimport { toUint8Array } from '../util/buffer';\nimport { ByteStream, AsyncByteStream } from '../io/stream';\nimport { ArrowJSON, ITERATOR_DONE } from '../io/interfaces';\n/** @ignore */ const invalidMessageType = (type) => `Expected ${MessageHeader[type]} Message in stream, but was null or length 0.`;\n/** @ignore */ const nullMessage = (type) => `Header pointer of flatbuffer-encoded ${MessageHeader[type]} Message is null or length 0.`;\n/** @ignore */ const invalidMessageMetadata = (expected, actual) => `Expected to read ${expected} metadata bytes, but only read ${actual}.`;\n/** @ignore */ const invalidMessageBodyLength = (expected, actual) => `Expected to read ${expected} bytes for message body, but only read ${actual}.`;\n/** @ignore */\nexport class MessageReader {\n    constructor(source) {\n        this.source = source instanceof ByteStream ? source : new ByteStream(source);\n    }\n    [Symbol.iterator]() { return this; }\n    next() {\n        let r;\n        if ((r = this.readMetadataLength()).done) {\n            return ITERATOR_DONE;\n        }\n        // ARROW-6313: If the first 4 bytes are continuation indicator (-1), read\n        // the next 4 for the 32-bit metadata length. Otherwise, assume this is a\n        // pre-v0.15 message, where the first 4 bytes are the metadata length.\n        if ((r.value === -1) &&\n            (r = this.readMetadataLength()).done) {\n            return ITERATOR_DONE;\n        }\n        if ((r = this.readMetadata(r.value)).done) {\n            return ITERATOR_DONE;\n        }\n        return r;\n    }\n    throw(value) { return this.source.throw(value); }\n    return(value) { return this.source.return(value); }\n    readMessage(type) {\n        let r;\n        if ((r = this.next()).done) {\n            return null;\n        }\n        if ((type != null) && r.value.headerType !== type) {\n            throw new Error(invalidMessageType(type));\n        }\n        return r.value;\n    }\n    readMessageBody(bodyLength) {\n        if (bodyLength <= 0) {\n            return new Uint8Array(0);\n        }\n        const buf = toUint8Array(this.source.read(bodyLength));\n        if (buf.byteLength < bodyLength) {\n            throw new Error(invalidMessageBodyLength(bodyLength, buf.byteLength));\n        }\n        // 1. Work around bugs in fs.ReadStream's internal Buffer pooling, see: https://github.com/nodejs/node/issues/24817\n        // 2. Work around https://github.com/whatwg/streams/blob/0ebe4b042e467d9876d80ae045de3843092ad797/reference-implementation/lib/helpers.js#L126\n        return /* 1. */ (buf.byteOffset % 8 === 0) &&\n            /* 2. */ (buf.byteOffset + buf.byteLength) <= buf.buffer.byteLength ? buf : buf.slice();\n    }\n    readSchema(throwIfNull = false) {\n        const type = MessageHeader.Schema;\n        const message = this.readMessage(type);\n        const schema = message && message.header();\n        if (throwIfNull && !schema) {\n            throw new Error(nullMessage(type));\n        }\n        return schema;\n    }\n    readMetadataLength() {\n        const buf = this.source.read(PADDING);\n        const bb = buf && new ByteBuffer(buf);\n        const len = bb && bb.readInt32(0) || 0;\n        return { done: len === 0, value: len };\n    }\n    readMetadata(metadataLength) {\n        const buf = this.source.read(metadataLength);\n        if (!buf) {\n            return ITERATOR_DONE;\n        }\n        if (buf.byteLength < metadataLength) {\n            throw new Error(invalidMessageMetadata(metadataLength, buf.byteLength));\n        }\n        return { done: false, value: Message.decode(buf) };\n    }\n}\n/** @ignore */\nexport class AsyncMessageReader {\n    constructor(source, byteLength) {\n        this.source = source instanceof AsyncByteStream ? source\n            : isFileHandle(source)\n                ? new AsyncRandomAccessFile(source, byteLength)\n                : new AsyncByteStream(source);\n    }\n    [Symbol.asyncIterator]() { return this; }\n    async next() {\n        let r;\n        if ((r = await this.readMetadataLength()).done) {\n            return ITERATOR_DONE;\n        }\n        // ARROW-6313: If the first 4 bytes are continuation indicator (-1), read\n        // the next 4 for the 32-bit metadata length. Otherwise, assume this is a\n        // pre-v0.15 message, where the first 4 bytes are the metadata length.\n        if ((r.value === -1) &&\n            (r = await this.readMetadataLength()).done) {\n            return ITERATOR_DONE;\n        }\n        if ((r = await this.readMetadata(r.value)).done) {\n            return ITERATOR_DONE;\n        }\n        return r;\n    }\n    async throw(value) { return await this.source.throw(value); }\n    async return(value) { return await this.source.return(value); }\n    async readMessage(type) {\n        let r;\n        if ((r = await this.next()).done) {\n            return null;\n        }\n        if ((type != null) && r.value.headerType !== type) {\n            throw new Error(invalidMessageType(type));\n        }\n        return r.value;\n    }\n    async readMessageBody(bodyLength) {\n        if (bodyLength <= 0) {\n            return new Uint8Array(0);\n        }\n        const buf = toUint8Array(await this.source.read(bodyLength));\n        if (buf.byteLength < bodyLength) {\n            throw new Error(invalidMessageBodyLength(bodyLength, buf.byteLength));\n        }\n        // 1. Work around bugs in fs.ReadStream's internal Buffer pooling, see: https://github.com/nodejs/node/issues/24817\n        // 2. Work around https://github.com/whatwg/streams/blob/0ebe4b042e467d9876d80ae045de3843092ad797/reference-implementation/lib/helpers.js#L126\n        return /* 1. */ (buf.byteOffset % 8 === 0) &&\n            /* 2. */ (buf.byteOffset + buf.byteLength) <= buf.buffer.byteLength ? buf : buf.slice();\n    }\n    async readSchema(throwIfNull = false) {\n        const type = MessageHeader.Schema;\n        const message = await this.readMessage(type);\n        const schema = message && message.header();\n        if (throwIfNull && !schema) {\n            throw new Error(nullMessage(type));\n        }\n        return schema;\n    }\n    async readMetadataLength() {\n        const buf = await this.source.read(PADDING);\n        const bb = buf && new ByteBuffer(buf);\n        const len = bb && bb.readInt32(0) || 0;\n        return { done: len === 0, value: len };\n    }\n    async readMetadata(metadataLength) {\n        const buf = await this.source.read(metadataLength);\n        if (!buf) {\n            return ITERATOR_DONE;\n        }\n        if (buf.byteLength < metadataLength) {\n            throw new Error(invalidMessageMetadata(metadataLength, buf.byteLength));\n        }\n        return { done: false, value: Message.decode(buf) };\n    }\n}\n/** @ignore */\nexport class JSONMessageReader extends MessageReader {\n    constructor(source) {\n        super(new Uint8Array(0));\n        this._schema = false;\n        this._body = [];\n        this._batchIndex = 0;\n        this._dictionaryIndex = 0;\n        this._json = source instanceof ArrowJSON ? source : new ArrowJSON(source);\n    }\n    next() {\n        const { _json } = this;\n        if (!this._schema) {\n            this._schema = true;\n            const message = Message.fromJSON(_json.schema, MessageHeader.Schema);\n            return { done: false, value: message };\n        }\n        if (this._dictionaryIndex < _json.dictionaries.length) {\n            const batch = _json.dictionaries[this._dictionaryIndex++];\n            this._body = batch['data']['columns'];\n            const message = Message.fromJSON(batch, MessageHeader.DictionaryBatch);\n            return { done: false, value: message };\n        }\n        if (this._batchIndex < _json.batches.length) {\n            const batch = _json.batches[this._batchIndex++];\n            this._body = batch['columns'];\n            const message = Message.fromJSON(batch, MessageHeader.RecordBatch);\n            return { done: false, value: message };\n        }\n        this._body = [];\n        return ITERATOR_DONE;\n    }\n    readMessageBody(_bodyLength) {\n        return flattenDataSources(this._body);\n        function flattenDataSources(xs) {\n            return (xs || []).reduce((buffers, column) => [\n                ...buffers,\n                ...(column['VALIDITY'] && [column['VALIDITY']] || []),\n                ...(column['TYPE'] && [column['TYPE']] || []),\n                ...(column['OFFSET'] && [column['OFFSET']] || []),\n                ...(column['DATA'] && [column['DATA']] || []),\n                ...flattenDataSources(column['children'])\n            ], []);\n        }\n    }\n    readMessage(type) {\n        let r;\n        if ((r = this.next()).done) {\n            return null;\n        }\n        if ((type != null) && r.value.headerType !== type) {\n            throw new Error(invalidMessageType(type));\n        }\n        return r.value;\n    }\n    readSchema() {\n        const type = MessageHeader.Schema;\n        const message = this.readMessage(type);\n        const schema = message && message.header();\n        if (!message || !schema) {\n            throw new Error(nullMessage(type));\n        }\n        return schema;\n    }\n}\n/** @ignore */\nexport const PADDING = 4;\n/** @ignore */\nexport const MAGIC_STR = 'ARROW1';\n/** @ignore */\nexport const MAGIC = new Uint8Array(MAGIC_STR.length);\nfor (let i = 0; i < MAGIC_STR.length; i += 1 | 0) {\n    MAGIC[i] = MAGIC_STR.charCodeAt(i);\n}\n/** @ignore */\nexport function checkForMagicArrowString(buffer, index = 0) {\n    for (let i = -1, n = MAGIC.length; ++i < n;) {\n        if (MAGIC[i] !== buffer[index + i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/** @ignore */\nexport const magicLength = MAGIC.length;\n/** @ignore */\nexport const magicAndPadding = magicLength + PADDING;\n/** @ignore */\nexport const magicX2AndPadding = magicLength * 2 + PADDING;\n\n//# sourceMappingURL=message.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Visitor } from '../visitor';\nimport { UnionMode } from '../enum';\nimport { RecordBatch } from '../recordbatch';\nimport { rebaseValueOffsets } from '../util/buffer';\nimport { packBools, truncateBitmap } from '../util/bit';\nimport { selectVectorChildrenArgs } from '../util/args';\nimport { BufferRegion, FieldNode } from '../ipc/metadata/message';\nimport { DataType, } from '../type';\n/** @ignore */\nexport class VectorAssembler extends Visitor {\n    constructor() {\n        super();\n        this._byteLength = 0;\n        this._nodes = [];\n        this._buffers = [];\n        this._bufferRegions = [];\n    }\n    /** @nocollapse */\n    static assemble(...args) {\n        const assembler = new VectorAssembler();\n        const vectorChildren = selectVectorChildrenArgs(RecordBatch, args);\n        const [assembleResult = assembler] = assembler.visitMany(vectorChildren);\n        return assembleResult;\n    }\n    visit(vector) {\n        if (!DataType.isDictionary(vector.type)) {\n            const { data, length, nullCount } = vector;\n            if (length > 2147483647) {\n                /* istanbul ignore next */\n                throw new RangeError('Cannot write arrays larger than 2^31 - 1 in length');\n            }\n            if (!DataType.isNull(vector.type)) {\n                addBuffer.call(this, nullCount <= 0\n                    ? new Uint8Array(0) // placeholder validity buffer\n                    : truncateBitmap(data.offset, length, data.nullBitmap));\n            }\n            this.nodes.push(new FieldNode(length, nullCount));\n        }\n        return super.visit(vector);\n    }\n    visitNull(_nullV) {\n        return this;\n    }\n    visitDictionary(vector) {\n        // Assemble the indices here, Dictionary assembled separately.\n        return this.visit(vector.indices);\n    }\n    get nodes() { return this._nodes; }\n    get buffers() { return this._buffers; }\n    get byteLength() { return this._byteLength; }\n    get bufferRegions() { return this._bufferRegions; }\n}\n/** @ignore */\nfunction addBuffer(values) {\n    const byteLength = (values.byteLength + 7) & ~7; // Round up to a multiple of 8\n    this.buffers.push(values);\n    this.bufferRegions.push(new BufferRegion(this._byteLength, byteLength));\n    this._byteLength += byteLength;\n    return this;\n}\n/** @ignore */\nfunction assembleUnion(vector) {\n    const { type, length, typeIds, valueOffsets } = vector;\n    // All Union Vectors have a typeIds buffer\n    addBuffer.call(this, typeIds);\n    // If this is a Sparse Union, treat it like all other Nested types\n    if (type.mode === UnionMode.Sparse) {\n        return assembleNestedVector.call(this, vector);\n    }\n    else if (type.mode === UnionMode.Dense) {\n        // If this is a Dense Union, add the valueOffsets buffer and potentially slice the children\n        if (vector.offset <= 0) {\n            // If the Vector hasn't been sliced, write the existing valueOffsets\n            addBuffer.call(this, valueOffsets);\n            // We can treat this like all other Nested types\n            return assembleNestedVector.call(this, vector);\n        }\n        else {\n            // A sliced Dense Union is an unpleasant case. Because the offsets are different for\n            // each child vector, we need to \"rebase\" the valueOffsets for each child\n            // Union typeIds are not necessary 0-indexed\n            const maxChildTypeId = typeIds.reduce((x, y) => Math.max(x, y), typeIds[0]);\n            const childLengths = new Int32Array(maxChildTypeId + 1);\n            // Set all to -1 to indicate that we haven't observed a first occurrence of a particular child yet\n            const childOffsets = new Int32Array(maxChildTypeId + 1).fill(-1);\n            const shiftedOffsets = new Int32Array(length);\n            // If we have a non-zero offset, then the value offsets do not start at\n            // zero. We must a) create a new offsets array with shifted offsets and\n            // b) slice the values array accordingly\n            const unshiftedOffsets = rebaseValueOffsets(-valueOffsets[0], length, valueOffsets);\n            for (let typeId, shift, index = -1; ++index < length;) {\n                if ((shift = childOffsets[typeId = typeIds[index]]) === -1) {\n                    shift = childOffsets[typeId] = unshiftedOffsets[typeId];\n                }\n                shiftedOffsets[index] = unshiftedOffsets[index] - shift;\n                ++childLengths[typeId];\n            }\n            addBuffer.call(this, shiftedOffsets);\n            // Slice and visit children accordingly\n            for (let child, childIndex = -1, numChildren = type.children.length; ++childIndex < numChildren;) {\n                if (child = vector.getChildAt(childIndex)) {\n                    const typeId = type.typeIds[childIndex];\n                    const childLength = Math.min(length, childLengths[typeId]);\n                    this.visit(child.slice(childOffsets[typeId], childLength));\n                }\n            }\n        }\n    }\n    return this;\n}\n/** @ignore */\nfunction assembleBoolVector(vector) {\n    // Bool vector is a special case of FlatVector, as its data buffer needs to stay packed\n    let values;\n    if (vector.nullCount >= vector.length) {\n        // If all values are null, just insert a placeholder empty data buffer (fastest path)\n        return addBuffer.call(this, new Uint8Array(0));\n    }\n    else if ((values = vector.values) instanceof Uint8Array) {\n        // If values is already a Uint8Array, slice the bitmap (fast path)\n        return addBuffer.call(this, truncateBitmap(vector.offset, vector.length, values));\n    }\n    // Otherwise if the underlying data *isn't* a Uint8Array, enumerate the\n    // values as bools and re-pack them into a Uint8Array. This code isn't\n    // reachable unless you're trying to manipulate the Data internals,\n    // we we're only doing this for safety.\n    /* istanbul ignore next */\n    return addBuffer.call(this, packBools(vector));\n}\n/** @ignore */\nfunction assembleFlatVector(vector) {\n    return addBuffer.call(this, vector.values.subarray(0, vector.length * vector.stride));\n}\n/** @ignore */\nfunction assembleFlatListVector(vector) {\n    const { length, values, valueOffsets } = vector;\n    const firstOffset = valueOffsets[0];\n    const lastOffset = valueOffsets[length];\n    const byteLength = Math.min(lastOffset - firstOffset, values.byteLength - firstOffset);\n    // Push in the order FlatList types read their buffers\n    addBuffer.call(this, rebaseValueOffsets(-valueOffsets[0], length, valueOffsets)); // valueOffsets buffer first\n    addBuffer.call(this, values.subarray(firstOffset, firstOffset + byteLength)); // sliced values buffer second\n    return this;\n}\n/** @ignore */\nfunction assembleListVector(vector) {\n    const { length, valueOffsets } = vector;\n    // If we have valueOffsets (MapVector, ListVector), push that buffer first\n    if (valueOffsets) {\n        addBuffer.call(this, rebaseValueOffsets(valueOffsets[0], length, valueOffsets));\n    }\n    // Then insert the List's values child\n    return this.visit(vector.getChildAt(0));\n}\n/** @ignore */\nfunction assembleNestedVector(vector) {\n    return this.visitMany(vector.type.children.map((_, i) => vector.getChildAt(i)).filter(Boolean))[0];\n}\nVectorAssembler.prototype.visitBool = assembleBoolVector;\nVectorAssembler.prototype.visitInt = assembleFlatVector;\nVectorAssembler.prototype.visitFloat = assembleFlatVector;\nVectorAssembler.prototype.visitUtf8 = assembleFlatListVector;\nVectorAssembler.prototype.visitBinary = assembleFlatListVector;\nVectorAssembler.prototype.visitFixedSizeBinary = assembleFlatVector;\nVectorAssembler.prototype.visitDate = assembleFlatVector;\nVectorAssembler.prototype.visitTimestamp = assembleFlatVector;\nVectorAssembler.prototype.visitTime = assembleFlatVector;\nVectorAssembler.prototype.visitDecimal = assembleFlatVector;\nVectorAssembler.prototype.visitList = assembleListVector;\nVectorAssembler.prototype.visitStruct = assembleNestedVector;\nVectorAssembler.prototype.visitUnion = assembleUnion;\nVectorAssembler.prototype.visitInterval = assembleFlatVector;\nVectorAssembler.prototype.visitFixedSizeList = assembleListVector;\nVectorAssembler.prototype.visitMap = assembleListVector;\n\n//# sourceMappingURL=vectorassembler.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Table } from '../table';\nimport { MAGIC } from './message';\nimport { Column } from '../column';\nimport { DataType } from '../type';\nimport { Field } from '../schema';\nimport { Message } from './metadata/message';\nimport * as metadata from './metadata/message';\nimport { FileBlock, Footer } from './metadata/file';\nimport { MessageHeader, MetadataVersion } from '../enum';\nimport { AsyncByteQueue } from '../io/stream';\nimport { VectorAssembler } from '../visitor/vectorassembler';\nimport { JSONTypeAssembler } from '../visitor/jsontypeassembler';\nimport { JSONVectorAssembler } from '../visitor/jsonvectorassembler';\nimport { toUint8Array } from '../util/buffer';\nimport { RecordBatch, _InternalEmptyPlaceholderRecordBatch } from '../recordbatch';\nimport { ReadableInterop } from '../io/interfaces';\nimport { isPromise, isAsyncIterable, isWritableDOMStream, isWritableNodeStream, isIterable, isObject } from '../util/compat';\nexport class RecordBatchWriter extends ReadableInterop {\n    constructor(options) {\n        super();\n        this._position = 0;\n        this._started = false;\n        // @ts-ignore\n        this._sink = new AsyncByteQueue();\n        this._schema = null;\n        this._dictionaryBlocks = [];\n        this._recordBatchBlocks = [];\n        this._dictionaryDeltaOffsets = new Map();\n        isObject(options) || (options = { autoDestroy: true, writeLegacyIpcFormat: false });\n        this._autoDestroy = (typeof options.autoDestroy === 'boolean') ? options.autoDestroy : true;\n        this._writeLegacyIpcFormat = (typeof options.writeLegacyIpcFormat === 'boolean') ? options.writeLegacyIpcFormat : false;\n    }\n    /** @nocollapse */\n    // @ts-ignore\n    static throughNode(options) {\n        throw new Error(`\"throughNode\" not available in this environment`);\n    }\n    /** @nocollapse */\n    static throughDOM(\n    // @ts-ignore\n    writableStrategy, \n    // @ts-ignore\n    readableStrategy) {\n        throw new Error(`\"throughDOM\" not available in this environment`);\n    }\n    toString(sync = false) {\n        return this._sink.toString(sync);\n    }\n    toUint8Array(sync = false) {\n        return this._sink.toUint8Array(sync);\n    }\n    writeAll(input) {\n        if (isPromise(input)) {\n            return input.then((x) => this.writeAll(x));\n        }\n        else if (isAsyncIterable(input)) {\n            return writeAllAsync(this, input);\n        }\n        return writeAll(this, input);\n    }\n    get closed() { return this._sink.closed; }\n    [Symbol.asyncIterator]() { return this._sink[Symbol.asyncIterator](); }\n    toDOMStream(options) { return this._sink.toDOMStream(options); }\n    toNodeStream(options) { return this._sink.toNodeStream(options); }\n    close() {\n        return this.reset()._sink.close();\n    }\n    abort(reason) {\n        return this.reset()._sink.abort(reason);\n    }\n    finish() {\n        this._autoDestroy ? this.close() : this.reset(this._sink, this._schema);\n        return this;\n    }\n    reset(sink = this._sink, schema = null) {\n        if ((sink === this._sink) || (sink instanceof AsyncByteQueue)) {\n            this._sink = sink;\n        }\n        else {\n            this._sink = new AsyncByteQueue();\n            if (sink && isWritableDOMStream(sink)) {\n                this.toDOMStream({ type: 'bytes' }).pipeTo(sink);\n            }\n            else if (sink && isWritableNodeStream(sink)) {\n                this.toNodeStream({ objectMode: false }).pipe(sink);\n            }\n        }\n        if (this._started && this._schema) {\n            this._writeFooter(this._schema);\n        }\n        this._started = false;\n        this._dictionaryBlocks = [];\n        this._recordBatchBlocks = [];\n        this._dictionaryDeltaOffsets = new Map();\n        if (!schema || !(schema.compareTo(this._schema))) {\n            if (schema === null) {\n                this._position = 0;\n                this._schema = null;\n            }\n            else {\n                this._started = true;\n                this._schema = schema;\n                this._writeSchema(schema);\n            }\n        }\n        return this;\n    }\n    write(payload) {\n        let schema = null;\n        if (!this._sink) {\n            throw new Error(`RecordBatchWriter is closed`);\n        }\n        else if (payload === null || payload === undefined) {\n            return this.finish() && undefined;\n        }\n        else if (payload instanceof Table && !(schema = payload.schema)) {\n            return this.finish() && undefined;\n        }\n        else if (payload instanceof RecordBatch && !(schema = payload.schema)) {\n            return this.finish() && undefined;\n        }\n        if (schema && !schema.compareTo(this._schema)) {\n            if (this._started && this._autoDestroy) {\n                return this.close();\n            }\n            this.reset(this._sink, schema);\n        }\n        if (payload instanceof RecordBatch) {\n            if (!(payload instanceof _InternalEmptyPlaceholderRecordBatch)) {\n                this._writeRecordBatch(payload);\n            }\n        }\n        else if (payload instanceof Table) {\n            this.writeAll(payload.chunks);\n        }\n        else if (isIterable(payload)) {\n            this.writeAll(payload);\n        }\n    }\n    _writeMessage(message, alignment = 8) {\n        const a = alignment - 1;\n        const buffer = Message.encode(message);\n        const flatbufferSize = buffer.byteLength;\n        const prefixSize = !this._writeLegacyIpcFormat ? 8 : 4;\n        const alignedSize = (flatbufferSize + prefixSize + a) & ~a;\n        const nPaddingBytes = alignedSize - flatbufferSize - prefixSize;\n        if (message.headerType === MessageHeader.RecordBatch) {\n            this._recordBatchBlocks.push(new FileBlock(alignedSize, message.bodyLength, this._position));\n        }\n        else if (message.headerType === MessageHeader.DictionaryBatch) {\n            this._dictionaryBlocks.push(new FileBlock(alignedSize, message.bodyLength, this._position));\n        }\n        // If not in legacy pre-0.15.0 mode, write the stream continuation indicator\n        if (!this._writeLegacyIpcFormat) {\n            this._write(Int32Array.of(-1));\n        }\n        // Write the flatbuffer size prefix including padding\n        this._write(Int32Array.of(alignedSize - prefixSize));\n        // Write the flatbuffer\n        if (flatbufferSize > 0) {\n            this._write(buffer);\n        }\n        // Write any padding\n        return this._writePadding(nPaddingBytes);\n    }\n    _write(chunk) {\n        if (this._started) {\n            const buffer = toUint8Array(chunk);\n            if (buffer && buffer.byteLength > 0) {\n                this._sink.write(buffer);\n                this._position += buffer.byteLength;\n            }\n        }\n        return this;\n    }\n    _writeSchema(schema) {\n        return this._writeMessage(Message.from(schema));\n    }\n    // @ts-ignore\n    _writeFooter(schema) {\n        // eos bytes\n        return this._writeLegacyIpcFormat\n            ? this._write(Int32Array.of(0))\n            : this._write(Int32Array.of(-1, 0));\n    }\n    _writeMagic() {\n        return this._write(MAGIC);\n    }\n    _writePadding(nBytes) {\n        return nBytes > 0 ? this._write(new Uint8Array(nBytes)) : this;\n    }\n    _writeRecordBatch(batch) {\n        const { byteLength, nodes, bufferRegions, buffers } = VectorAssembler.assemble(batch);\n        const recordBatch = new metadata.RecordBatch(batch.length, nodes, bufferRegions);\n        const message = Message.from(recordBatch, byteLength);\n        return this\n            ._writeDictionaries(batch)\n            ._writeMessage(message)\n            ._writeBodyBuffers(buffers);\n    }\n    _writeDictionaryBatch(dictionary, id, isDelta = false) {\n        this._dictionaryDeltaOffsets.set(id, dictionary.length + (this._dictionaryDeltaOffsets.get(id) || 0));\n        const { byteLength, nodes, bufferRegions, buffers } = VectorAssembler.assemble(dictionary);\n        const recordBatch = new metadata.RecordBatch(dictionary.length, nodes, bufferRegions);\n        const dictionaryBatch = new metadata.DictionaryBatch(recordBatch, id, isDelta);\n        const message = Message.from(dictionaryBatch, byteLength);\n        return this\n            ._writeMessage(message)\n            ._writeBodyBuffers(buffers);\n    }\n    _writeBodyBuffers(buffers) {\n        let buffer;\n        let size, padding;\n        for (let i = -1, n = buffers.length; ++i < n;) {\n            if ((buffer = buffers[i]) && (size = buffer.byteLength) > 0) {\n                this._write(buffer);\n                if ((padding = ((size + 7) & ~7) - size) > 0) {\n                    this._writePadding(padding);\n                }\n            }\n        }\n        return this;\n    }\n    _writeDictionaries(batch) {\n        for (let [id, dictionary] of batch.dictionaries) {\n            let offset = this._dictionaryDeltaOffsets.get(id) || 0;\n            if (offset === 0 || (dictionary = dictionary.slice(offset)).length > 0) {\n                const chunks = 'chunks' in dictionary ? dictionary.chunks : [dictionary];\n                for (const chunk of chunks) {\n                    this._writeDictionaryBatch(chunk, id, offset > 0);\n                    offset += chunk.length;\n                }\n            }\n        }\n        return this;\n    }\n}\n/** @ignore */\nexport class RecordBatchStreamWriter extends RecordBatchWriter {\n    /** @nocollapse */\n    static writeAll(input, options) {\n        const writer = new RecordBatchStreamWriter(options);\n        if (isPromise(input)) {\n            return input.then((x) => writer.writeAll(x));\n        }\n        else if (isAsyncIterable(input)) {\n            return writeAllAsync(writer, input);\n        }\n        return writeAll(writer, input);\n    }\n}\n/** @ignore */\nexport class RecordBatchFileWriter extends RecordBatchWriter {\n    constructor() {\n        super();\n        this._autoDestroy = true;\n    }\n    /** @nocollapse */\n    static writeAll(input) {\n        const writer = new RecordBatchFileWriter();\n        if (isPromise(input)) {\n            return input.then((x) => writer.writeAll(x));\n        }\n        else if (isAsyncIterable(input)) {\n            return writeAllAsync(writer, input);\n        }\n        return writeAll(writer, input);\n    }\n    // @ts-ignore\n    _writeSchema(schema) {\n        return this._writeMagic()._writePadding(2);\n    }\n    _writeFooter(schema) {\n        const buffer = Footer.encode(new Footer(schema, MetadataVersion.V4, this._recordBatchBlocks, this._dictionaryBlocks));\n        return super\n            ._writeFooter(schema) // EOS bytes for sequential readers\n            ._write(buffer) // Write the flatbuffer\n            ._write(Int32Array.of(buffer.byteLength)) // then the footer size suffix\n            ._writeMagic(); // then the magic suffix\n    }\n}\n/** @ignore */\nexport class RecordBatchJSONWriter extends RecordBatchWriter {\n    constructor() {\n        super();\n        this._autoDestroy = true;\n        this._recordBatches = [];\n        this._dictionaries = [];\n    }\n    /** @nocollapse */\n    static writeAll(input) {\n        return new RecordBatchJSONWriter().writeAll(input);\n    }\n    _writeMessage() { return this; }\n    // @ts-ignore\n    _writeFooter(schema) { return this; }\n    _writeSchema(schema) {\n        return this._write(`{\\n  \"schema\": ${JSON.stringify({ fields: schema.fields.map(fieldToJSON) }, null, 2)}`);\n    }\n    _writeDictionaries(batch) {\n        if (batch.dictionaries.size > 0) {\n            this._dictionaries.push(batch);\n        }\n        return this;\n    }\n    _writeDictionaryBatch(dictionary, id, isDelta = false) {\n        this._dictionaryDeltaOffsets.set(id, dictionary.length + (this._dictionaryDeltaOffsets.get(id) || 0));\n        this._write(this._dictionaryBlocks.length === 0 ? `    ` : `,\\n    `);\n        this._write(`${dictionaryBatchToJSON(dictionary, id, isDelta)}`);\n        this._dictionaryBlocks.push(new FileBlock(0, 0, 0));\n        return this;\n    }\n    _writeRecordBatch(batch) {\n        this._writeDictionaries(batch);\n        this._recordBatches.push(batch);\n        return this;\n    }\n    close() {\n        if (this._dictionaries.length > 0) {\n            this._write(`,\\n  \"dictionaries\": [\\n`);\n            for (const batch of this._dictionaries) {\n                super._writeDictionaries(batch);\n            }\n            this._write(`\\n  ]`);\n        }\n        if (this._recordBatches.length > 0) {\n            for (let i = -1, n = this._recordBatches.length; ++i < n;) {\n                this._write(i === 0 ? `,\\n  \"batches\": [\\n    ` : `,\\n    `);\n                this._write(`${recordBatchToJSON(this._recordBatches[i])}`);\n                this._recordBatchBlocks.push(new FileBlock(0, 0, 0));\n            }\n            this._write(`\\n  ]`);\n        }\n        if (this._schema) {\n            this._write(`\\n}`);\n        }\n        this._dictionaries = [];\n        this._recordBatches = [];\n        return super.close();\n    }\n}\n/** @ignore */\nfunction writeAll(writer, input) {\n    let chunks = input;\n    if (input instanceof Table) {\n        chunks = input.chunks;\n        writer.reset(undefined, input.schema);\n    }\n    for (const batch of chunks) {\n        writer.write(batch);\n    }\n    return writer.finish();\n}\n/** @ignore */\nasync function writeAllAsync(writer, batches) {\n    for await (const batch of batches) {\n        writer.write(batch);\n    }\n    return writer.finish();\n}\n/** @ignore */\nfunction fieldToJSON({ name, type, nullable }) {\n    const assembler = new JSONTypeAssembler();\n    return {\n        'name': name, 'nullable': nullable,\n        'type': assembler.visit(type),\n        'children': (type.children || []).map(fieldToJSON),\n        'dictionary': !DataType.isDictionary(type) ? undefined : {\n            'id': type.id,\n            'isOrdered': type.isOrdered,\n            'indexType': assembler.visit(type.indices)\n        }\n    };\n}\n/** @ignore */\nfunction dictionaryBatchToJSON(dictionary, id, isDelta = false) {\n    const field = new Field(`${id}`, dictionary.type, dictionary.nullCount > 0);\n    const columns = JSONVectorAssembler.assemble(new Column(field, [dictionary]));\n    return JSON.stringify({\n        'id': id,\n        'isDelta': isDelta,\n        'data': {\n            'count': dictionary.length,\n            'columns': columns\n        }\n    }, null, 2);\n}\n/** @ignore */\nfunction recordBatchToJSON(records) {\n    return JSON.stringify({\n        'count': records.length,\n        'columns': JSONVectorAssembler.assemble(records)\n    }, null, 2);\n}\n\n//# sourceMappingURL=writer.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Data } from '../data';\nimport { Schema } from '../schema';\nimport { Chunked } from '../vector/chunked';\nimport { RecordBatch } from '../recordbatch';\nconst noopBuf = new Uint8Array(0);\nconst nullBufs = (bitmapLength) => [\n    noopBuf, noopBuf, new Uint8Array(bitmapLength), noopBuf\n];\n/** @ignore */\nexport function ensureSameLengthData(schema, chunks, batchLength = chunks.reduce((l, c) => Math.max(l, c.length), 0)) {\n    let data;\n    let field;\n    let i = -1, n = chunks.length;\n    const fields = [...schema.fields];\n    const batchData = [];\n    const bitmapLength = ((batchLength + 63) & ~63) >> 3;\n    while (++i < n) {\n        if ((data = chunks[i]) && data.length === batchLength) {\n            batchData[i] = data;\n        }\n        else {\n            (field = fields[i]).nullable || (fields[i] = fields[i].clone({ nullable: true }));\n            batchData[i] = data ? data._changeLengthAndBackfillNullBitmap(batchLength)\n                : Data.new(field.type, 0, batchLength, batchLength, nullBufs(bitmapLength));\n        }\n    }\n    return [new Schema(fields), batchLength, batchData];\n}\n/** @ignore */\nexport function distributeColumnsIntoRecordBatches(columns) {\n    return distributeVectorsIntoRecordBatches(new Schema(columns.map(({ field }) => field)), columns);\n}\n/** @ignore */\nexport function distributeVectorsIntoRecordBatches(schema, vecs) {\n    return uniformlyDistributeChunksAcrossRecordBatches(schema, vecs.map((v) => v instanceof Chunked ? v.chunks.map((c) => c.data) : [v.data]));\n}\n/** @ignore */\nfunction uniformlyDistributeChunksAcrossRecordBatches(schema, columns) {\n    const fields = [...schema.fields];\n    const batchArgs = [];\n    const memo = { numBatches: columns.reduce((n, c) => Math.max(n, c.length), 0) };\n    let numBatches = 0, batchLength = 0;\n    let i = -1, numColumns = columns.length;\n    let child, childData = [];\n    while (memo.numBatches-- > 0) {\n        for (batchLength = Number.POSITIVE_INFINITY, i = -1; ++i < numColumns;) {\n            childData[i] = child = columns[i].shift();\n            batchLength = Math.min(batchLength, child ? child.length : batchLength);\n        }\n        if (isFinite(batchLength)) {\n            childData = distributeChildData(fields, batchLength, childData, columns, memo);\n            if (batchLength > 0) {\n                batchArgs[numBatches++] = [batchLength, childData.slice()];\n            }\n        }\n    }\n    return [\n        schema = new Schema(fields, schema.metadata),\n        batchArgs.map((xs) => new RecordBatch(schema, ...xs))\n    ];\n}\n/** @ignore */\nfunction distributeChildData(fields, batchLength, childData, columns, memo) {\n    let data;\n    let field;\n    let length = 0, i = -1, n = columns.length;\n    const bitmapLength = ((batchLength + 63) & ~63) >> 3;\n    while (++i < n) {\n        if ((data = childData[i]) && ((length = data.length) >= batchLength)) {\n            if (length === batchLength) {\n                childData[i] = data;\n            }\n            else {\n                childData[i] = data.slice(0, batchLength);\n                data = data.slice(batchLength, length - batchLength);\n                memo.numBatches = Math.max(memo.numBatches, columns[i].unshift(data));\n            }\n        }\n        else {\n            (field = fields[i]).nullable || (fields[i] = field.clone({ nullable: true }));\n            childData[i] = data ? data._changeLengthAndBackfillNullBitmap(batchLength)\n                : Data.new(field.type, 0, batchLength, batchLength, nullBufs(bitmapLength));\n        }\n    }\n    return childData;\n}\n\n//# sourceMappingURL=recordbatch.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Type } from '../enum';\nimport { Chunked } from './chunked';\nimport { clampRange } from '../util/vector';\nimport { AbstractVector, Vector } from '../vector';\n/** @ignore */\nexport class BaseVector extends AbstractVector {\n    constructor(data, children) {\n        super();\n        this._children = children;\n        this.numChildren = data.childData.length;\n        this._bindDataAccessors(this.data = data);\n    }\n    get type() { return this.data.type; }\n    get typeId() { return this.data.typeId; }\n    get length() { return this.data.length; }\n    get offset() { return this.data.offset; }\n    get stride() { return this.data.stride; }\n    get nullCount() { return this.data.nullCount; }\n    get byteLength() { return this.data.byteLength; }\n    get VectorName() { return `${Type[this.typeId]}Vector`; }\n    get ArrayType() { return this.type.ArrayType; }\n    get values() { return this.data.values; }\n    get typeIds() { return this.data.typeIds; }\n    get nullBitmap() { return this.data.nullBitmap; }\n    get valueOffsets() { return this.data.valueOffsets; }\n    get [Symbol.toStringTag]() { return `${this.VectorName}<${this.type[Symbol.toStringTag]}>`; }\n    clone(data, children = this._children) {\n        return Vector.new(data, children);\n    }\n    concat(...others) {\n        return Chunked.concat(this, ...others);\n    }\n    slice(begin, end) {\n        // Adjust args similar to Array.prototype.slice. Normalize begin/end to\n        // clamp between 0 and length, and wrap around on negative indices, e.g.\n        // slice(-1, 5) or slice(5, -1)\n        return clampRange(this, begin, end, this._sliceInternal);\n    }\n    isValid(index) {\n        if (this.nullCount > 0) {\n            const idx = this.offset + index;\n            const val = this.nullBitmap[idx >> 3];\n            const mask = (val & (1 << (idx % 8)));\n            return mask !== 0;\n        }\n        return true;\n    }\n    getChildAt(index) {\n        return index < 0 || index >= this.numChildren ? null : ((this._children || (this._children = []))[index] ||\n            (this._children[index] = Vector.new(this.data.childData[index])));\n    }\n    toJSON() { return [...this]; }\n    _sliceInternal(self, begin, end) {\n        return self.clone(self.data.slice(begin, end - begin), null);\n    }\n    // @ts-ignore\n    _bindDataAccessors(data) {\n        // Implementation in src/vectors/index.ts due to circular dependency/packaging shenanigans\n    }\n}\nBaseVector.prototype[Symbol.isConcatSpreadable] = true;\n\n//# sourceMappingURL=base.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Vector } from '../vector';\nimport { BaseVector } from './base';\nimport { Utf8 } from '../type';\n/** @ignore */\nexport class BinaryVector extends BaseVector {\n    asUtf8() {\n        return Vector.new(this.data.clone(new Utf8()));\n    }\n}\n\n//# sourceMappingURL=binary.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Bool } from '../type';\nimport { BaseVector } from './base';\nimport { vectorFromValuesWithType } from './index';\n/** @ignore */\nexport class BoolVector extends BaseVector {\n    /** @nocollapse */\n    static from(input) {\n        return vectorFromValuesWithType(() => new Bool(), input);\n    }\n}\n\n//# sourceMappingURL=bool.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { DateUnit } from '../enum';\nimport { BaseVector } from './base';\nimport { vectorFromValuesWithType } from './index';\nimport { DateDay, DateMillisecond } from '../type';\n/** @ignore */\nexport class DateVector extends BaseVector {\n    /** @nocollapse */\n    static from(...args) {\n        if (args.length === 2) {\n            return vectorFromValuesWithType(() => args[1] === DateUnit.DAY ? new DateDay() : new DateMillisecond(), args[0]);\n        }\n        return vectorFromValuesWithType(() => new DateMillisecond(), args[0]);\n    }\n}\n/** @ignore */\nexport class DateDayVector extends DateVector {\n}\n/** @ignore */\nexport class DateMillisecondVector extends DateVector {\n}\n\n//# sourceMappingURL=date.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { BaseVector } from './base';\n/** @ignore */\nexport class DecimalVector extends BaseVector {\n}\n\n//# sourceMappingURL=decimal.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Data } from '../data';\nimport { Vector } from '../vector';\nimport { BaseVector } from './base';\nimport { vectorFromValuesWithType } from './index';\nimport { Dictionary } from '../type';\n/** @ignore */\nexport class DictionaryVector extends BaseVector {\n    constructor(data) {\n        super(data);\n        this.indices = Vector.new(data.clone(this.type.indices));\n    }\n    /** @nocollapse */\n    static from(...args) {\n        if (args.length === 3) {\n            const [values, indices, keys] = args;\n            const type = new Dictionary(values.type, indices, null, null);\n            return Vector.new(Data.Dictionary(type, 0, keys.length, 0, null, keys, values));\n        }\n        return vectorFromValuesWithType(() => args[0].type, args[0]);\n    }\n    get dictionary() { return this.data.dictionary; }\n    reverseLookup(value) { return this.dictionary.indexOf(value); }\n    getKey(idx) { return this.indices.get(idx); }\n    getValue(key) { return this.dictionary.get(key); }\n    setKey(idx, key) { return this.indices.set(idx, key); }\n    setValue(key, value) { return this.dictionary.set(key, value); }\n}\nDictionaryVector.prototype.indices = null;\n\n//# sourceMappingURL=dictionary.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { BaseVector } from './base';\n/** @ignore */\nexport class FixedSizeBinaryVector extends BaseVector {\n}\n\n//# sourceMappingURL=fixedsizebinary.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { BaseVector } from './base';\n/** @ignore */\nexport class FixedSizeListVector extends BaseVector {\n}\n\n//# sourceMappingURL=fixedsizelist.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Data } from '../data';\nimport { Vector } from '../vector';\nimport { BaseVector } from './base';\nimport { vectorFromValuesWithType } from './index';\nimport { Float16, Float32, Float64 } from '../type';\n/** @ignore */\nexport class FloatVector extends BaseVector {\n    /** @nocollapse */\n    static from(input) {\n        let ArrowType = vectorTypeToDataType(this);\n        if ((input instanceof ArrayBuffer) || ArrayBuffer.isView(input)) {\n            let InputType = arrayTypeToDataType(input.constructor) || ArrowType;\n            // Special case, infer the Arrow DataType from the input if calling the base\n            // FloatVector.from with a TypedArray, e.g. `FloatVector.from(new Float32Array())`\n            if (ArrowType === null) {\n                ArrowType = InputType;\n            }\n            // If the DataType inferred from the Vector constructor matches the\n            // DataType inferred from the input arguments, return zero-copy view\n            if (ArrowType && ArrowType === InputType) {\n                let type = new ArrowType();\n                let length = input.byteLength / type.ArrayType.BYTES_PER_ELEMENT;\n                // If the ArrowType is Float16 but the input type isn't a Uint16Array,\n                // let the Float16Builder handle casting the input values to Uint16s.\n                if (!convertTo16Bit(ArrowType, input.constructor)) {\n                    return Vector.new(Data.Float(type, 0, length, 0, null, input));\n                }\n            }\n        }\n        if (ArrowType) {\n            // If the DataType inferred from the Vector constructor is different than\n            // the DataType inferred from the input TypedArray, or if input isn't a\n            // TypedArray, use the Builders to construct the result Vector\n            return vectorFromValuesWithType(() => new ArrowType(), input);\n        }\n        if ((input instanceof DataView) || (input instanceof ArrayBuffer)) {\n            throw new TypeError(`Cannot infer float type from instance of ${input.constructor.name}`);\n        }\n        throw new TypeError('Unrecognized FloatVector input');\n    }\n}\n/** @ignore */\nexport class Float16Vector extends FloatVector {\n    // Since JS doesn't have half floats, `toArray()` returns a zero-copy slice\n    // of the underlying Uint16Array data. This behavior ensures we don't incur\n    // extra compute or copies if you're calling `toArray()` in order to create\n    // a buffer for something like WebGL. Buf if you're using JS and want typed\n    // arrays of 4-to-8-byte precision, these methods will enumerate the values\n    // and clamp to the desired byte lengths.\n    toFloat32Array() { return new Float32Array(this); }\n    toFloat64Array() { return new Float64Array(this); }\n}\n/** @ignore */\nexport class Float32Vector extends FloatVector {\n}\n/** @ignore */\nexport class Float64Vector extends FloatVector {\n}\nconst convertTo16Bit = (typeCtor, dataCtor) => {\n    return (typeCtor === Float16) && (dataCtor !== Uint16Array);\n};\n/** @ignore */\nconst arrayTypeToDataType = (ctor) => {\n    switch (ctor) {\n        case Uint16Array: return Float16;\n        case Float32Array: return Float32;\n        case Float64Array: return Float64;\n        default: return null;\n    }\n};\n/** @ignore */\nconst vectorTypeToDataType = (ctor) => {\n    switch (ctor) {\n        case Float16Vector: return Float16;\n        case Float32Vector: return Float32;\n        case Float64Vector: return Float64;\n        default: return null;\n    }\n};\n\n//# sourceMappingURL=float.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { BaseVector } from './base';\n/** @ignore */\nexport class IntervalVector extends BaseVector {\n}\n/** @ignore */\nexport class IntervalDayTimeVector extends IntervalVector {\n}\n/** @ignore */\nexport class IntervalYearMonthVector extends IntervalVector {\n}\n\n//# sourceMappingURL=interval.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Data } from '../data';\nimport { Vector } from '../vector';\nimport { BaseVector } from './base';\nimport { vectorFromValuesWithType } from './index';\nimport { BigInt64Array, BigUint64Array } from '../util/compat';\nimport { toBigInt64Array, toBigUint64Array } from '../util/buffer';\nimport { Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64 } from '../type';\n/** @ignore */\nexport class IntVector extends BaseVector {\n    /** @nocollapse */\n    static from(...args) {\n        let [input, is64bit = false] = args;\n        let ArrowType = vectorTypeToDataType(this, is64bit);\n        if ((input instanceof ArrayBuffer) || ArrayBuffer.isView(input)) {\n            let InputType = arrayTypeToDataType(input.constructor, is64bit) || ArrowType;\n            // Special case, infer the Arrow DataType from the input if calling the base\n            // IntVector.from with a TypedArray, e.g. `IntVector.from(new Int32Array())`\n            if (ArrowType === null) {\n                ArrowType = InputType;\n            }\n            // If the DataType inferred from the Vector constructor matches the\n            // DataType inferred from the input arguments, return zero-copy view\n            if (ArrowType && ArrowType === InputType) {\n                let type = new ArrowType();\n                let length = input.byteLength / type.ArrayType.BYTES_PER_ELEMENT;\n                // If the ArrowType is 64bit but the input type is 32bit pairs, update the logical length\n                if (convert32To64Bit(ArrowType, input.constructor)) {\n                    length *= 0.5;\n                }\n                return Vector.new(Data.Int(type, 0, length, 0, null, input));\n            }\n        }\n        if (ArrowType) {\n            // If the DataType inferred from the Vector constructor is different than\n            // the DataType inferred from the input TypedArray, or if input isn't a\n            // TypedArray, use the Builders to construct the result Vector\n            return vectorFromValuesWithType(() => new ArrowType(), input);\n        }\n        if ((input instanceof DataView) || (input instanceof ArrayBuffer)) {\n            throw new TypeError(`Cannot infer integer type from instance of ${input.constructor.name}`);\n        }\n        throw new TypeError('Unrecognized IntVector input');\n    }\n}\n/** @ignore */\nexport class Int8Vector extends IntVector {\n}\n/** @ignore */\nexport class Int16Vector extends IntVector {\n}\n/** @ignore */\nexport class Int32Vector extends IntVector {\n}\n/** @ignore */\nexport class Int64Vector extends IntVector {\n    toBigInt64Array() {\n        return toBigInt64Array(this.values);\n    }\n    get values64() {\n        return this._values64 || (this._values64 = this.toBigInt64Array());\n    }\n}\n/** @ignore */\nexport class Uint8Vector extends IntVector {\n}\n/** @ignore */\nexport class Uint16Vector extends IntVector {\n}\n/** @ignore */\nexport class Uint32Vector extends IntVector {\n}\n/** @ignore */\nexport class Uint64Vector extends IntVector {\n    toBigUint64Array() {\n        return toBigUint64Array(this.values);\n    }\n    get values64() {\n        return this._values64 || (this._values64 = this.toBigUint64Array());\n    }\n}\nconst convert32To64Bit = (typeCtor, dataCtor) => {\n    return (typeCtor === Int64 || typeCtor === Uint64) &&\n        (dataCtor === Int32Array || dataCtor === Uint32Array);\n};\n/** @ignore */\nconst arrayTypeToDataType = (ctor, is64bit) => {\n    switch (ctor) {\n        case Int8Array: return Int8;\n        case Int16Array: return Int16;\n        case Int32Array: return is64bit ? Int64 : Int32;\n        case BigInt64Array: return Int64;\n        case Uint8Array: return Uint8;\n        case Uint16Array: return Uint16;\n        case Uint32Array: return is64bit ? Uint64 : Uint32;\n        case BigUint64Array: return Uint64;\n        default: return null;\n    }\n};\n/** @ignore */\nconst vectorTypeToDataType = (ctor, is64bit) => {\n    switch (ctor) {\n        case Int8Vector: return Int8;\n        case Int16Vector: return Int16;\n        case Int32Vector: return is64bit ? Int64 : Int32;\n        case Int64Vector: return Int64;\n        case Uint8Vector: return Uint8;\n        case Uint16Vector: return Uint16;\n        case Uint32Vector: return is64bit ? Uint64 : Uint32;\n        case Uint64Vector: return Uint64;\n        default: return null;\n    }\n};\n\n//# sourceMappingURL=int.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { BaseVector } from './base';\n/** @ignore */\nexport class ListVector extends BaseVector {\n}\n\n//# sourceMappingURL=list.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { MapRow } from './row';\nimport { Vector } from '../vector';\nimport { BaseVector } from './base';\nimport { List } from '../type';\n/** @ignore */\nexport class MapVector extends BaseVector {\n    asList() {\n        const child = this.type.children[0];\n        return Vector.new(this.data.clone(new List(child)));\n    }\n    bind(index) {\n        const child = this.getChildAt(0);\n        const { [index]: begin, [index + 1]: end } = this.valueOffsets;\n        return new MapRow(child.slice(begin, end));\n    }\n}\n\n//# sourceMappingURL=map.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { BaseVector } from './base';\n/** @ignore */\nexport class NullVector extends BaseVector {\n}\n\n//# sourceMappingURL=null.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { StructRow } from './row';\nimport { BaseVector } from './base';\n/** @ignore */ const kRowIndex = Symbol.for('rowIndex');\n/** @ignore */\nexport class StructVector extends BaseVector {\n    bind(index) {\n        const proto = this._row || (this._row = new StructRow(this));\n        const bound = Object.create(proto);\n        bound[kRowIndex] = index;\n        return bound;\n    }\n}\n\n//# sourceMappingURL=struct.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { BaseVector } from './base';\n/** @ignore */\nexport class TimestampVector extends BaseVector {\n}\n/** @ignore */\nexport class TimestampSecondVector extends TimestampVector {\n}\n/** @ignore */\nexport class TimestampMillisecondVector extends TimestampVector {\n}\n/** @ignore */\nexport class TimestampMicrosecondVector extends TimestampVector {\n}\n/** @ignore */\nexport class TimestampNanosecondVector extends TimestampVector {\n}\n\n//# sourceMappingURL=timestamp.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { BaseVector } from './base';\n/** @ignore */\nexport class TimeVector extends BaseVector {\n}\n/** @ignore */\nexport class TimeSecondVector extends TimeVector {\n}\n/** @ignore */\nexport class TimeMillisecondVector extends TimeVector {\n}\n/** @ignore */\nexport class TimeMicrosecondVector extends TimeVector {\n}\n/** @ignore */\nexport class TimeNanosecondVector extends TimeVector {\n}\n\n//# sourceMappingURL=time.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { BaseVector } from './base';\n/** @ignore */\nexport class UnionVector extends BaseVector {\n    get typeIdToChildIndex() { return this.data.type.typeIdToChildIndex; }\n}\n/** @ignore */\nexport class DenseUnionVector extends UnionVector {\n    get valueOffsets() { return this.data.valueOffsets; }\n}\n/** @ignore */\nexport class SparseUnionVector extends UnionVector {\n}\n\n//# sourceMappingURL=union.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Vector } from '../vector';\nimport { BaseVector } from './base';\nimport { Binary, Utf8 } from '../type';\nimport { vectorFromValuesWithType } from './index';\n/** @ignore */\nexport class Utf8Vector extends BaseVector {\n    /** @nocollapse */\n    static from(input) {\n        return vectorFromValuesWithType(() => new Utf8(), input);\n    }\n    asBinary() {\n        return Vector.new(this.data.clone(new Binary()));\n    }\n}\n\n//# sourceMappingURL=utf8.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n/** @ignore */\nexport function partial0(visit) {\n    return function () { return visit(this); };\n}\n/** @ignore */\nexport function partial1(visit) {\n    return function (a) { return visit(this, a); };\n}\n/** @ignore */\nexport function partial2(visit) {\n    return function (a, b) { return visit(this, a, b); };\n}\n\n//# sourceMappingURL=fn.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { BN } from '../util/bn';\nimport { Visitor } from '../visitor';\nimport { decodeUtf8 } from '../util/utf8';\nimport { uint16ToFloat64 } from '../util/math';\nimport { UnionMode, Precision, DateUnit, TimeUnit, IntervalUnit } from '../enum';\n/** @ignore */\nexport class GetVisitor extends Visitor {\n}\n/** @ignore */ const epochDaysToMs = (data, index) => 86400000 * data[index];\n/** @ignore */ const epochMillisecondsLongToMs = (data, index) => 4294967296 * (data[index + 1]) + (data[index] >>> 0);\n/** @ignore */ const epochMicrosecondsLongToMs = (data, index) => 4294967296 * (data[index + 1] / 1000) + ((data[index] >>> 0) / 1000);\n/** @ignore */ const epochNanosecondsLongToMs = (data, index) => 4294967296 * (data[index + 1] / 1000000) + ((data[index] >>> 0) / 1000000);\n/** @ignore */ const epochMillisecondsToDate = (epochMs) => new Date(epochMs);\n/** @ignore */ const epochDaysToDate = (data, index) => epochMillisecondsToDate(epochDaysToMs(data, index));\n/** @ignore */ const epochMillisecondsLongToDate = (data, index) => epochMillisecondsToDate(epochMillisecondsLongToMs(data, index));\n/** @ignore */\nconst getNull = (_vector, _index) => null;\n/** @ignore */\nconst getVariableWidthBytes = (values, valueOffsets, index) => {\n    const { [index]: x, [index + 1]: y } = valueOffsets;\n    return x != null && y != null ? values.subarray(x, y) : null;\n};\n/** @ignore */\nconst getBool = ({ offset, values }, index) => {\n    const idx = offset + index;\n    const byte = values[idx >> 3];\n    return (byte & 1 << (idx % 8)) !== 0;\n};\n/** @ignore */\nconst getDateDay = ({ values }, index) => epochDaysToDate(values, index);\n/** @ignore */\nconst getDateMillisecond = ({ values }, index) => epochMillisecondsLongToDate(values, index * 2);\n/** @ignore */\nconst getNumeric = ({ stride, values }, index) => values[stride * index];\n/** @ignore */\nconst getFloat16 = ({ stride, values }, index) => uint16ToFloat64(values[stride * index]);\n/** @ignore */\nconst getBigInts = ({ stride, values, type }, index) => BN.new(values.subarray(stride * index, stride * (index + 1)), type.isSigned);\n/** @ignore */\nconst getFixedSizeBinary = ({ stride, values }, index) => values.subarray(stride * index, stride * (index + 1));\n/** @ignore */\nconst getBinary = ({ values, valueOffsets }, index) => getVariableWidthBytes(values, valueOffsets, index);\n/** @ignore */\nconst getUtf8 = ({ values, valueOffsets }, index) => {\n    const bytes = getVariableWidthBytes(values, valueOffsets, index);\n    return bytes !== null ? decodeUtf8(bytes) : null;\n};\n/* istanbul ignore next */\n/** @ignore */\nconst getInt = (vector, index) => (vector.type.bitWidth < 64\n    ? getNumeric(vector, index)\n    : getBigInts(vector, index));\n/* istanbul ignore next */\n/** @ignore */\nconst getFloat = (vector, index) => (vector.type.precision !== Precision.HALF\n    ? getNumeric(vector, index)\n    : getFloat16(vector, index));\n/* istanbul ignore next */\n/** @ignore */\nconst getDate = (vector, index) => (vector.type.unit === DateUnit.DAY\n    ? getDateDay(vector, index)\n    : getDateMillisecond(vector, index));\n/** @ignore */\nconst getTimestampSecond = ({ values }, index) => 1000 * epochMillisecondsLongToMs(values, index * 2);\n/** @ignore */\nconst getTimestampMillisecond = ({ values }, index) => epochMillisecondsLongToMs(values, index * 2);\n/** @ignore */\nconst getTimestampMicrosecond = ({ values }, index) => epochMicrosecondsLongToMs(values, index * 2);\n/** @ignore */\nconst getTimestampNanosecond = ({ values }, index) => epochNanosecondsLongToMs(values, index * 2);\n/* istanbul ignore next */\n/** @ignore */\nconst getTimestamp = (vector, index) => {\n    switch (vector.type.unit) {\n        case TimeUnit.SECOND: return getTimestampSecond(vector, index);\n        case TimeUnit.MILLISECOND: return getTimestampMillisecond(vector, index);\n        case TimeUnit.MICROSECOND: return getTimestampMicrosecond(vector, index);\n        case TimeUnit.NANOSECOND: return getTimestampNanosecond(vector, index);\n    }\n};\n/** @ignore */\nconst getTimeSecond = ({ values, stride }, index) => values[stride * index];\n/** @ignore */\nconst getTimeMillisecond = ({ values, stride }, index) => values[stride * index];\n/** @ignore */\nconst getTimeMicrosecond = ({ values }, index) => BN.signed(values.subarray(2 * index, 2 * (index + 1)));\n/** @ignore */\nconst getTimeNanosecond = ({ values }, index) => BN.signed(values.subarray(2 * index, 2 * (index + 1)));\n/* istanbul ignore next */\n/** @ignore */\nconst getTime = (vector, index) => {\n    switch (vector.type.unit) {\n        case TimeUnit.SECOND: return getTimeSecond(vector, index);\n        case TimeUnit.MILLISECOND: return getTimeMillisecond(vector, index);\n        case TimeUnit.MICROSECOND: return getTimeMicrosecond(vector, index);\n        case TimeUnit.NANOSECOND: return getTimeNanosecond(vector, index);\n    }\n};\n/** @ignore */\nconst getDecimal = ({ values }, index) => BN.decimal(values.subarray(4 * index, 4 * (index + 1)));\n/** @ignore */\nconst getList = (vector, index) => {\n    const child = vector.getChildAt(0), { valueOffsets, stride } = vector;\n    return child.slice(valueOffsets[index * stride], valueOffsets[(index * stride) + 1]);\n};\n/** @ignore */\nconst getMap = (vector, index) => {\n    return vector.bind(index);\n};\n/** @ignore */\nconst getStruct = (vector, index) => {\n    return vector.bind(index);\n};\n/* istanbul ignore next */\n/** @ignore */\nconst getUnion = (vector, index) => {\n    return vector.type.mode === UnionMode.Dense ?\n        getDenseUnion(vector, index) :\n        getSparseUnion(vector, index);\n};\n/** @ignore */\nconst getDenseUnion = (vector, index) => {\n    const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n    const child = vector.getChildAt(childIndex);\n    return child ? child.get(vector.valueOffsets[index]) : null;\n};\n/** @ignore */\nconst getSparseUnion = (vector, index) => {\n    const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n    const child = vector.getChildAt(childIndex);\n    return child ? child.get(index) : null;\n};\n/** @ignore */\nconst getDictionary = (vector, index) => {\n    return vector.getValue(vector.getKey(index));\n};\n/* istanbul ignore next */\n/** @ignore */\nconst getInterval = (vector, index) => (vector.type.unit === IntervalUnit.DAY_TIME)\n    ? getIntervalDayTime(vector, index)\n    : getIntervalYearMonth(vector, index);\n/** @ignore */\nconst getIntervalDayTime = ({ values }, index) => values.subarray(2 * index, 2 * (index + 1));\n/** @ignore */\nconst getIntervalYearMonth = ({ values }, index) => {\n    const interval = values[index];\n    const int32s = new Int32Array(2);\n    int32s[0] = interval / 12 | 0; /* years */\n    int32s[1] = interval % 12 | 0; /* months */\n    return int32s;\n};\n/** @ignore */\nconst getFixedSizeList = (vector, index) => {\n    const child = vector.getChildAt(0), { stride } = vector;\n    return child.slice(index * stride, (index + 1) * stride);\n};\nGetVisitor.prototype.visitNull = getNull;\nGetVisitor.prototype.visitBool = getBool;\nGetVisitor.prototype.visitInt = getInt;\nGetVisitor.prototype.visitInt8 = getNumeric;\nGetVisitor.prototype.visitInt16 = getNumeric;\nGetVisitor.prototype.visitInt32 = getNumeric;\nGetVisitor.prototype.visitInt64 = getBigInts;\nGetVisitor.prototype.visitUint8 = getNumeric;\nGetVisitor.prototype.visitUint16 = getNumeric;\nGetVisitor.prototype.visitUint32 = getNumeric;\nGetVisitor.prototype.visitUint64 = getBigInts;\nGetVisitor.prototype.visitFloat = getFloat;\nGetVisitor.prototype.visitFloat16 = getFloat16;\nGetVisitor.prototype.visitFloat32 = getNumeric;\nGetVisitor.prototype.visitFloat64 = getNumeric;\nGetVisitor.prototype.visitUtf8 = getUtf8;\nGetVisitor.prototype.visitBinary = getBinary;\nGetVisitor.prototype.visitFixedSizeBinary = getFixedSizeBinary;\nGetVisitor.prototype.visitDate = getDate;\nGetVisitor.prototype.visitDateDay = getDateDay;\nGetVisitor.prototype.visitDateMillisecond = getDateMillisecond;\nGetVisitor.prototype.visitTimestamp = getTimestamp;\nGetVisitor.prototype.visitTimestampSecond = getTimestampSecond;\nGetVisitor.prototype.visitTimestampMillisecond = getTimestampMillisecond;\nGetVisitor.prototype.visitTimestampMicrosecond = getTimestampMicrosecond;\nGetVisitor.prototype.visitTimestampNanosecond = getTimestampNanosecond;\nGetVisitor.prototype.visitTime = getTime;\nGetVisitor.prototype.visitTimeSecond = getTimeSecond;\nGetVisitor.prototype.visitTimeMillisecond = getTimeMillisecond;\nGetVisitor.prototype.visitTimeMicrosecond = getTimeMicrosecond;\nGetVisitor.prototype.visitTimeNanosecond = getTimeNanosecond;\nGetVisitor.prototype.visitDecimal = getDecimal;\nGetVisitor.prototype.visitList = getList;\nGetVisitor.prototype.visitStruct = getStruct;\nGetVisitor.prototype.visitUnion = getUnion;\nGetVisitor.prototype.visitDenseUnion = getDenseUnion;\nGetVisitor.prototype.visitSparseUnion = getSparseUnion;\nGetVisitor.prototype.visitDictionary = getDictionary;\nGetVisitor.prototype.visitInterval = getInterval;\nGetVisitor.prototype.visitIntervalDayTime = getIntervalDayTime;\nGetVisitor.prototype.visitIntervalYearMonth = getIntervalYearMonth;\nGetVisitor.prototype.visitFixedSizeList = getFixedSizeList;\nGetVisitor.prototype.visitMap = getMap;\n/** @ignore */\nexport const instance = new GetVisitor();\n\n//# sourceMappingURL=get.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Visitor } from '../visitor';\nimport { getBool, iterateBits } from '../util/bit';\nimport { createElementComparator } from '../util/vector';\n/** @ignore */\nexport class IndexOfVisitor extends Visitor {\n}\n/** @ignore */\nfunction nullIndexOf(vector, searchElement) {\n    // if you're looking for nulls and the vector isn't empty, we've got 'em!\n    return searchElement === null && vector.length > 0 ? 0 : -1;\n}\n/** @ignore */\nfunction indexOfNull(vector, fromIndex) {\n    const { nullBitmap } = vector;\n    if (!nullBitmap || vector.nullCount <= 0) {\n        return -1;\n    }\n    let i = 0;\n    for (const isValid of iterateBits(nullBitmap, vector.data.offset + (fromIndex || 0), vector.length, nullBitmap, getBool)) {\n        if (!isValid) {\n            return i;\n        }\n        ++i;\n    }\n    return -1;\n}\n/** @ignore */\nfunction indexOfValue(vector, searchElement, fromIndex) {\n    if (searchElement === undefined) {\n        return -1;\n    }\n    if (searchElement === null) {\n        return indexOfNull(vector, fromIndex);\n    }\n    const compare = createElementComparator(searchElement);\n    for (let i = (fromIndex || 0) - 1, n = vector.length; ++i < n;) {\n        if (compare(vector.get(i))) {\n            return i;\n        }\n    }\n    return -1;\n}\n/** @ignore */\nfunction indexOfUnion(vector, searchElement, fromIndex) {\n    // Unions are special -- they do have a nullBitmap, but so can their children.\n    // If the searchElement is null, we don't know whether it came from the Union's\n    // bitmap or one of its childrens'. So we don't interrogate the Union's bitmap,\n    // since that will report the wrong index if a child has a null before the Union.\n    const compare = createElementComparator(searchElement);\n    for (let i = (fromIndex || 0) - 1, n = vector.length; ++i < n;) {\n        if (compare(vector.get(i))) {\n            return i;\n        }\n    }\n    return -1;\n}\nIndexOfVisitor.prototype.visitNull = nullIndexOf;\nIndexOfVisitor.prototype.visitBool = indexOfValue;\nIndexOfVisitor.prototype.visitInt = indexOfValue;\nIndexOfVisitor.prototype.visitInt8 = indexOfValue;\nIndexOfVisitor.prototype.visitInt16 = indexOfValue;\nIndexOfVisitor.prototype.visitInt32 = indexOfValue;\nIndexOfVisitor.prototype.visitInt64 = indexOfValue;\nIndexOfVisitor.prototype.visitUint8 = indexOfValue;\nIndexOfVisitor.prototype.visitUint16 = indexOfValue;\nIndexOfVisitor.prototype.visitUint32 = indexOfValue;\nIndexOfVisitor.prototype.visitUint64 = indexOfValue;\nIndexOfVisitor.prototype.visitFloat = indexOfValue;\nIndexOfVisitor.prototype.visitFloat16 = indexOfValue;\nIndexOfVisitor.prototype.visitFloat32 = indexOfValue;\nIndexOfVisitor.prototype.visitFloat64 = indexOfValue;\nIndexOfVisitor.prototype.visitUtf8 = indexOfValue;\nIndexOfVisitor.prototype.visitBinary = indexOfValue;\nIndexOfVisitor.prototype.visitFixedSizeBinary = indexOfValue;\nIndexOfVisitor.prototype.visitDate = indexOfValue;\nIndexOfVisitor.prototype.visitDateDay = indexOfValue;\nIndexOfVisitor.prototype.visitDateMillisecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimestamp = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampSecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampMillisecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampMicrosecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampNanosecond = indexOfValue;\nIndexOfVisitor.prototype.visitTime = indexOfValue;\nIndexOfVisitor.prototype.visitTimeSecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimeMillisecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimeMicrosecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimeNanosecond = indexOfValue;\nIndexOfVisitor.prototype.visitDecimal = indexOfValue;\nIndexOfVisitor.prototype.visitList = indexOfValue;\nIndexOfVisitor.prototype.visitStruct = indexOfValue;\nIndexOfVisitor.prototype.visitUnion = indexOfValue;\nIndexOfVisitor.prototype.visitDenseUnion = indexOfUnion;\nIndexOfVisitor.prototype.visitSparseUnion = indexOfUnion;\nIndexOfVisitor.prototype.visitDictionary = indexOfValue;\nIndexOfVisitor.prototype.visitInterval = indexOfValue;\nIndexOfVisitor.prototype.visitIntervalDayTime = indexOfValue;\nIndexOfVisitor.prototype.visitIntervalYearMonth = indexOfValue;\nIndexOfVisitor.prototype.visitFixedSizeList = indexOfValue;\nIndexOfVisitor.prototype.visitMap = indexOfValue;\n/** @ignore */\nexport const instance = new IndexOfVisitor();\n\n//# sourceMappingURL=indexof.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Type } from '../enum';\nimport { Visitor } from '../visitor';\nimport { iterateBits } from '../util/bit';\nimport { instance as getVisitor } from './get';\n/** @ignore */\nexport class IteratorVisitor extends Visitor {\n}\n/** @ignore */\nfunction nullableIterator(vector) {\n    const getFn = getVisitor.getVisitFn(vector);\n    return iterateBits(vector.nullBitmap, vector.offset, vector.length, vector, (vec, idx, nullByte, nullBit) => ((nullByte & 1 << nullBit) !== 0) ? getFn(vec, idx) : null);\n}\n/** @ignore */\nfunction vectorIterator(vector) {\n    // If nullable, iterate manually\n    if (vector.nullCount > 0) {\n        return nullableIterator(vector);\n    }\n    const { type, typeId, length } = vector;\n    // Fast case, defer to native iterators if possible\n    if (vector.stride === 1 && ((typeId === Type.Timestamp) ||\n        (typeId === Type.Int && type.bitWidth !== 64) ||\n        (typeId === Type.Time && type.bitWidth !== 64) ||\n        (typeId === Type.Float && type.precision > 0 /* Precision.HALF */))) {\n        return vector.values.subarray(0, length)[Symbol.iterator]();\n    }\n    // Otherwise, iterate manually\n    return (function* (getFn) {\n        for (let index = -1; ++index < length;) {\n            yield getFn(vector, index);\n        }\n    })(getVisitor.getVisitFn(vector));\n}\nIteratorVisitor.prototype.visitNull = vectorIterator;\nIteratorVisitor.prototype.visitBool = vectorIterator;\nIteratorVisitor.prototype.visitInt = vectorIterator;\nIteratorVisitor.prototype.visitInt8 = vectorIterator;\nIteratorVisitor.prototype.visitInt16 = vectorIterator;\nIteratorVisitor.prototype.visitInt32 = vectorIterator;\nIteratorVisitor.prototype.visitInt64 = vectorIterator;\nIteratorVisitor.prototype.visitUint8 = vectorIterator;\nIteratorVisitor.prototype.visitUint16 = vectorIterator;\nIteratorVisitor.prototype.visitUint32 = vectorIterator;\nIteratorVisitor.prototype.visitUint64 = vectorIterator;\nIteratorVisitor.prototype.visitFloat = vectorIterator;\nIteratorVisitor.prototype.visitFloat16 = vectorIterator;\nIteratorVisitor.prototype.visitFloat32 = vectorIterator;\nIteratorVisitor.prototype.visitFloat64 = vectorIterator;\nIteratorVisitor.prototype.visitUtf8 = vectorIterator;\nIteratorVisitor.prototype.visitBinary = vectorIterator;\nIteratorVisitor.prototype.visitFixedSizeBinary = vectorIterator;\nIteratorVisitor.prototype.visitDate = vectorIterator;\nIteratorVisitor.prototype.visitDateDay = vectorIterator;\nIteratorVisitor.prototype.visitDateMillisecond = vectorIterator;\nIteratorVisitor.prototype.visitTimestamp = vectorIterator;\nIteratorVisitor.prototype.visitTimestampSecond = vectorIterator;\nIteratorVisitor.prototype.visitTimestampMillisecond = vectorIterator;\nIteratorVisitor.prototype.visitTimestampMicrosecond = vectorIterator;\nIteratorVisitor.prototype.visitTimestampNanosecond = vectorIterator;\nIteratorVisitor.prototype.visitTime = vectorIterator;\nIteratorVisitor.prototype.visitTimeSecond = vectorIterator;\nIteratorVisitor.prototype.visitTimeMillisecond = vectorIterator;\nIteratorVisitor.prototype.visitTimeMicrosecond = vectorIterator;\nIteratorVisitor.prototype.visitTimeNanosecond = vectorIterator;\nIteratorVisitor.prototype.visitDecimal = vectorIterator;\nIteratorVisitor.prototype.visitList = vectorIterator;\nIteratorVisitor.prototype.visitStruct = vectorIterator;\nIteratorVisitor.prototype.visitUnion = vectorIterator;\nIteratorVisitor.prototype.visitDenseUnion = vectorIterator;\nIteratorVisitor.prototype.visitSparseUnion = vectorIterator;\nIteratorVisitor.prototype.visitDictionary = vectorIterator;\nIteratorVisitor.prototype.visitInterval = vectorIterator;\nIteratorVisitor.prototype.visitIntervalDayTime = vectorIterator;\nIteratorVisitor.prototype.visitIntervalYearMonth = vectorIterator;\nIteratorVisitor.prototype.visitFixedSizeList = vectorIterator;\nIteratorVisitor.prototype.visitMap = vectorIterator;\n/** @ignore */\nexport const instance = new IteratorVisitor();\n\n//# sourceMappingURL=iterator.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Type } from '../enum';\nimport { Visitor } from '../visitor';\nimport { instance as iteratorVisitor } from './iterator';\n/** @ignore */\nexport class ToArrayVisitor extends Visitor {\n}\n/** @ignore */\nfunction arrayOfVector(vector) {\n    const { type, length, stride } = vector;\n    // Fast case, return subarray if possible\n    switch (type.typeId) {\n        case Type.Int:\n        case Type.Float:\n        case Type.Decimal:\n        case Type.Time:\n        case Type.Timestamp:\n            return vector.values.subarray(0, length * stride);\n    }\n    // Otherwise if not primitive, slow copy\n    return [...iteratorVisitor.visit(vector)];\n}\nToArrayVisitor.prototype.visitNull = arrayOfVector;\nToArrayVisitor.prototype.visitBool = arrayOfVector;\nToArrayVisitor.prototype.visitInt = arrayOfVector;\nToArrayVisitor.prototype.visitInt8 = arrayOfVector;\nToArrayVisitor.prototype.visitInt16 = arrayOfVector;\nToArrayVisitor.prototype.visitInt32 = arrayOfVector;\nToArrayVisitor.prototype.visitInt64 = arrayOfVector;\nToArrayVisitor.prototype.visitUint8 = arrayOfVector;\nToArrayVisitor.prototype.visitUint16 = arrayOfVector;\nToArrayVisitor.prototype.visitUint32 = arrayOfVector;\nToArrayVisitor.prototype.visitUint64 = arrayOfVector;\nToArrayVisitor.prototype.visitFloat = arrayOfVector;\nToArrayVisitor.prototype.visitFloat16 = arrayOfVector;\nToArrayVisitor.prototype.visitFloat32 = arrayOfVector;\nToArrayVisitor.prototype.visitFloat64 = arrayOfVector;\nToArrayVisitor.prototype.visitUtf8 = arrayOfVector;\nToArrayVisitor.prototype.visitBinary = arrayOfVector;\nToArrayVisitor.prototype.visitFixedSizeBinary = arrayOfVector;\nToArrayVisitor.prototype.visitDate = arrayOfVector;\nToArrayVisitor.prototype.visitDateDay = arrayOfVector;\nToArrayVisitor.prototype.visitDateMillisecond = arrayOfVector;\nToArrayVisitor.prototype.visitTimestamp = arrayOfVector;\nToArrayVisitor.prototype.visitTimestampSecond = arrayOfVector;\nToArrayVisitor.prototype.visitTimestampMillisecond = arrayOfVector;\nToArrayVisitor.prototype.visitTimestampMicrosecond = arrayOfVector;\nToArrayVisitor.prototype.visitTimestampNanosecond = arrayOfVector;\nToArrayVisitor.prototype.visitTime = arrayOfVector;\nToArrayVisitor.prototype.visitTimeSecond = arrayOfVector;\nToArrayVisitor.prototype.visitTimeMillisecond = arrayOfVector;\nToArrayVisitor.prototype.visitTimeMicrosecond = arrayOfVector;\nToArrayVisitor.prototype.visitTimeNanosecond = arrayOfVector;\nToArrayVisitor.prototype.visitDecimal = arrayOfVector;\nToArrayVisitor.prototype.visitList = arrayOfVector;\nToArrayVisitor.prototype.visitStruct = arrayOfVector;\nToArrayVisitor.prototype.visitUnion = arrayOfVector;\nToArrayVisitor.prototype.visitDenseUnion = arrayOfVector;\nToArrayVisitor.prototype.visitSparseUnion = arrayOfVector;\nToArrayVisitor.prototype.visitDictionary = arrayOfVector;\nToArrayVisitor.prototype.visitInterval = arrayOfVector;\nToArrayVisitor.prototype.visitIntervalDayTime = arrayOfVector;\nToArrayVisitor.prototype.visitIntervalYearMonth = arrayOfVector;\nToArrayVisitor.prototype.visitFixedSizeList = arrayOfVector;\nToArrayVisitor.prototype.visitMap = arrayOfVector;\n/** @ignore */\nexport const instance = new ToArrayVisitor();\n\n//# sourceMappingURL=toarray.mjs.map\n","/* istanbul ignore file */\nimport { Visitor } from '../visitor';\nimport { TimeUnit } from '../enum';\n/** @ignore */ const sum = (x, y) => x + y;\n/** @ignore */ const variableWidthColumnErrorMessage = (type) => `Cannot compute the byte width of variable-width column ${type}`;\n/** @ignore */\nexport class ByteWidthVisitor extends Visitor {\n    visitNull(____) { return 0; }\n    visitInt(type) { return type.bitWidth / 8; }\n    visitFloat(type) { return type.ArrayType.BYTES_PER_ELEMENT; }\n    visitBinary(type) { throw new Error(variableWidthColumnErrorMessage(type)); }\n    visitUtf8(type) { throw new Error(variableWidthColumnErrorMessage(type)); }\n    visitBool(____) { return 1 / 8; }\n    visitDecimal(____) { return 16; }\n    visitDate(type) { return (type.unit + 1) * 4; }\n    visitTime(type) { return type.bitWidth / 8; }\n    visitTimestamp(type) { return type.unit === TimeUnit.SECOND ? 4 : 8; }\n    visitInterval(type) { return (type.unit + 1) * 4; }\n    visitList(type) { throw new Error(variableWidthColumnErrorMessage(type)); }\n    visitStruct(type) { return this.visitFields(type.children).reduce(sum, 0); }\n    visitUnion(type) { return this.visitFields(type.children).reduce(sum, 0); }\n    visitFixedSizeBinary(type) { return type.byteWidth; }\n    visitFixedSizeList(type) { return type.listSize * this.visitFields(type.children).reduce(sum, 0); }\n    visitMap(type) { return this.visitFields(type.children).reduce(sum, 0); }\n    visitDictionary(type) { return this.visit(type.indices); }\n    visitFields(fields) { return (fields || []).map((field) => this.visit(field.type)); }\n    visitSchema(schema) { return this.visitFields(schema.fields).reduce(sum, 0); }\n}\n/** @ignore */\nexport const instance = new ByteWidthVisitor();\n\n//# sourceMappingURL=bytewidth.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Visitor } from '../visitor';\nimport { BinaryVector } from '../vector/binary';\nimport { BoolVector } from '../vector/bool';\nimport { DateVector, DateDayVector, DateMillisecondVector } from '../vector/date';\nimport { DecimalVector } from '../vector/decimal';\nimport { DictionaryVector } from '../vector/dictionary';\nimport { FixedSizeBinaryVector } from '../vector/fixedsizebinary';\nimport { FixedSizeListVector } from '../vector/fixedsizelist';\nimport { FloatVector, Float16Vector, Float32Vector, Float64Vector } from '../vector/float';\nimport { IntervalVector, IntervalDayTimeVector, IntervalYearMonthVector } from '../vector/interval';\nimport { IntVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector } from '../vector/int';\nimport { ListVector } from '../vector/list';\nimport { MapVector } from '../vector/map';\nimport { NullVector } from '../vector/null';\nimport { StructVector } from '../vector/struct';\nimport { TimestampVector, TimestampSecondVector, TimestampMillisecondVector, TimestampMicrosecondVector, TimestampNanosecondVector } from '../vector/timestamp';\nimport { TimeVector, TimeSecondVector, TimeMillisecondVector, TimeMicrosecondVector, TimeNanosecondVector } from '../vector/time';\nimport { UnionVector, DenseUnionVector, SparseUnionVector } from '../vector/union';\nimport { Utf8Vector } from '../vector/utf8';\n/** @ignore */\nexport class GetVectorConstructor extends Visitor {\n    visitNull() { return NullVector; }\n    visitBool() { return BoolVector; }\n    visitInt() { return IntVector; }\n    visitInt8() { return Int8Vector; }\n    visitInt16() { return Int16Vector; }\n    visitInt32() { return Int32Vector; }\n    visitInt64() { return Int64Vector; }\n    visitUint8() { return Uint8Vector; }\n    visitUint16() { return Uint16Vector; }\n    visitUint32() { return Uint32Vector; }\n    visitUint64() { return Uint64Vector; }\n    visitFloat() { return FloatVector; }\n    visitFloat16() { return Float16Vector; }\n    visitFloat32() { return Float32Vector; }\n    visitFloat64() { return Float64Vector; }\n    visitUtf8() { return Utf8Vector; }\n    visitBinary() { return BinaryVector; }\n    visitFixedSizeBinary() { return FixedSizeBinaryVector; }\n    visitDate() { return DateVector; }\n    visitDateDay() { return DateDayVector; }\n    visitDateMillisecond() { return DateMillisecondVector; }\n    visitTimestamp() { return TimestampVector; }\n    visitTimestampSecond() { return TimestampSecondVector; }\n    visitTimestampMillisecond() { return TimestampMillisecondVector; }\n    visitTimestampMicrosecond() { return TimestampMicrosecondVector; }\n    visitTimestampNanosecond() { return TimestampNanosecondVector; }\n    visitTime() { return TimeVector; }\n    visitTimeSecond() { return TimeSecondVector; }\n    visitTimeMillisecond() { return TimeMillisecondVector; }\n    visitTimeMicrosecond() { return TimeMicrosecondVector; }\n    visitTimeNanosecond() { return TimeNanosecondVector; }\n    visitDecimal() { return DecimalVector; }\n    visitList() { return ListVector; }\n    visitStruct() { return StructVector; }\n    visitUnion() { return UnionVector; }\n    visitDenseUnion() { return DenseUnionVector; }\n    visitSparseUnion() { return SparseUnionVector; }\n    visitDictionary() { return DictionaryVector; }\n    visitInterval() { return IntervalVector; }\n    visitIntervalDayTime() { return IntervalDayTimeVector; }\n    visitIntervalYearMonth() { return IntervalYearMonthVector; }\n    visitFixedSizeList() { return FixedSizeListVector; }\n    visitMap() { return MapVector; }\n}\n/** @ignore */\nexport const instance = new GetVectorConstructor();\n\n//# sourceMappingURL=vectorctor.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nexport { Vector } from '../vector';\nexport { BaseVector } from './base';\nexport { BinaryVector } from './binary';\nexport { BoolVector } from './bool';\nexport { Chunked } from './chunked';\nexport { DateVector, DateDayVector, DateMillisecondVector } from './date';\nexport { DecimalVector } from './decimal';\nexport { DictionaryVector } from './dictionary';\nexport { FixedSizeBinaryVector } from './fixedsizebinary';\nexport { FixedSizeListVector } from './fixedsizelist';\nexport { FloatVector, Float16Vector, Float32Vector, Float64Vector } from './float';\nexport { IntervalVector, IntervalDayTimeVector, IntervalYearMonthVector } from './interval';\nexport { IntVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector } from './int';\nexport { ListVector } from './list';\nexport { MapVector } from './map';\nexport { NullVector } from './null';\nexport { StructVector } from './struct';\nexport { TimestampVector, TimestampSecondVector, TimestampMillisecondVector, TimestampMicrosecondVector, TimestampNanosecondVector } from './timestamp';\nexport { TimeVector, TimeSecondVector, TimeMillisecondVector, TimeMicrosecondVector, TimeNanosecondVector } from './time';\nexport { UnionVector, DenseUnionVector, SparseUnionVector } from './union';\nexport { Utf8Vector } from './utf8';\nexport { MapRow, StructRow } from './row';\nimport * as fn from '../util/fn';\nimport { Type } from '../enum';\nimport { Vector } from '../vector';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { setBool } from '../util/bit';\nimport { isIterable, isAsyncIterable } from '../util/compat';\nimport { Builder } from '../builder';\nimport { instance as getVisitor } from '../visitor/get';\nimport { instance as setVisitor } from '../visitor/set';\nimport { instance as indexOfVisitor } from '../visitor/indexof';\nimport { instance as toArrayVisitor } from '../visitor/toarray';\nimport { instance as iteratorVisitor } from '../visitor/iterator';\nimport { instance as byteWidthVisitor } from '../visitor/bytewidth';\nimport { instance as getVectorConstructor } from '../visitor/vectorctor';\n/** @nocollapse */\nVector.new = newVector;\n/** @nocollapse */\nVector.from = vectorFrom;\n/** @ignore */\nfunction newVector(data, ...args) {\n    return new (getVectorConstructor.getVisitFn(data)())(data, ...args);\n}\n/** @ignore */\nexport function vectorFromValuesWithType(newDataType, input) {\n    if (isIterable(input)) {\n        return Vector.from({ 'nullValues': [null, undefined], type: newDataType(), 'values': input });\n    }\n    else if (isAsyncIterable(input)) {\n        return Vector.from({ 'nullValues': [null, undefined], type: newDataType(), 'values': input });\n    }\n    const { 'values': values = [], 'type': type = newDataType(), 'nullValues': nullValues = [null, undefined], } = { ...input };\n    return isIterable(values)\n        ? Vector.from({ nullValues, ...input, type })\n        : Vector.from({ nullValues, ...input, type });\n}\nfunction vectorFrom(input) {\n    const { 'values': values = [], ...options } = { 'nullValues': [null, undefined], ...input };\n    if (isIterable(values)) {\n        const chunks = [...Builder.throughIterable(options)(values)];\n        return chunks.length === 1 ? chunks[0] : Chunked.concat(chunks);\n    }\n    return (async (chunks) => {\n        const transform = Builder.throughAsyncIterable(options);\n        for await (const chunk of transform(values)) {\n            chunks.push(chunk);\n        }\n        return chunks.length === 1 ? chunks[0] : Chunked.concat(chunks);\n    })([]);\n}\n//\n// We provide the following method implementations for code navigability purposes only.\n// They're overridden at runtime below with the specific Visitor implementation for each type,\n// short-circuiting the usual Visitor traversal and reducing intermediate lookups and calls.\n// This comment is here to remind you to not set breakpoints in these function bodies, or to inform\n// you why the breakpoints you have already set are not being triggered. Have a great day!\n//\nBaseVector.prototype.get = function baseVectorGet(index) {\n    return getVisitor.visit(this, index);\n};\nBaseVector.prototype.set = function baseVectorSet(index, value) {\n    return setVisitor.visit(this, index, value);\n};\nBaseVector.prototype.indexOf = function baseVectorIndexOf(value, fromIndex) {\n    return indexOfVisitor.visit(this, value, fromIndex);\n};\nBaseVector.prototype.toArray = function baseVectorToArray() {\n    return toArrayVisitor.visit(this);\n};\nBaseVector.prototype.getByteWidth = function baseVectorGetByteWidth() {\n    return byteWidthVisitor.visit(this.type);\n};\nBaseVector.prototype[Symbol.iterator] = function baseVectorSymbolIterator() {\n    return iteratorVisitor.visit(this);\n};\nBaseVector.prototype._bindDataAccessors = bindBaseVectorDataAccessors;\n// Perf: bind and assign the operator Visitor methods to each of the Vector subclasses for each Type\nObject.keys(Type)\n    .map((T) => Type[T])\n    .filter((T) => typeof T === 'number')\n    .filter((typeId) => typeId !== Type.NONE)\n    .forEach((typeId) => {\n    const VectorCtor = getVectorConstructor.visit(typeId);\n    VectorCtor.prototype['get'] = fn.partial1(getVisitor.getVisitFn(typeId));\n    VectorCtor.prototype['set'] = fn.partial2(setVisitor.getVisitFn(typeId));\n    VectorCtor.prototype['indexOf'] = fn.partial2(indexOfVisitor.getVisitFn(typeId));\n    VectorCtor.prototype['toArray'] = fn.partial0(toArrayVisitor.getVisitFn(typeId));\n    VectorCtor.prototype['getByteWidth'] = partialType0(byteWidthVisitor.getVisitFn(typeId));\n    VectorCtor.prototype[Symbol.iterator] = fn.partial0(iteratorVisitor.getVisitFn(typeId));\n});\n/** @ignore */\nfunction partialType0(visit) {\n    return function () { return visit(this.type); };\n}\n/** @ignore */\nfunction wrapNullableGet(fn) {\n    return function (i) { return this.isValid(i) ? fn.call(this, i) : null; };\n}\n/** @ignore */\nfunction wrapNullableSet(fn) {\n    return function (i, a) {\n        if (setBool(this.nullBitmap, this.offset + i, !(a === null || a === undefined))) {\n            fn.call(this, i, a);\n        }\n    };\n}\n/** @ignore */\nfunction bindBaseVectorDataAccessors() {\n    const nullBitmap = this.nullBitmap;\n    if (nullBitmap && nullBitmap.byteLength > 0) {\n        this.get = wrapNullableGet(this.get);\n        this.set = wrapNullableSet(this.set);\n    }\n}\n\n//# sourceMappingURL=index.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Column } from './column';\nimport { Schema } from './schema';\nimport { RecordBatch, _InternalEmptyPlaceholderRecordBatch } from './recordbatch';\nimport { RecordBatchReader } from './ipc/reader';\nimport { Struct } from './type';\nimport { selectColumnArgs, selectArgs } from './util/args';\nimport { isPromise, isIterable, isAsyncIterable } from './util/compat';\nimport { RecordBatchFileWriter, RecordBatchStreamWriter } from './ipc/writer';\nimport { distributeColumnsIntoRecordBatches, distributeVectorsIntoRecordBatches } from './util/recordbatch';\nimport { Chunked, StructVector } from './vector/index';\nexport class Table extends Chunked {\n    constructor(...args) {\n        let schema = null;\n        if (args[0] instanceof Schema) {\n            schema = args.shift();\n        }\n        let chunks = selectArgs(RecordBatch, args);\n        if (!schema && !(schema = chunks[0] && chunks[0].schema)) {\n            throw new TypeError('Table must be initialized with a Schema or at least one RecordBatch');\n        }\n        chunks[0] || (chunks[0] = new _InternalEmptyPlaceholderRecordBatch(schema));\n        super(new Struct(schema.fields), chunks);\n        this._schema = schema;\n        this._chunks = chunks;\n    }\n    /** @nocollapse */\n    static empty(schema = new Schema([])) { return new Table(schema, []); }\n    /** @nocollapse */\n    static from(input) {\n        if (!input) {\n            return Table.empty();\n        }\n        if (typeof input === 'object') {\n            let table = isIterable(input['values']) ? tableFromIterable(input)\n                : isAsyncIterable(input['values']) ? tableFromAsyncIterable(input)\n                    : null;\n            if (table !== null) {\n                return table;\n            }\n        }\n        let reader = RecordBatchReader.from(input);\n        if (isPromise(reader)) {\n            return (async () => await Table.from(await reader))();\n        }\n        if (reader.isSync() && (reader = reader.open())) {\n            return !reader.schema ? Table.empty() : new Table(reader.schema, [...reader]);\n        }\n        return (async (opening) => {\n            const reader = await opening;\n            const schema = reader.schema;\n            const batches = [];\n            if (schema) {\n                for await (let batch of reader) {\n                    batches.push(batch);\n                }\n                return new Table(schema, batches);\n            }\n            return Table.empty();\n        })(reader.open());\n    }\n    /** @nocollapse */\n    static async fromAsync(source) {\n        return await Table.from(source);\n    }\n    /** @nocollapse */\n    static fromStruct(vector) {\n        return Table.new(vector.data.childData, vector.type.children);\n    }\n    /** @nocollapse */\n    static new(...cols) {\n        return new Table(...distributeColumnsIntoRecordBatches(selectColumnArgs(cols)));\n    }\n    get schema() { return this._schema; }\n    get length() { return this._length; }\n    get chunks() { return this._chunks; }\n    get numCols() { return this._numChildren; }\n    clone(chunks = this._chunks) {\n        return new Table(this._schema, chunks);\n    }\n    getColumn(name) {\n        return this.getColumnAt(this.getColumnIndex(name));\n    }\n    getColumnAt(index) {\n        return this.getChildAt(index);\n    }\n    getColumnIndex(name) {\n        return this._schema.fields.findIndex((f) => f.name === name);\n    }\n    getChildAt(index) {\n        if (index < 0 || index >= this.numChildren) {\n            return null;\n        }\n        let field, child;\n        const fields = this._schema.fields;\n        const columns = this._children || (this._children = []);\n        if (child = columns[index]) {\n            return child;\n        }\n        if (field = fields[index]) {\n            const chunks = this._chunks\n                .map((chunk) => chunk.getChildAt(index))\n                .filter((vec) => vec != null);\n            if (chunks.length > 0) {\n                return (columns[index] = new Column(field, chunks));\n            }\n        }\n        return null;\n    }\n    // @ts-ignore\n    serialize(encoding = 'binary', stream = true) {\n        const Writer = !stream\n            ? RecordBatchFileWriter\n            : RecordBatchStreamWriter;\n        return Writer.writeAll(this).toUint8Array(true);\n    }\n    count() {\n        return this._length;\n    }\n    select(...columnNames) {\n        const nameToIndex = this._schema.fields.reduce((m, f, i) => m.set(f.name, i), new Map());\n        return this.selectAt(...columnNames.map((columnName) => nameToIndex.get(columnName)).filter((x) => x > -1));\n    }\n    selectAt(...columnIndices) {\n        const schema = this._schema.selectAt(...columnIndices);\n        return new Table(schema, this._chunks.map(({ length, data: { childData } }) => {\n            return new RecordBatch(schema, length, columnIndices.map((i) => childData[i]).filter(Boolean));\n        }));\n    }\n    assign(other) {\n        const fields = this._schema.fields;\n        const [indices, oldToNew] = other.schema.fields.reduce((memo, f2, newIdx) => {\n            const [indices, oldToNew] = memo;\n            const i = fields.findIndex((f) => f.name === f2.name);\n            ~i ? (oldToNew[i] = newIdx) : indices.push(newIdx);\n            return memo;\n        }, [[], []]);\n        const schema = this._schema.assign(other.schema);\n        const columns = [\n            ...fields.map((_f, i, _fs, j = oldToNew[i]) => (j === undefined ? this.getColumnAt(i) : other.getColumnAt(j))),\n            ...indices.map((i) => other.getColumnAt(i))\n        ].filter(Boolean);\n        return new Table(...distributeVectorsIntoRecordBatches(schema, columns));\n    }\n}\nfunction tableFromIterable(input) {\n    const { type } = input;\n    if (type instanceof Struct) {\n        return Table.fromStruct(StructVector.from(input));\n    }\n    return null;\n}\nfunction tableFromAsyncIterable(input) {\n    const { type } = input;\n    if (type instanceof Struct) {\n        return StructVector.from(input).then((vector) => Table.fromStruct(vector));\n    }\n    return null;\n}\n\n//# sourceMappingURL=table.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Data } from './data';\nimport { Table } from './table';\nimport { Vector } from './vector';\nimport { Visitor } from './visitor';\nimport { Schema } from './schema';\nimport { isIterable } from './util/compat';\nimport { Chunked } from './vector/chunked';\nimport { selectFieldArgs } from './util/args';\nimport { DataType, Struct } from './type';\nimport { ensureSameLengthData } from './util/recordbatch';\nimport { StructVector } from './vector/index';\nexport class RecordBatch extends StructVector {\n    constructor(...args) {\n        let data;\n        let schema = args[0];\n        let children;\n        if (args[1] instanceof Data) {\n            [, data, children] = args;\n        }\n        else {\n            const fields = schema.fields;\n            const [, length, childData] = args;\n            data = Data.Struct(new Struct(fields), 0, length, 0, null, childData);\n        }\n        super(data, children);\n        this._schema = schema;\n    }\n    /** @nocollapse */\n    static from(options) {\n        if (isIterable(options['values'])) {\n            return Table.from(options);\n        }\n        return Table.from(options);\n    }\n    /** @nocollapse */\n    static new(...args) {\n        const [fs, xs] = selectFieldArgs(args);\n        const vs = xs.filter((x) => x instanceof Vector);\n        return new RecordBatch(...ensureSameLengthData(new Schema(fs), vs.map((x) => x.data)));\n    }\n    clone(data, children = this._children) {\n        return new RecordBatch(this._schema, data, children);\n    }\n    concat(...others) {\n        const schema = this._schema, chunks = Chunked.flatten(this, ...others);\n        return new Table(schema, chunks.map(({ data }) => new RecordBatch(schema, data)));\n    }\n    get schema() { return this._schema; }\n    get numCols() { return this._schema.fields.length; }\n    get dictionaries() {\n        return this._dictionaries || (this._dictionaries = DictionaryCollector.collect(this));\n    }\n    select(...columnNames) {\n        const nameToIndex = this._schema.fields.reduce((m, f, i) => m.set(f.name, i), new Map());\n        return this.selectAt(...columnNames.map((columnName) => nameToIndex.get(columnName)).filter((x) => x > -1));\n    }\n    selectAt(...columnIndices) {\n        const schema = this._schema.selectAt(...columnIndices);\n        const childData = columnIndices.map((i) => this.data.childData[i]).filter(Boolean);\n        return new RecordBatch(schema, this.length, childData);\n    }\n}\n/**\n * An internal class used by the `RecordBatchReader` and `RecordBatchWriter`\n * implementations to differentiate between a stream with valid zero-length\n * RecordBatches, and a stream with a Schema message, but no RecordBatches.\n * @see https://github.com/apache/arrow/pull/4373\n * @ignore\n * @private\n */\n/* tslint:disable:class-name */\nexport class _InternalEmptyPlaceholderRecordBatch extends RecordBatch {\n    constructor(schema) {\n        super(schema, 0, schema.fields.map((f) => Data.new(f.type, 0, 0, 0)));\n    }\n}\n/** @ignore */\nclass DictionaryCollector extends Visitor {\n    constructor() {\n        super(...arguments);\n        this.dictionaries = new Map();\n    }\n    static collect(batch) {\n        return new DictionaryCollector().visit(batch.data, new Struct(batch.schema.fields)).dictionaries;\n    }\n    visit(data, type) {\n        if (DataType.isDictionary(type)) {\n            return this.visitDictionary(data, type);\n        }\n        else {\n            data.childData.forEach((child, i) => this.visit(child, type.children[i].type));\n        }\n        return this;\n    }\n    visitDictionary(data, type) {\n        const dictionary = data.dictionary;\n        if (dictionary && dictionary.length > 0) {\n            this.dictionaries.set(type.id, dictionary);\n        }\n        return this;\n    }\n}\n\n//# sourceMappingURL=recordbatch.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Vector } from '../vector';\nimport { MessageHeader } from '../enum';\nimport { Footer } from './metadata/file';\nimport streamAdapters from '../io/adapters';\nimport { ByteStream, AsyncByteStream } from '../io/stream';\nimport { RandomAccessFile, AsyncRandomAccessFile } from '../io/file';\nimport { VectorLoader, JSONVectorLoader } from '../visitor/vectorloader';\nimport { RecordBatch, _InternalEmptyPlaceholderRecordBatch } from '../recordbatch';\nimport { ITERATOR_DONE, ReadableInterop, } from '../io/interfaces';\nimport { MessageReader, AsyncMessageReader, JSONMessageReader, checkForMagicArrowString, magicLength, magicAndPadding, magicX2AndPadding } from './message';\nimport { isPromise, isIterable, isAsyncIterable, isIteratorResult, isArrowJSON, isFileHandle, isFetchResponse, isReadableDOMStream, isReadableNodeStream } from '../util/compat';\nexport class RecordBatchReader extends ReadableInterop {\n    constructor(impl) {\n        super();\n        this._impl = impl;\n    }\n    get closed() { return this._impl.closed; }\n    get schema() { return this._impl.schema; }\n    get autoDestroy() { return this._impl.autoDestroy; }\n    get dictionaries() { return this._impl.dictionaries; }\n    get numDictionaries() { return this._impl.numDictionaries; }\n    get numRecordBatches() { return this._impl.numRecordBatches; }\n    get footer() { return this._impl.isFile() ? this._impl.footer : null; }\n    isSync() { return this._impl.isSync(); }\n    isAsync() { return this._impl.isAsync(); }\n    isFile() { return this._impl.isFile(); }\n    isStream() { return this._impl.isStream(); }\n    next() {\n        return this._impl.next();\n    }\n    throw(value) {\n        return this._impl.throw(value);\n    }\n    return(value) {\n        return this._impl.return(value);\n    }\n    cancel() {\n        return this._impl.cancel();\n    }\n    reset(schema) {\n        this._impl.reset(schema);\n        this._DOMStream = undefined;\n        this._nodeStream = undefined;\n        return this;\n    }\n    open(options) {\n        const opening = this._impl.open(options);\n        return isPromise(opening) ? opening.then(() => this) : this;\n    }\n    readRecordBatch(index) {\n        return this._impl.isFile() ? this._impl.readRecordBatch(index) : null;\n    }\n    [Symbol.iterator]() {\n        return this._impl[Symbol.iterator]();\n    }\n    [Symbol.asyncIterator]() {\n        return this._impl[Symbol.asyncIterator]();\n    }\n    toDOMStream() {\n        return streamAdapters.toDOMStream((this.isSync()\n            ? { [Symbol.iterator]: () => this }\n            : { [Symbol.asyncIterator]: () => this }));\n    }\n    toNodeStream() {\n        return streamAdapters.toNodeStream((this.isSync()\n            ? { [Symbol.iterator]: () => this }\n            : { [Symbol.asyncIterator]: () => this }), { objectMode: true });\n    }\n    /** @nocollapse */\n    // @ts-ignore\n    static throughNode(options) {\n        throw new Error(`\"throughNode\" not available in this environment`);\n    }\n    /** @nocollapse */\n    static throughDOM(\n    // @ts-ignore\n    writableStrategy, \n    // @ts-ignore\n    readableStrategy) {\n        throw new Error(`\"throughDOM\" not available in this environment`);\n    }\n    /** @nocollapse */\n    static from(source) {\n        if (source instanceof RecordBatchReader) {\n            return source;\n        }\n        else if (isArrowJSON(source)) {\n            return fromArrowJSON(source);\n        }\n        else if (isFileHandle(source)) {\n            return fromFileHandle(source);\n        }\n        else if (isPromise(source)) {\n            return (async () => await RecordBatchReader.from(await source))();\n        }\n        else if (isFetchResponse(source) || isReadableDOMStream(source) || isReadableNodeStream(source) || isAsyncIterable(source)) {\n            return fromAsyncByteStream(new AsyncByteStream(source));\n        }\n        return fromByteStream(new ByteStream(source));\n    }\n    /** @nocollapse */\n    static readAll(source) {\n        if (source instanceof RecordBatchReader) {\n            return source.isSync() ? readAllSync(source) : readAllAsync(source);\n        }\n        else if (isArrowJSON(source) || ArrayBuffer.isView(source) || isIterable(source) || isIteratorResult(source)) {\n            return readAllSync(source);\n        }\n        return readAllAsync(source);\n    }\n}\n//\n// Since TS is a structural type system, we define the following subclass stubs\n// so that concrete types exist to associate with with the interfaces below.\n//\n// The implementation for each RecordBatchReader is hidden away in the set of\n// `RecordBatchReaderImpl` classes in the second half of this file. This allows\n// us to export a single RecordBatchReader class, and swap out the impl based\n// on the io primitives or underlying arrow (JSON, file, or stream) at runtime.\n//\n// Async/await makes our job a bit harder, since it forces everything to be\n// either fully sync or fully async. This is why the logic for the reader impls\n// has been duplicated into both sync and async variants. Since the RBR\n// delegates to its impl, an RBR with an AsyncRecordBatchFileReaderImpl for\n// example will return async/await-friendly Promises, but one with a (sync)\n// RecordBatchStreamReaderImpl will always return values. Nothing should be\n// different about their logic, aside from the async handling. This is also why\n// this code looks highly structured, as it should be nearly identical and easy\n// to follow.\n//\n/** @ignore */\nexport class RecordBatchStreamReader extends RecordBatchReader {\n    constructor(_impl) {\n        super(_impl);\n        this._impl = _impl;\n    }\n    [Symbol.iterator]() { return this._impl[Symbol.iterator](); }\n    async *[Symbol.asyncIterator]() { yield* this[Symbol.iterator](); }\n}\n/** @ignore */\nexport class AsyncRecordBatchStreamReader extends RecordBatchReader {\n    constructor(_impl) {\n        super(_impl);\n        this._impl = _impl;\n    }\n    [Symbol.iterator]() { throw new Error(`AsyncRecordBatchStreamReader is not Iterable`); }\n    [Symbol.asyncIterator]() { return this._impl[Symbol.asyncIterator](); }\n}\n/** @ignore */\nexport class RecordBatchFileReader extends RecordBatchStreamReader {\n    constructor(_impl) {\n        super(_impl);\n        this._impl = _impl;\n    }\n}\n/** @ignore */\nexport class AsyncRecordBatchFileReader extends AsyncRecordBatchStreamReader {\n    constructor(_impl) {\n        super(_impl);\n        this._impl = _impl;\n    }\n}\n/** @ignore */\nclass RecordBatchReaderImpl {\n    constructor(dictionaries = new Map()) {\n        this.closed = false;\n        this.autoDestroy = true;\n        this._dictionaryIndex = 0;\n        this._recordBatchIndex = 0;\n        this.dictionaries = dictionaries;\n    }\n    get numDictionaries() { return this._dictionaryIndex; }\n    get numRecordBatches() { return this._recordBatchIndex; }\n    isSync() { return false; }\n    isAsync() { return false; }\n    isFile() { return false; }\n    isStream() { return false; }\n    reset(schema) {\n        this._dictionaryIndex = 0;\n        this._recordBatchIndex = 0;\n        this.schema = schema;\n        this.dictionaries = new Map();\n        return this;\n    }\n    _loadRecordBatch(header, body) {\n        return new RecordBatch(this.schema, header.length, this._loadVectors(header, body, this.schema.fields));\n    }\n    _loadDictionaryBatch(header, body) {\n        const { id, isDelta, data } = header;\n        const { dictionaries, schema } = this;\n        const dictionary = dictionaries.get(id);\n        if (isDelta || !dictionary) {\n            const type = schema.dictionaries.get(id);\n            return (dictionary && isDelta ? dictionary.concat(Vector.new(this._loadVectors(data, body, [type])[0])) :\n                Vector.new(this._loadVectors(data, body, [type])[0]));\n        }\n        return dictionary;\n    }\n    _loadVectors(header, body, types) {\n        return new VectorLoader(body, header.nodes, header.buffers, this.dictionaries).visitMany(types);\n    }\n}\n/** @ignore */\nclass RecordBatchStreamReaderImpl extends RecordBatchReaderImpl {\n    constructor(source, dictionaries) {\n        super(dictionaries);\n        this._reader = !isArrowJSON(source)\n            ? new MessageReader(this._handle = source)\n            : new JSONMessageReader(this._handle = source);\n    }\n    isSync() { return true; }\n    isStream() { return true; }\n    [Symbol.iterator]() {\n        return this;\n    }\n    cancel() {\n        if (!this.closed && (this.closed = true)) {\n            this.reset()._reader.return();\n            this._reader = null;\n            this.dictionaries = null;\n        }\n    }\n    open(options) {\n        if (!this.closed) {\n            this.autoDestroy = shouldAutoDestroy(this, options);\n            if (!(this.schema || (this.schema = this._reader.readSchema()))) {\n                this.cancel();\n            }\n        }\n        return this;\n    }\n    throw(value) {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return this.reset()._reader.throw(value);\n        }\n        return ITERATOR_DONE;\n    }\n    return(value) {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return this.reset()._reader.return(value);\n        }\n        return ITERATOR_DONE;\n    }\n    next() {\n        if (this.closed) {\n            return ITERATOR_DONE;\n        }\n        let message, { _reader: reader } = this;\n        while (message = this._readNextMessageAndValidate()) {\n            if (message.isSchema()) {\n                this.reset(message.header());\n            }\n            else if (message.isRecordBatch()) {\n                this._recordBatchIndex++;\n                const header = message.header();\n                const buffer = reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return { done: false, value: recordBatch };\n            }\n            else if (message.isDictionaryBatch()) {\n                this._dictionaryIndex++;\n                const header = message.header();\n                const buffer = reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n        if (this.schema && this._recordBatchIndex === 0) {\n            this._recordBatchIndex++;\n            return { done: false, value: new _InternalEmptyPlaceholderRecordBatch(this.schema) };\n        }\n        return this.return();\n    }\n    _readNextMessageAndValidate(type) {\n        return this._reader.readMessage(type);\n    }\n}\n/** @ignore */\nclass AsyncRecordBatchStreamReaderImpl extends RecordBatchReaderImpl {\n    constructor(source, dictionaries) {\n        super(dictionaries);\n        this._reader = new AsyncMessageReader(this._handle = source);\n    }\n    isAsync() { return true; }\n    isStream() { return true; }\n    [Symbol.asyncIterator]() {\n        return this;\n    }\n    async cancel() {\n        if (!this.closed && (this.closed = true)) {\n            await this.reset()._reader.return();\n            this._reader = null;\n            this.dictionaries = null;\n        }\n    }\n    async open(options) {\n        if (!this.closed) {\n            this.autoDestroy = shouldAutoDestroy(this, options);\n            if (!(this.schema || (this.schema = (await this._reader.readSchema())))) {\n                await this.cancel();\n            }\n        }\n        return this;\n    }\n    async throw(value) {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return await this.reset()._reader.throw(value);\n        }\n        return ITERATOR_DONE;\n    }\n    async return(value) {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return await this.reset()._reader.return(value);\n        }\n        return ITERATOR_DONE;\n    }\n    async next() {\n        if (this.closed) {\n            return ITERATOR_DONE;\n        }\n        let message, { _reader: reader } = this;\n        while (message = await this._readNextMessageAndValidate()) {\n            if (message.isSchema()) {\n                await this.reset(message.header());\n            }\n            else if (message.isRecordBatch()) {\n                this._recordBatchIndex++;\n                const header = message.header();\n                const buffer = await reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return { done: false, value: recordBatch };\n            }\n            else if (message.isDictionaryBatch()) {\n                this._dictionaryIndex++;\n                const header = message.header();\n                const buffer = await reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n        if (this.schema && this._recordBatchIndex === 0) {\n            this._recordBatchIndex++;\n            return { done: false, value: new _InternalEmptyPlaceholderRecordBatch(this.schema) };\n        }\n        return await this.return();\n    }\n    async _readNextMessageAndValidate(type) {\n        return await this._reader.readMessage(type);\n    }\n}\n/** @ignore */\nclass RecordBatchFileReaderImpl extends RecordBatchStreamReaderImpl {\n    constructor(source, dictionaries) {\n        super(source instanceof RandomAccessFile ? source : new RandomAccessFile(source), dictionaries);\n    }\n    get footer() { return this._footer; }\n    get numDictionaries() { return this._footer ? this._footer.numDictionaries : 0; }\n    get numRecordBatches() { return this._footer ? this._footer.numRecordBatches : 0; }\n    isSync() { return true; }\n    isFile() { return true; }\n    open(options) {\n        if (!this.closed && !this._footer) {\n            this.schema = (this._footer = this._readFooter()).schema;\n            for (const block of this._footer.dictionaryBatches()) {\n                block && this._readDictionaryBatch(this._dictionaryIndex++);\n            }\n        }\n        return super.open(options);\n    }\n    readRecordBatch(index) {\n        if (this.closed) {\n            return null;\n        }\n        if (!this._footer) {\n            this.open();\n        }\n        const block = this._footer && this._footer.getRecordBatch(index);\n        if (block && this._handle.seek(block.offset)) {\n            const message = this._reader.readMessage(MessageHeader.RecordBatch);\n            if (message && message.isRecordBatch()) {\n                const header = message.header();\n                const buffer = this._reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return recordBatch;\n            }\n        }\n        return null;\n    }\n    _readDictionaryBatch(index) {\n        const block = this._footer && this._footer.getDictionaryBatch(index);\n        if (block && this._handle.seek(block.offset)) {\n            const message = this._reader.readMessage(MessageHeader.DictionaryBatch);\n            if (message && message.isDictionaryBatch()) {\n                const header = message.header();\n                const buffer = this._reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n    }\n    _readFooter() {\n        const { _handle } = this;\n        const offset = _handle.size - magicAndPadding;\n        const length = _handle.readInt32(offset);\n        const buffer = _handle.readAt(offset - length, length);\n        return Footer.decode(buffer);\n    }\n    _readNextMessageAndValidate(type) {\n        if (!this._footer) {\n            this.open();\n        }\n        if (this._footer && this._recordBatchIndex < this.numRecordBatches) {\n            const block = this._footer && this._footer.getRecordBatch(this._recordBatchIndex);\n            if (block && this._handle.seek(block.offset)) {\n                return this._reader.readMessage(type);\n            }\n        }\n        return null;\n    }\n}\n/** @ignore */\nclass AsyncRecordBatchFileReaderImpl extends AsyncRecordBatchStreamReaderImpl {\n    constructor(source, ...rest) {\n        const byteLength = typeof rest[0] !== 'number' ? rest.shift() : undefined;\n        const dictionaries = rest[0] instanceof Map ? rest.shift() : undefined;\n        super(source instanceof AsyncRandomAccessFile ? source : new AsyncRandomAccessFile(source, byteLength), dictionaries);\n    }\n    get footer() { return this._footer; }\n    get numDictionaries() { return this._footer ? this._footer.numDictionaries : 0; }\n    get numRecordBatches() { return this._footer ? this._footer.numRecordBatches : 0; }\n    isFile() { return true; }\n    isAsync() { return true; }\n    async open(options) {\n        if (!this.closed && !this._footer) {\n            this.schema = (this._footer = await this._readFooter()).schema;\n            for (const block of this._footer.dictionaryBatches()) {\n                block && await this._readDictionaryBatch(this._dictionaryIndex++);\n            }\n        }\n        return await super.open(options);\n    }\n    async readRecordBatch(index) {\n        if (this.closed) {\n            return null;\n        }\n        if (!this._footer) {\n            await this.open();\n        }\n        const block = this._footer && this._footer.getRecordBatch(index);\n        if (block && (await this._handle.seek(block.offset))) {\n            const message = await this._reader.readMessage(MessageHeader.RecordBatch);\n            if (message && message.isRecordBatch()) {\n                const header = message.header();\n                const buffer = await this._reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return recordBatch;\n            }\n        }\n        return null;\n    }\n    async _readDictionaryBatch(index) {\n        const block = this._footer && this._footer.getDictionaryBatch(index);\n        if (block && (await this._handle.seek(block.offset))) {\n            const message = await this._reader.readMessage(MessageHeader.DictionaryBatch);\n            if (message && message.isDictionaryBatch()) {\n                const header = message.header();\n                const buffer = await this._reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n    }\n    async _readFooter() {\n        const { _handle } = this;\n        _handle._pending && await _handle._pending;\n        const offset = _handle.size - magicAndPadding;\n        const length = await _handle.readInt32(offset);\n        const buffer = await _handle.readAt(offset - length, length);\n        return Footer.decode(buffer);\n    }\n    async _readNextMessageAndValidate(type) {\n        if (!this._footer) {\n            await this.open();\n        }\n        if (this._footer && this._recordBatchIndex < this.numRecordBatches) {\n            const block = this._footer.getRecordBatch(this._recordBatchIndex);\n            if (block && await this._handle.seek(block.offset)) {\n                return await this._reader.readMessage(type);\n            }\n        }\n        return null;\n    }\n}\n/** @ignore */\nclass RecordBatchJSONReaderImpl extends RecordBatchStreamReaderImpl {\n    constructor(source, dictionaries) {\n        super(source, dictionaries);\n    }\n    _loadVectors(header, body, types) {\n        return new JSONVectorLoader(body, header.nodes, header.buffers, this.dictionaries).visitMany(types);\n    }\n}\n//\n// Define some helper functions and static implementations down here. There's\n// a bit of branching in the static methods that can lead to the same routines\n// being executed, so we've broken those out here for readability.\n//\n/** @ignore */\nfunction shouldAutoDestroy(self, options) {\n    return options && (typeof options['autoDestroy'] === 'boolean') ? options['autoDestroy'] : self['autoDestroy'];\n}\n/** @ignore */\nfunction* readAllSync(source) {\n    const reader = RecordBatchReader.from(source);\n    try {\n        if (!reader.open({ autoDestroy: false }).closed) {\n            do {\n                yield reader;\n            } while (!(reader.reset().open()).closed);\n        }\n    }\n    finally {\n        reader.cancel();\n    }\n}\n/** @ignore */\nasync function* readAllAsync(source) {\n    const reader = await RecordBatchReader.from(source);\n    try {\n        if (!(await reader.open({ autoDestroy: false })).closed) {\n            do {\n                yield reader;\n            } while (!(await reader.reset().open()).closed);\n        }\n    }\n    finally {\n        await reader.cancel();\n    }\n}\n/** @ignore */\nfunction fromArrowJSON(source) {\n    return new RecordBatchStreamReader(new RecordBatchJSONReaderImpl(source));\n}\n/** @ignore */\nfunction fromByteStream(source) {\n    const bytes = source.peek((magicLength + 7) & ~7);\n    return bytes && bytes.byteLength >= 4 ? !checkForMagicArrowString(bytes)\n        ? new RecordBatchStreamReader(new RecordBatchStreamReaderImpl(source))\n        : new RecordBatchFileReader(new RecordBatchFileReaderImpl(source.read()))\n        : new RecordBatchStreamReader(new RecordBatchStreamReaderImpl(function* () { }()));\n}\n/** @ignore */\nasync function fromAsyncByteStream(source) {\n    const bytes = await source.peek((magicLength + 7) & ~7);\n    return bytes && bytes.byteLength >= 4 ? !checkForMagicArrowString(bytes)\n        ? new AsyncRecordBatchStreamReader(new AsyncRecordBatchStreamReaderImpl(source))\n        : new RecordBatchFileReader(new RecordBatchFileReaderImpl(await source.read()))\n        : new AsyncRecordBatchStreamReader(new AsyncRecordBatchStreamReaderImpl(async function* () { }()));\n}\n/** @ignore */\nasync function fromFileHandle(source) {\n    const { size } = await source.stat();\n    const file = new AsyncRandomAccessFile(source, size);\n    if (size >= magicX2AndPadding) {\n        if (checkForMagicArrowString(await file.readAt(0, (magicLength + 7) & ~7))) {\n            return new AsyncRecordBatchFileReader(new AsyncRecordBatchFileReaderImpl(file));\n        }\n    }\n    return new AsyncRecordBatchStreamReader(new AsyncRecordBatchStreamReaderImpl(file));\n}\n\n//# sourceMappingURL=reader.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Builder } from '../../builder/index';\n/** @ignore */\nexport function builderThroughDOMStream(options) {\n    return new BuilderTransform(options);\n}\n/** @ignore */\nexport class BuilderTransform {\n    constructor(options) {\n        // Access properties by string indexers to defeat closure compiler\n        this._numChunks = 0;\n        this._finished = false;\n        this._bufferedSize = 0;\n        const { ['readableStrategy']: readableStrategy, ['writableStrategy']: writableStrategy, ['queueingStrategy']: queueingStrategy = 'count', ...builderOptions } = options;\n        this._controller = null;\n        this._builder = Builder.new(builderOptions);\n        this._getSize = queueingStrategy !== 'bytes' ? chunkLength : chunkByteLength;\n        const { ['highWaterMark']: readableHighWaterMark = queueingStrategy === 'bytes' ? 2 ** 14 : 1000 } = { ...readableStrategy };\n        const { ['highWaterMark']: writableHighWaterMark = queueingStrategy === 'bytes' ? 2 ** 14 : 1000 } = { ...writableStrategy };\n        this['readable'] = new ReadableStream({\n            ['cancel']: () => { this._builder.clear(); },\n            ['pull']: (c) => { this._maybeFlush(this._builder, this._controller = c); },\n            ['start']: (c) => { this._maybeFlush(this._builder, this._controller = c); },\n        }, {\n            'highWaterMark': readableHighWaterMark,\n            'size': queueingStrategy !== 'bytes' ? chunkLength : chunkByteLength,\n        });\n        this['writable'] = new WritableStream({\n            ['abort']: () => { this._builder.clear(); },\n            ['write']: () => { this._maybeFlush(this._builder, this._controller); },\n            ['close']: () => { this._maybeFlush(this._builder.finish(), this._controller); },\n        }, {\n            'highWaterMark': writableHighWaterMark,\n            'size': (value) => this._writeValueAndReturnChunkSize(value),\n        });\n    }\n    _writeValueAndReturnChunkSize(value) {\n        const bufferedSize = this._bufferedSize;\n        this._bufferedSize = this._getSize(this._builder.append(value));\n        return this._bufferedSize - bufferedSize;\n    }\n    _maybeFlush(builder, controller) {\n        if (controller === null) {\n            return;\n        }\n        if (this._bufferedSize >= controller.desiredSize) {\n            ++this._numChunks && this._enqueue(controller, builder.toVector());\n        }\n        if (builder.finished) {\n            if (builder.length > 0 || this._numChunks === 0) {\n                ++this._numChunks && this._enqueue(controller, builder.toVector());\n            }\n            if (!this._finished && (this._finished = true)) {\n                this._enqueue(controller, null);\n            }\n        }\n    }\n    _enqueue(controller, chunk) {\n        this._bufferedSize = 0;\n        this._controller = null;\n        chunk === null ? controller.close() : controller.enqueue(chunk);\n    }\n}\n/** @ignore */ const chunkLength = (chunk) => chunk.length;\n/** @ignore */ const chunkByteLength = (chunk) => chunk.byteLength;\n\n//# sourceMappingURL=builder.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { DictionaryVector } from '../vector/dictionary';\n/** @ignore */\nexport class Value {\n    eq(other) {\n        if (!(other instanceof Value)) {\n            other = new Literal(other);\n        }\n        return new Equals(this, other);\n    }\n    le(other) {\n        if (!(other instanceof Value)) {\n            other = new Literal(other);\n        }\n        return new LTeq(this, other);\n    }\n    ge(other) {\n        if (!(other instanceof Value)) {\n            other = new Literal(other);\n        }\n        return new GTeq(this, other);\n    }\n    lt(other) {\n        return new Not(this.ge(other));\n    }\n    gt(other) {\n        return new Not(this.le(other));\n    }\n    ne(other) {\n        return new Not(this.eq(other));\n    }\n}\n/** @ignore */\nexport class Literal extends Value {\n    constructor(v) {\n        super();\n        this.v = v;\n    }\n}\n/** @ignore */\nexport class Col extends Value {\n    constructor(name) {\n        super();\n        this.name = name;\n    }\n    bind(batch) {\n        if (!this.colidx) {\n            // Assume column index doesn't change between calls to bind\n            //this.colidx = cols.findIndex(v => v.name.indexOf(this.name) != -1);\n            this.colidx = -1;\n            const fields = batch.schema.fields;\n            for (let idx = -1; ++idx < fields.length;) {\n                if (fields[idx].name === this.name) {\n                    this.colidx = idx;\n                    break;\n                }\n            }\n            if (this.colidx < 0) {\n                throw new Error(`Failed to bind Col \"${this.name}\"`);\n            }\n        }\n        const vec = this.vector = batch.getChildAt(this.colidx);\n        return (idx) => vec.get(idx);\n    }\n}\n/** @ignore */\nexport class Predicate {\n    and(...expr) { return new And(this, ...expr); }\n    or(...expr) { return new Or(this, ...expr); }\n    not() { return new Not(this); }\n}\n/** @ignore */\nexport class ComparisonPredicate extends Predicate {\n    constructor(left, right) {\n        super();\n        this.left = left;\n        this.right = right;\n    }\n    bind(batch) {\n        if (this.left instanceof Literal) {\n            if (this.right instanceof Literal) {\n                return this._bindLitLit(batch, this.left, this.right);\n            }\n            else { // right is a Col\n                return this._bindLitCol(batch, this.left, this.right);\n            }\n        }\n        else { // left is a Col\n            if (this.right instanceof Literal) {\n                return this._bindColLit(batch, this.left, this.right);\n            }\n            else { // right is a Col\n                return this._bindColCol(batch, this.left, this.right);\n            }\n        }\n    }\n}\n/** @ignore */\nexport class CombinationPredicate extends Predicate {\n    constructor(...children) {\n        super();\n        this.children = children;\n    }\n}\n// add children to prototype so it doesn't get mangled in es2015/umd\nCombinationPredicate.prototype.children = Object.freeze([]); // freeze for safety\n/** @ignore */\nexport class And extends CombinationPredicate {\n    constructor(...children) {\n        // Flatten any Ands\n        children = children.reduce((accum, p) => {\n            return accum.concat(p instanceof And ? p.children : p);\n        }, []);\n        super(...children);\n    }\n    bind(batch) {\n        const bound = this.children.map((p) => p.bind(batch));\n        return (idx, batch) => bound.every((p) => p(idx, batch));\n    }\n}\n/** @ignore */\nexport class Or extends CombinationPredicate {\n    constructor(...children) {\n        // Flatten any Ors\n        children = children.reduce((accum, p) => {\n            return accum.concat(p instanceof Or ? p.children : p);\n        }, []);\n        super(...children);\n    }\n    bind(batch) {\n        const bound = this.children.map((p) => p.bind(batch));\n        return (idx, batch) => bound.some((p) => p(idx, batch));\n    }\n}\n/** @ignore */\nexport class Equals extends ComparisonPredicate {\n    _bindLitLit(_batch, left, right) {\n        const rtrn = left.v == right.v;\n        return () => rtrn;\n    }\n    _bindColCol(batch, left, right) {\n        const left_func = left.bind(batch);\n        const right_func = right.bind(batch);\n        return (idx, batch) => left_func(idx, batch) == right_func(idx, batch);\n    }\n    _bindColLit(batch, col, lit) {\n        const col_func = col.bind(batch);\n        if (col.vector instanceof DictionaryVector) {\n            let key;\n            const vector = col.vector;\n            if (vector.dictionary !== this.lastDictionary) {\n                key = vector.reverseLookup(lit.v);\n                this.lastDictionary = vector.dictionary;\n                this.lastKey = key;\n            }\n            else {\n                key = this.lastKey;\n            }\n            if (key === -1) {\n                // the value doesn't exist in the dictionary - always return\n                // false\n                // TODO: special-case of PredicateFunc that encapsulates this\n                // \"always false\" behavior. That way filtering operations don't\n                // have to bother checking\n                return () => false;\n            }\n            else {\n                return (idx) => {\n                    return vector.getKey(idx) === key;\n                };\n            }\n        }\n        else {\n            return (idx, cols) => col_func(idx, cols) == lit.v;\n        }\n    }\n    _bindLitCol(batch, lit, col) {\n        // Equals is commutative\n        return this._bindColLit(batch, col, lit);\n    }\n}\n/** @ignore */\nexport class LTeq extends ComparisonPredicate {\n    _bindLitLit(_batch, left, right) {\n        const rtrn = left.v <= right.v;\n        return () => rtrn;\n    }\n    _bindColCol(batch, left, right) {\n        const left_func = left.bind(batch);\n        const right_func = right.bind(batch);\n        return (idx, cols) => left_func(idx, cols) <= right_func(idx, cols);\n    }\n    _bindColLit(batch, col, lit) {\n        const col_func = col.bind(batch);\n        return (idx, cols) => col_func(idx, cols) <= lit.v;\n    }\n    _bindLitCol(batch, lit, col) {\n        const col_func = col.bind(batch);\n        return (idx, cols) => lit.v <= col_func(idx, cols);\n    }\n}\n/** @ignore */\nexport class GTeq extends ComparisonPredicate {\n    _bindLitLit(_batch, left, right) {\n        const rtrn = left.v >= right.v;\n        return () => rtrn;\n    }\n    _bindColCol(batch, left, right) {\n        const left_func = left.bind(batch);\n        const right_func = right.bind(batch);\n        return (idx, cols) => left_func(idx, cols) >= right_func(idx, cols);\n    }\n    _bindColLit(batch, col, lit) {\n        const col_func = col.bind(batch);\n        return (idx, cols) => col_func(idx, cols) >= lit.v;\n    }\n    _bindLitCol(batch, lit, col) {\n        const col_func = col.bind(batch);\n        return (idx, cols) => lit.v >= col_func(idx, cols);\n    }\n}\n/** @ignore */\nexport class Not extends Predicate {\n    constructor(child) {\n        super();\n        this.child = child;\n    }\n    bind(batch) {\n        const func = this.child.bind(batch);\n        return (idx, batch) => !func(idx, batch);\n    }\n}\n/** @ignore */\nexport class CustomPredicate extends Predicate {\n    constructor(next, bind_) {\n        super();\n        this.next = next;\n        this.bind_ = bind_;\n    }\n    bind(batch) {\n        this.bind_(batch);\n        return this.next;\n    }\n}\nexport function lit(v) { return new Literal(v); }\nexport function col(n) { return new Col(n); }\nexport function and(...p) { return new And(...p); }\nexport function or(...p) { return new Or(...p); }\nexport function custom(next, bind) {\n    return new CustomPredicate(next, bind);\n}\n\n//# sourceMappingURL=predicate.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Table } from '../table';\nimport { IntVector } from '../vector/int';\nimport { Field, Schema } from '../schema';\nimport { Col } from './predicate';\nimport { RecordBatch } from '../recordbatch';\nimport { DataType } from '../type';\nTable.prototype.countBy = function (name) { return new DataFrame(this.chunks).countBy(name); };\nTable.prototype.scan = function (next, bind) { return new DataFrame(this.chunks).scan(next, bind); };\nTable.prototype.scanReverse = function (next, bind) { return new DataFrame(this.chunks).scanReverse(next, bind); };\nTable.prototype.filter = function (predicate) { return new DataFrame(this.chunks).filter(predicate); };\nexport class DataFrame extends Table {\n    filter(predicate) {\n        return new FilteredDataFrame(this.chunks, predicate);\n    }\n    scan(next, bind) {\n        const batches = this.chunks, numBatches = batches.length;\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            if (bind) {\n                bind(batch);\n            }\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                next(index, batch);\n            }\n        }\n    }\n    scanReverse(next, bind) {\n        const batches = this.chunks, numBatches = batches.length;\n        for (let batchIndex = numBatches; --batchIndex >= 0;) {\n            // load batches\n            const batch = batches[batchIndex];\n            if (bind) {\n                bind(batch);\n            }\n            // yield all indices\n            for (let index = batch.length; --index >= 0;) {\n                next(index, batch);\n            }\n        }\n    }\n    countBy(name) {\n        const batches = this.chunks, numBatches = batches.length;\n        const count_by = typeof name === 'string' ? new Col(name) : name;\n        // Assume that all dictionary batches are deltas, which means that the\n        // last record batch has the most complete dictionary\n        count_by.bind(batches[numBatches - 1]);\n        const vector = count_by.vector;\n        if (!DataType.isDictionary(vector.type)) {\n            throw new Error('countBy currently only supports dictionary-encoded columns');\n        }\n        const countByteLength = Math.ceil(Math.log(vector.length) / Math.log(256));\n        const CountsArrayType = countByteLength == 4 ? Uint32Array :\n            countByteLength >= 2 ? Uint16Array : Uint8Array;\n        const counts = new CountsArrayType(vector.dictionary.length);\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            // rebind the countBy Col\n            count_by.bind(batch);\n            const keys = count_by.vector.indices;\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                let key = keys.get(index);\n                if (key !== null) {\n                    counts[key]++;\n                }\n            }\n        }\n        return new CountByResult(vector.dictionary, IntVector.from(counts));\n    }\n}\n/** @ignore */\nexport class CountByResult extends Table {\n    constructor(values, counts) {\n        const schema = new Schema([\n            new Field('values', values.type),\n            new Field('counts', counts.type)\n        ]);\n        super(new RecordBatch(schema, counts.length, [values, counts]));\n    }\n    toJSON() {\n        const values = this.getColumnAt(0);\n        const counts = this.getColumnAt(1);\n        const result = {};\n        for (let i = -1; ++i < this.length;) {\n            result[values.get(i)] = counts.get(i);\n        }\n        return result;\n    }\n}\n/** @ignore */\nexport class FilteredDataFrame extends DataFrame {\n    constructor(batches, predicate) {\n        super(batches);\n        this._predicate = predicate;\n    }\n    scan(next, bind) {\n        // inlined version of this:\n        // this.parent.scan((idx, columns) => {\n        //     if (this.predicate(idx, columns)) next(idx, columns);\n        // });\n        const batches = this._chunks;\n        const numBatches = batches.length;\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            const predicate = this._predicate.bind(batch);\n            let isBound = false;\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                if (predicate(index, batch)) {\n                    // bind batches lazily - if predicate doesn't match anything\n                    // in the batch we don't need to call bind on the batch\n                    if (bind && !isBound) {\n                        bind(batch);\n                        isBound = true;\n                    }\n                    next(index, batch);\n                }\n            }\n        }\n    }\n    scanReverse(next, bind) {\n        const batches = this._chunks;\n        const numBatches = batches.length;\n        for (let batchIndex = numBatches; --batchIndex >= 0;) {\n            // load batches\n            const batch = batches[batchIndex];\n            const predicate = this._predicate.bind(batch);\n            let isBound = false;\n            // yield all indices\n            for (let index = batch.length; --index >= 0;) {\n                if (predicate(index, batch)) {\n                    // bind batches lazily - if predicate doesn't match anything\n                    // in the batch we don't need to call bind on the batch\n                    if (bind && !isBound) {\n                        bind(batch);\n                        isBound = true;\n                    }\n                    next(index, batch);\n                }\n            }\n        }\n    }\n    count() {\n        // inlined version of this:\n        // let sum = 0;\n        // this.parent.scan((idx, columns) => {\n        //     if (this.predicate(idx, columns)) ++sum;\n        // });\n        // return sum;\n        let sum = 0;\n        const batches = this._chunks;\n        const numBatches = batches.length;\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            const predicate = this._predicate.bind(batch);\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                if (predicate(index, batch)) {\n                    ++sum;\n                }\n            }\n        }\n        return sum;\n    }\n    *[Symbol.iterator]() {\n        // inlined version of this:\n        // this.parent.scan((idx, columns) => {\n        //     if (this.predicate(idx, columns)) next(idx, columns);\n        // });\n        const batches = this._chunks;\n        const numBatches = batches.length;\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            // TODO: bind batches lazily\n            // If predicate doesn't match anything in the batch we don't need\n            // to bind the callback\n            const predicate = this._predicate.bind(batch);\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                if (predicate(index, batch)) {\n                    yield batch.get(index);\n                }\n            }\n        }\n    }\n    filter(predicate) {\n        return new FilteredDataFrame(this._chunks, this._predicate.and(predicate));\n    }\n    countBy(name) {\n        const batches = this._chunks, numBatches = batches.length;\n        const count_by = typeof name === 'string' ? new Col(name) : name;\n        // Assume that all dictionary batches are deltas, which means that the\n        // last record batch has the most complete dictionary\n        count_by.bind(batches[numBatches - 1]);\n        const vector = count_by.vector;\n        if (!DataType.isDictionary(vector.type)) {\n            throw new Error('countBy currently only supports dictionary-encoded columns');\n        }\n        const countByteLength = Math.ceil(Math.log(vector.length) / Math.log(256));\n        const CountsArrayType = countByteLength == 4 ? Uint32Array :\n            countByteLength >= 2 ? Uint16Array : Uint8Array;\n        const counts = new CountsArrayType(vector.dictionary.length);\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            const predicate = this._predicate.bind(batch);\n            // rebind the countBy Col\n            count_by.bind(batch);\n            const keys = count_by.vector.indices;\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                let key = keys.get(index);\n                if (key !== null && predicate(index, batch)) {\n                    counts[key]++;\n                }\n            }\n        }\n        return new CountByResult(vector.dictionary, IntVector.from(counts));\n    }\n}\n\n//# sourceMappingURL=dataframe.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport streamAdapters from './io/adapters';\nimport { Builder } from './builder/index';\nimport { RecordBatchReader } from './ipc/reader';\nimport { RecordBatchWriter } from './ipc/writer';\nimport { toDOMStream } from './io/whatwg/iterable';\nimport { builderThroughDOMStream } from './io/whatwg/builder';\nimport { recordBatchReaderThroughDOMStream } from './io/whatwg/reader';\nimport { recordBatchWriterThroughDOMStream } from './io/whatwg/writer';\nstreamAdapters.toDOMStream = toDOMStream;\nBuilder['throughDOM'] = builderThroughDOMStream;\nRecordBatchReader['throughDOM'] = recordBatchReaderThroughDOMStream;\nRecordBatchWriter['throughDOM'] = recordBatchWriterThroughDOMStream;\nexport { ArrowType, DateUnit, IntervalUnit, MessageHeader, MetadataVersion, Precision, TimeUnit, Type, UnionMode, BufferType, Data, DataType, Null, Bool, Int, Int8, Int16, Int32, Int64, Uint8, Uint16, Uint32, Uint64, Float, Float16, Float32, Float64, Utf8, Binary, FixedSizeBinary, Date_, DateDay, DateMillisecond, Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond, Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond, Decimal, List, Struct, Union, DenseUnion, SparseUnion, Dictionary, Interval, IntervalDayTime, IntervalYearMonth, FixedSizeList, Map_, Table, Column, Schema, Field, Visitor, Vector, BaseVector, BinaryVector, BoolVector, Chunked, DateVector, DateDayVector, DateMillisecondVector, DecimalVector, DictionaryVector, FixedSizeBinaryVector, FixedSizeListVector, FloatVector, Float16Vector, Float32Vector, Float64Vector, IntervalVector, IntervalDayTimeVector, IntervalYearMonthVector, IntVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector, ListVector, MapVector, NullVector, StructVector, TimestampVector, TimestampSecondVector, TimestampMillisecondVector, TimestampMicrosecondVector, TimestampNanosecondVector, TimeVector, TimeSecondVector, TimeMillisecondVector, TimeMicrosecondVector, TimeNanosecondVector, UnionVector, DenseUnionVector, SparseUnionVector, Utf8Vector, ByteStream, AsyncByteStream, AsyncByteQueue, RecordBatchReader, RecordBatchFileReader, RecordBatchStreamReader, AsyncRecordBatchFileReader, AsyncRecordBatchStreamReader, RecordBatchWriter, RecordBatchFileWriter, RecordBatchStreamWriter, RecordBatchJSONWriter, MessageReader, AsyncMessageReader, JSONMessageReader, Message, RecordBatch, DataFrame, FilteredDataFrame, CountByResult, predicate, util, Builder, BinaryBuilder, BoolBuilder, DateBuilder, DateDayBuilder, DateMillisecondBuilder, DecimalBuilder, DictionaryBuilder, FixedSizeBinaryBuilder, FixedSizeListBuilder, FloatBuilder, Float16Builder, Float32Builder, Float64Builder, IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder, IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder, ListBuilder, MapBuilder, NullBuilder, StructBuilder, TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder, TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder, UnionBuilder, DenseUnionBuilder, SparseUnionBuilder, Utf8Builder, } from './Arrow';\n\n//# sourceMappingURL=Arrow.dom.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { toUint8Array } from '../../util/buffer';\nimport { isIterable, isAsyncIterable } from '../../util/compat';\n/** @ignore */\nexport function toDOMStream(source, options) {\n    if (isAsyncIterable(source)) {\n        return asyncIterableAsReadableDOMStream(source, options);\n    }\n    if (isIterable(source)) {\n        return iterableAsReadableDOMStream(source, options);\n    }\n    /* istanbul ignore next */\n    throw new Error(`toDOMStream() must be called with an Iterable or AsyncIterable`);\n}\n/** @ignore */\nfunction iterableAsReadableDOMStream(source, options) {\n    let it = null;\n    const bm = (options && options.type === 'bytes') || false;\n    const hwm = options && options.highWaterMark || (2 ** 24);\n    return new ReadableStream({\n        ...options,\n        start(controller) { next(controller, it || (it = source[Symbol.iterator]())); },\n        pull(controller) { it ? (next(controller, it)) : controller.close(); },\n        cancel() { (it && (it.return && it.return()) || true) && (it = null); }\n    }, { highWaterMark: bm ? hwm : undefined, ...options });\n    function next(controller, it) {\n        let buf;\n        let r = null;\n        let size = controller.desiredSize || null;\n        while (!(r = it.next(bm ? size : null)).done) {\n            if (ArrayBuffer.isView(r.value) && (buf = toUint8Array(r.value))) {\n                size != null && bm && (size = size - buf.byteLength + 1);\n                r.value = buf;\n            }\n            controller.enqueue(r.value);\n            if (size != null && --size <= 0) {\n                return;\n            }\n        }\n        controller.close();\n    }\n}\n/** @ignore */\nfunction asyncIterableAsReadableDOMStream(source, options) {\n    let it = null;\n    const bm = (options && options.type === 'bytes') || false;\n    const hwm = options && options.highWaterMark || (2 ** 24);\n    return new ReadableStream({\n        ...options,\n        async start(controller) { await next(controller, it || (it = source[Symbol.asyncIterator]())); },\n        async pull(controller) { it ? (await next(controller, it)) : controller.close(); },\n        async cancel() { (it && (it.return && await it.return()) || true) && (it = null); },\n    }, { highWaterMark: bm ? hwm : undefined, ...options });\n    async function next(controller, it) {\n        let buf;\n        let r = null;\n        let size = controller.desiredSize || null;\n        while (!(r = await it.next(bm ? size : null)).done) {\n            if (ArrayBuffer.isView(r.value) && (buf = toUint8Array(r.value))) {\n                size != null && bm && (size = size - buf.byteLength + 1);\n                r.value = buf;\n            }\n            controller.enqueue(r.value);\n            if (size != null && --size <= 0) {\n                return;\n            }\n        }\n        controller.close();\n    }\n}\n\n//# sourceMappingURL=iterable.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { AsyncByteQueue } from '../../io/stream';\nimport { RecordBatchReader } from '../../ipc/reader';\n/** @ignore */\nexport function recordBatchReaderThroughDOMStream(writableStrategy, readableStrategy) {\n    const queue = new AsyncByteQueue();\n    let reader = null;\n    const readable = new ReadableStream({\n        async cancel() { await queue.close(); },\n        async start(controller) { await next(controller, reader || (reader = await open())); },\n        async pull(controller) { reader ? await next(controller, reader) : controller.close(); }\n    });\n    return { writable: new WritableStream(queue, { 'highWaterMark': 2 ** 14, ...writableStrategy }), readable };\n    async function open() {\n        return await (await RecordBatchReader.from(queue)).open(readableStrategy);\n    }\n    async function next(controller, reader) {\n        let size = controller.desiredSize;\n        let r = null;\n        while (!(r = await reader.next()).done) {\n            controller.enqueue(r.value);\n            if (size != null && --size <= 0) {\n                return;\n            }\n        }\n        controller.close();\n    }\n}\n\n//# sourceMappingURL=reader.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { AsyncByteStream } from '../../io/stream';\n/** @ignore */\nexport function recordBatchWriterThroughDOMStream(writableStrategy, readableStrategy) {\n    const writer = new this(writableStrategy);\n    const reader = new AsyncByteStream(writer);\n    const readable = new ReadableStream({\n        type: 'bytes',\n        async cancel() { await reader.cancel(); },\n        async pull(controller) { await next(controller); },\n        async start(controller) { await next(controller); },\n    }, { 'highWaterMark': 2 ** 14, ...readableStrategy });\n    return { writable: new WritableStream(writer, writableStrategy), readable };\n    async function next(controller) {\n        let buf = null;\n        let size = controller.desiredSize;\n        while (buf = await reader.read(size || null)) {\n            controller.enqueue(buf);\n            if (size != null && (size -= buf.byteLength) <= 0) {\n                return;\n            }\n        }\n        controller.close();\n    }\n}\n\n//# sourceMappingURL=writer.mjs.map\n","/**\n * @license\n * Copyright 2018-2019 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Table, Type } from \"apache-arrow\";\nexport class ArrowTable {\n    constructor(dataBuffer, indexBuffer, columnsBuffer, styler) {\n        this.getCell = (rowIndex, columnIndex) => {\n            const isBlankCell = rowIndex < this.headerRows && columnIndex < this.headerColumns;\n            const isIndexCell = rowIndex >= this.headerRows && columnIndex < this.headerColumns;\n            const isColumnsCell = rowIndex < this.headerRows && columnIndex >= this.headerColumns;\n            if (isBlankCell) {\n                const classNames = [\"blank\"];\n                if (columnIndex > 0) {\n                    classNames.push(\"level\" + rowIndex);\n                }\n                return {\n                    type: \"blank\",\n                    classNames: classNames.join(\" \"),\n                    content: \"\",\n                };\n            }\n            else if (isColumnsCell) {\n                const dataColumnIndex = columnIndex - this.headerColumns;\n                const classNames = [\n                    \"col_heading\",\n                    \"level\" + rowIndex,\n                    \"col\" + dataColumnIndex,\n                ];\n                return {\n                    type: \"columns\",\n                    classNames: classNames.join(\" \"),\n                    content: this.getContent(this.columnsTable, dataColumnIndex, rowIndex),\n                };\n            }\n            else if (isIndexCell) {\n                const dataRowIndex = rowIndex - this.headerRows;\n                const classNames = [\n                    \"row_heading\",\n                    \"level\" + columnIndex,\n                    \"row\" + dataRowIndex,\n                ];\n                return {\n                    type: \"index\",\n                    id: `T_${this.uuid}level${columnIndex}_row${dataRowIndex}`,\n                    classNames: classNames.join(\" \"),\n                    content: this.getContent(this.indexTable, dataRowIndex, columnIndex),\n                };\n            }\n            else {\n                const dataRowIndex = rowIndex - this.headerRows;\n                const dataColumnIndex = columnIndex - this.headerColumns;\n                const classNames = [\n                    \"data\",\n                    \"row\" + dataRowIndex,\n                    \"col\" + dataColumnIndex,\n                ];\n                const content = this.styler\n                    ? this.getContent(this.styler.displayValuesTable, dataRowIndex, dataColumnIndex)\n                    : this.getContent(this.dataTable, dataRowIndex, dataColumnIndex);\n                return {\n                    type: \"data\",\n                    id: `T_${this.uuid}row${dataRowIndex}_col${dataColumnIndex}`,\n                    classNames: classNames.join(\" \"),\n                    content,\n                };\n            }\n        };\n        this.getContent = (table, rowIndex, columnIndex) => {\n            const column = table.getColumnAt(columnIndex);\n            if (column === null) {\n                return \"\";\n            }\n            const columnTypeId = this.getColumnTypeId(table, columnIndex);\n            switch (columnTypeId) {\n                case Type.Timestamp: {\n                    return this.nanosToDate(column.get(rowIndex));\n                }\n                default: {\n                    return column.get(rowIndex);\n                }\n            }\n        };\n        this.dataTable = Table.from(dataBuffer);\n        this.indexTable = Table.from(indexBuffer);\n        this.columnsTable = Table.from(columnsBuffer);\n        this.styler = styler\n            ? {\n                caption: styler.get(\"caption\"),\n                displayValuesTable: Table.from(styler.get(\"displayValues\")),\n                styles: styler.get(\"styles\"),\n                uuid: styler.get(\"uuid\"),\n            }\n            : undefined;\n    }\n    get rows() {\n        return this.indexTable.length + this.columnsTable.numCols;\n    }\n    get columns() {\n        return this.indexTable.numCols + this.columnsTable.length;\n    }\n    get headerRows() {\n        return this.rows - this.dataRows;\n    }\n    get headerColumns() {\n        return this.columns - this.dataColumns;\n    }\n    get dataRows() {\n        return this.dataTable.length;\n    }\n    get dataColumns() {\n        return this.dataTable.numCols;\n    }\n    get uuid() {\n        return this.styler && this.styler.uuid;\n    }\n    get caption() {\n        return this.styler && this.styler.caption;\n    }\n    get styles() {\n        return this.styler && this.styler.styles;\n    }\n    get table() {\n        return this.dataTable;\n    }\n    get index() {\n        return this.indexTable;\n    }\n    get columnTable() {\n        return this.columnsTable;\n    }\n    /**\n     * Returns apache-arrow specific typeId of column.\n     */\n    getColumnTypeId(table, columnIndex) {\n        return table.schema.fields[columnIndex].type.typeId;\n    }\n    nanosToDate(nanos) {\n        return new Date(nanos / 1e6);\n    }\n}\n","/**\n * @license\n * Copyright 2018-2020 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Safari doesn't support the EventTarget class, so we use a shim.\nimport { EventTarget } from \"event-target-shim\";\nimport { ArrowTable } from \"./ArrowTable\";\n/** Messages from Component -> Streamlit */\nvar ComponentMessageType;\n(function (ComponentMessageType) {\n    // A component sends this message when it's ready to receive messages\n    // from Streamlit. Streamlit won't send any messages until it gets this.\n    // Data: { apiVersion: number }\n    ComponentMessageType[\"COMPONENT_READY\"] = \"streamlit:componentReady\";\n    // The component has a new widget value. Send it back to Streamlit, which\n    // will then re-run the app.\n    // Data: { value: any }\n    ComponentMessageType[\"SET_COMPONENT_VALUE\"] = \"streamlit:setComponentValue\";\n    // The component has a new height for its iframe.\n    // Data: { height: number }\n    ComponentMessageType[\"SET_FRAME_HEIGHT\"] = \"streamlit:setFrameHeight\";\n})(ComponentMessageType || (ComponentMessageType = {}));\n/**\n * Streamlit communication API.\n *\n * Components can send data to Streamlit via the functions defined here,\n * and receive data from Streamlit via the `events` property.\n */\nexport class Streamlit {\n}\n/**\n * The Streamlit component API version we're targetting.\n * There's currently only 1!\n */\nStreamlit.API_VERSION = 1;\nStreamlit.RENDER_EVENT = \"streamlit:render\";\n/** Dispatches events received from Streamlit. */\nStreamlit.events = new EventTarget();\nStreamlit.registeredMessageListener = false;\n/**\n * Tell Streamlit that the component is ready to start receiving data.\n * Streamlit will defer emitting RENDER events until it receives the\n * COMPONENT_READY message.\n */\nStreamlit.setComponentReady = () => {\n    if (!Streamlit.registeredMessageListener) {\n        // Register for message events if we haven't already\n        window.addEventListener(\"message\", Streamlit.onMessageEvent);\n        Streamlit.registeredMessageListener = true;\n    }\n    Streamlit.sendBackMsg(ComponentMessageType.COMPONENT_READY, {\n        apiVersion: Streamlit.API_VERSION,\n    });\n};\n/**\n * Report the component's height to Streamlit.\n * This should be called every time the component changes its DOM - that is,\n * when it's first loaded, and any time it updates.\n */\nStreamlit.setFrameHeight = (height) => {\n    if (height === undefined) {\n        // `height` is optional. If undefined, it defaults to scrollHeight,\n        // which is the entire height of the element minus its border,\n        // scrollbar, and margin.\n        height = document.body.scrollHeight;\n    }\n    if (height === Streamlit.lastFrameHeight) {\n        // Don't bother updating if our height hasn't changed.\n        return;\n    }\n    Streamlit.lastFrameHeight = height;\n    Streamlit.sendBackMsg(ComponentMessageType.SET_FRAME_HEIGHT, { height });\n};\n/**\n * Set the component's value. This value will be returned to the Python\n * script, and the script will be re-run.\n *\n * For example:\n *\n * JavaScript:\n * Streamlit.setComponentValue(\"ahoy!\")\n *\n * Python:\n * value = st.my_component(...)\n * st.write(value) # -> \"ahoy!\"\n *\n * The value must be serializable into JSON.\n */\nStreamlit.setComponentValue = (value) => {\n    Streamlit.sendBackMsg(ComponentMessageType.SET_COMPONENT_VALUE, { value });\n};\n/** Receive a ForwardMsg from the Streamlit app */\nStreamlit.onMessageEvent = (event) => {\n    const type = event.data[\"type\"];\n    switch (type) {\n        case Streamlit.RENDER_EVENT:\n            Streamlit.onRenderMessage(event.data);\n            break;\n    }\n};\n/**\n * Handle an untyped Streamlit render event and redispatch it as a\n * StreamlitRenderEvent.\n */\nStreamlit.onRenderMessage = (data) => {\n    let args = data[\"args\"];\n    if (args == null) {\n        console.error(`Got null args in onRenderMessage. This should never happen`);\n        args = {};\n    }\n    // Parse our dataframe arguments with arrow, and merge them into our args dict\n    const dataframeArgs = data[\"dfs\"] && data[\"dfs\"].length > 0\n        ? Streamlit.argsDataframeToObject(data[\"dfs\"])\n        : {};\n    args = {\n        ...args,\n        ...dataframeArgs,\n    };\n    const disabled = Boolean(data[\"disabled\"]);\n    // Dispatch a render event!\n    const eventData = { disabled, args };\n    const event = new CustomEvent(Streamlit.RENDER_EVENT, {\n        detail: eventData,\n    });\n    Streamlit.events.dispatchEvent(event);\n};\nStreamlit.argsDataframeToObject = (argsDataframe) => {\n    const argsDataframeArrow = argsDataframe.map(({ key, value }) => [key, Streamlit.toArrowTable(value)]);\n    return Object.fromEntries(argsDataframeArrow);\n};\nStreamlit.toArrowTable = (df) => {\n    const { data, index, columns } = df.data;\n    return new ArrowTable(data, index, columns);\n};\n/** Post a message to the Streamlit app. */\nStreamlit.sendBackMsg = (type, data) => {\n    window.parent.postMessage({\n        isStreamlitMessage: true,\n        type: type,\n        ...data,\n    }, \"*\");\n};\n","<script lang=\"ts\">\n  import { onMount, afterUpdate, onDestroy } from \"svelte\";\n  import { Streamlit } from \"./streamlit\";\n  import type { RenderData } from \"./streamlit\";\n\n  /**\n   * Custom Streamlit component\n   */\n  export let component: any;\n\n  /**\n   * Set to false if you want `args` (the named dictionary of arguments passed\n   * from Python) to be passed as a dictionary to your component.\n   *\n   * Default is `true`.\n   */\n  export let spreadArgs: boolean = true;\n\n  // State\n  let renderData: RenderData;\n\n  //  Props passed to custom Streamlit components.\n  /** Named dictionary of arguments passed from Python.\n   *  Arguments will be passed directly if `spreadArgs=true`\n   */\n  let args: any;\n\n  /** The component's width. */\n  let width: number;\n\n  /**\n   * True if the component should be disabled.\n   * All components get disabled while the app is being re-run,\n   * and become re-enabled when the re-run has finished.\n   */\n  let disabled: boolean;\n\n  /**\n   * Streamlit is telling this component to redraw.\n   * We save the render data in State, so that it can be passed to the\n   * component.\n   */\n  const onRenderEvent = (event: Event): void => {\n    // Update our state with the newest render data\n    renderData = (event as CustomEvent<RenderData>).detail;\n    args = renderData.args;\n    disabled = renderData.disabled;\n  };\n\n  onMount((): void => {\n    // Set up event listeners, and signal to Streamlit that we're ready.\n    // We won't render the component until we receive the first RENDER_EVENT.\n    Streamlit.events.addEventListener(Streamlit.RENDER_EVENT, onRenderEvent);\n    Streamlit.setComponentReady();\n  });\n\n  onDestroy((): void => {\n    // Remove our `onRender` handler to Streamlit's render event.\n    Streamlit.events.removeEventListener(Streamlit.RENDER_EVENT, onRenderEvent);\n  });\n</script>\n\n<svelte:window bind:innerWidth={width} />\n<!-- Don't render until we've gotten our first RENDER_EVENT from Streamlit. -->\n{#if renderData}\n  {#if spreadArgs}\n    <svelte:component this={component} {...args} {disabled} {width} />\n  {:else}\n    <svelte:component this={component} {args} {disabled} {width} />\n  {/if}\n{/if}\n","import { onMount, afterUpdate } from \"svelte\";\nimport { Streamlit } from \"./streamlit\";\n/**\n * [Optional] Set Streamlit Svelte Lifecycle functions\n *\n * You are not required call this function on your Streamlit\n * component. If you decide not to call it, you should implement the\n * `onMount` and `afterUpdate` functions in your own component,\n * so that your plugin properly resizes.\n */\nexport const setStreamlitLifecycle = () => {\n    onMount(() => {\n        // Finally, tell Streamlit to update our initial height. We omit the\n        // `height` parameter here to have it default to our scrollHeight.\n        Streamlit.setFrameHeight();\n    });\n    afterUpdate(() => {\n        // We tell Streamlit to update our frameHeight after each update, in\n        // case it has changed. (This isn't strictly necessary for the example\n        // because our height stays fixed, but this is a low-cost function, so\n        // there's no harm in doing it redundantly.)\n        Streamlit.setFrameHeight();\n    });\n};\n","<script lang=\"ts\">\n  import { Streamlit, setStreamlitLifecycle } from \"./streamlit\";\n  setStreamlitLifecycle();\n\n  export let imageUrls: Array<string>;\n  export let height: number;\n\n  let selectedImageUrl: string;\n\n  function image_onclick(event: any) {\n    selectedImageUrl = event.srcElement.currentSrc;\n    Streamlit.setComponentValue(selectedImageUrl);\n  }\n</script>\n\n\n<div class=\"scroller\">\n  {#each imageUrls as imageUrl}\n      <img src={imageUrl} id={imageUrl} alt=\"\" style=\"height: {height}px;\" on:click={image_onclick}>\n  {/each}\n</div>\n\n\n<style>\n  .scroller {\n    min-height: 100px;\n    overflow-x: scroll;\n    overflow-y: hidden;\n    white-space: nowrap;\n  }\n\timg { \n    display: inline-block;\n    padding: 1%;\n    border-radius: 20px;\n    opacity: 0.9; \n    transition: all .2s; \n  }\n\n\timg:hover { \n    opacity: 1; \n    transform: scale(1.05); \n    cursor: pointer;\n  }\n</style>\n\n\n\n\n\n\n","import { WithStreamlitConnection } from \"./streamlit\";\nimport ImageGallery from \"./ImageGallery.svelte\";\n// \"WithStreamlitConnection\" is a wrapper component. It bootstraps the\n// connection between your component and the Streamlit app, and handles\n// passing arguments from Python -> Component.\n//\n// You don't need to edit withStreamlitConnection (but you're welcome to!).\nconst imageGallery = new WithStreamlitConnection({\n    target: document.body,\n    props: {\n        /**\n         * Custom Streamlit component\n         */\n        component: ImageGallery,\n        /**\n         * Set to false if you want `args` (the named dictionary of arguments passed\n         * from Python) to be passed as a dictionary to your component.\n         *\n         * Default is `true`.\n         */\n        spreadArgs: true,\n    },\n});\nexport default ImageGallery;\n"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","current_component","src_url_equal","element_src","url","document","createElement","href","append_styles","target","style_sheet_id","styles","append_styles_to","node","root","getRootNode","ownerDocument","host","get_root_for_style","getElementById","style","element","id","textContent","appendChild","append","head","sheet","append_stylesheet","insert","anchor","insertBefore","detach","parentNode","removeChild","name","empty","data","createTextNode","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_style","key","important","removeProperty","setProperty","construct_svelte_component","component","props","set_current_component","get_current_component","Error","onMount","$$","on_mount","push","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","seen_callbacks","Set","flushidx","flush","saved_component","length","update","e","pop","i","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","d","create_component","mount_component","customElement","m","new_on_destroy","map","filter","on_destroy","destroy_component","detaching","filtered","targets","indexOf","flush_render_callbacks","make_dirty","then","fill","init","instance","create_fragment","not_equal","parent_component","bound","on_disconnect","context","Map","callbacks","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","type","index","splice","$$props","obj","$$set","keys","privateData","WeakMap","wrappers","pd","retv","get","console","assert","setCancelFlag","passiveListener","cancelable","canceled","preventDefault","error","Event","eventTarget","set","eventPhase","currentTarget","stopped","immediateStopped","timeStamp","Date","now","defineProperty","enumerable","defineRedirectDescriptor","configurable","defineCallDescriptor","apply","arguments","getWrapper","proto","prototype","wrapper","BaseEvent","CustomEvent","call","constructor","writable","isFunc","getOwnPropertyDescriptor","defineWrapper","getPrototypeOf","isStopped","setPassiveListener","NONE","CAPTURING_PHASE","AT_TARGET","BUBBLING_PHASE","stopPropagation","stopImmediatePropagation","bubbles","Boolean","defaultPrevented","composed","srcElement","cancelBubble","returnValue","window","setPrototypeOf","listenersMap","isObject","x","getListeners","listeners","TypeError","defineEventAttribute","eventTargetPrototype","eventName","listenerType","listener","next","prev","newNode","passive","once","defineEventAttributeDescriptor","defineCustomEventTarget","eventNames","CustomEventTarget","EventTarget","isArray","types","optionsIsObj","capture","undefined","wrappedEvent","wrapEvent","err","handleEvent","setEventPhase","setCurrentTarget","flatbuffers","inRange","min","max","ToDictionary","SIZEOF_SHORT","SIZEOF_INT","FILE_IDENTIFIER_LENGTH","Encoding","UTF8_BYTES","UTF16_STRING","int32","Int32Array","float32","Float32Array","buffer","float64","Float64Array","isLittleEndian","Uint16Array","Uint8Array","Long","low","high","ZERO","toFloat64","equals","other","Builder","opt_initial_size","initial_size","bb","ByteBuffer","allocate","space","minalign","vtable","vtable_in_use","isNested","object_start","vtables","vector_num_elems","force_defaults","capacity","forceDefaults","dataBuffer","asUint8Array","bytes","subarray","position","offset","prep","size","additional_bytes","align_size","old_buf_size","growByteBuffer","pad","byte_size","writeInt8","writeInt16","writeInt32","writeInt64","writeFloat32","writeFloat64","addInt8","addInt16","addInt32","addInt64","addFloat32","addFloat64","addFieldInt8","voffset","defaultValue","slot","addFieldInt16","addFieldInt32","addFieldInt64","addFieldFloat32","addFieldFloat64","addFieldOffset","addOffset","addFieldStruct","nested","notNested","new_buf_size","nbb","setPosition","startObject","numfields","endObject","vtableloc","trimmed_size","len","existing_vtable","vt1","outer_loop","vt2","readInt16","j","finish","root_table","opt_file_identifier","file_identifier","charCodeAt","requiredField","table","field","table_start","vtable_start","readInt32","startVector","elem_size","num_elems","alignment","endVector","createString","s","utf8","codePoint","createLong","bytes_","position_","readInt8","readUint8","readUint16","readUint32","readInt64","readUint64","readFloat32","readFloat64","writeUint8","writeUint16","writeUint32","writeUint64","getBufferIdentifier","result","String","fromCharCode","__offset","bb_pos","vtable_offset","__union","t","__string","opt_encoding","__indirect","__vector","__vector_len","__has_identifier","ident","Stream","tokens","slice","endOfStream","read","shift","prepend","token","unshift","decoderError","fatal","opt_code_point","TextDecoder","encoding","toLowerCase","_streaming","_BOMseen","_decoder","_fatal","_ignoreBOM","TextEncoder","_encoder","_options","UTF8Decoder","utf8_code_point","utf8_bytes_seen","utf8_bytes_needed","utf8_lower_boundary","utf8_upper_boundary","stream","bite","code_point","UTF8Encoder","count","temp","TextDecoder$1","decode","input","ArrayBuffer","byteOffset","byteLength","input_stream","code_points","cp","codePointsToString","TextEncoder$1","encode","opt_string","string","n","u","stringToCodePoints","_Buffer","Buffer","useNativeEncoders","decodeUtf8","decoder","toUint8Array","toString","TextDecoderPolyfill","encodeUtf8","encoder","TextEncoderPolyfill","ITERATOR_DONE","freeze","done","ArrowJSON","_json","schema","batches","dictionaries","ReadableInterop","_getDOMStream","tee","_getNodeStream","pipe","pipeTo","duplex","pipeThrough","_DOMStream","toDOMStream","_nodeStream","toNodeStream","AsyncQueue","super","_values","resolvers","_closedPromise","_closedPromiseResolve","closed","reason","return","_ensureOpen","_error","reject","Symbol","asyncIterator","streamAdapters","_","abort","close","_args","BigIntCtor","BigIntAvailable","BigIntUnavailableError","BigIntUnavailable","asIntN","asUintN","BigInt","BigInt64ArrayCtor","BigInt64ArrayAvailable","BigInt64ArrayUnavailableError","BigInt64Array","BYTES_PER_ELEMENT","BigUint64ArrayCtor","BigUint64ArrayAvailable","BigUint64ArrayUnavailableError","BigUint64Array","isBoolean","isFunction","isPromise","isIterable","iterator","isAsyncIterable","isArrowJSON","isIteratorResult","isFileHandle","isNumber","isFetchResponse","isReadableDOMStream","isReadableNodeStream","SharedArrayBuf","SharedArrayBuffer","memcpy","source","targetByteOffset","sourceByteLength","targetByteLength","dst","Math","joinUint8Arrays","chunks","sliced","xOffset","yOffset","xLen","yLen","y","collapseContiguousByteRanges","reduce","Infinity","toArrayBufferView","ArrayBufferViewCtor","isView","toInt32Array","toBigInt64Array","toBigUint64Array","pump","toArrayBufferViewIterator","ArrayCtor","wrap","buffers","it","toUint8ArrayIterator","async","toArrayBufferViewAsyncIterator","emit","toUint8ArrayAsyncIterator","rebaseValueOffsets","valueOffsets","compareArrayLike","fromIterable","cmd","threw","bufferLength","isNaN","throw","fromAsyncIterable","fromDOMStream","AdaptiveByteReader","releaseLock","fromNodeStream","events","onEvent","race","isFinite","evt","destroy","cleanup","byobReader","defaultReader","supportsBYOB","reader","getBYOBReader","getDefaultReader","catch","readFromBYOBReader","mode","readInto","AbstractVector","org","apache","arrow","flatbuf","MetadataVersion","UnionMode","Precision","DateUnit","TimeUnit","IntervalUnit","Type","Endianness","Null","__init","builder","startNull","endNull","Struct_","startStruct_","endStruct_","List","startList","endList","LargeList","startLargeList","endLargeList","FixedSizeList","listSize","startFixedSizeList","addListSize","endFixedSizeList","keysSorted","startMap","addKeysSorted","endMap","Union","Sparse","typeIdsOffset","numElems","startUnion","addMode","addTypeIds","endUnion","Int","bitWidth","isSigned","startInt","addBitWidth","addIsSigned","endInt","FloatingPoint","HALF","precision","startFloatingPoint","addPrecision","endFloatingPoint","Utf8","startUtf8","endUtf8","Binary","startBinary","endBinary","LargeUtf8","startLargeUtf8","endLargeUtf8","LargeBinary","startLargeBinary","endLargeBinary","FixedSizeBinary","byteWidth","startFixedSizeBinary","addByteWidth","endFixedSizeBinary","Bool","startBool","endBool","Decimal","scale","startDecimal","addScale","endDecimal","MILLISECOND","unit","startDate","addUnit","endDate","Time","startTime","endTime","Timestamp","SECOND","optionalEncoding","timezoneOffset","startTimestamp","addTimezone","endTimestamp","Interval","YEAR_MONTH","startInterval","endInterval","Duration","startDuration","endDuration","KeyValue","keyOffset","valueOffset","startKeyValue","addKey","addValue","endKeyValue","DictionaryEncoding","indexTypeOffset","isOrdered","startDictionaryEncoding","addId","addIndexType","addIsOrdered","endDictionaryEncoding","Field","nameOffset","nullable","typeType","typeOffset","dictionaryOffset","childrenOffset","customMetadataOffset","startField","addName","addNullable","addTypeType","addType","addDictionary","addChildren","addCustomMetadata","endField","Schema","Little","endianness","fieldsOffset","startSchema","addEndianness","addFields","endSchema","NS7624605610262437867.org","MessageHeader","FieldNode","null_count","RecordBatch","nodesOffset","buffersOffset","startRecordBatch","addLength","addNodes","addBuffers","endRecordBatch","DictionaryBatch","dataOffset","isDelta","startDictionaryBatch","addData","addIsDelta","endDictionaryBatch","Message","V1","version","headerType","headerOffset","bodyLength","startMessage","addVersion","addHeaderType","addHeader","addBodyLength","endMessage","Schema_.org","BufferType","Message_.org","getBool","_data","_index","byte","bit","getBit","setBool","truncateBitmap","bitmap","alignedSize","packBools","iterateBits","values","xs","begin","byteIndex","remaining","popcnt_bit_range","lhs","rhs","sum","rhsInside","lhsInside","popcnt_array","arr","cnt","pos","view","DataView","popcnt_uint32","getUint32","getUint16","getUint8","uint32","Visitor","args","visit","getVisitFn","throwIfNotFound","visitor","dtype","Data","Vector","inferDType","DataType","visitNull","visitBool","visitInt","Int8","visitInt8","Int16","visitInt16","Int32","visitInt32","Int64","visitInt64","Uint8","visitUint8","Uint16","visitUint16","Uint32","visitUint32","Uint64","visitUint64","Float","visitFloat","Float16","visitFloat16","Float32","visitFloat32","Float64","visitFloat64","visitUtf8","visitBinary","visitFixedSizeBinary","visitDate","DateDay","visitDateDay","DateMillisecond","visitDateMillisecond","visitTimestamp","TimestampSecond","visitTimestampSecond","TimestampMillisecond","visitTimestampMillisecond","TimestampMicrosecond","visitTimestampMicrosecond","TimestampNanosecond","visitTimestampNanosecond","visitTime","TimeSecond","visitTimeSecond","TimeMillisecond","visitTimeMillisecond","TimeMicrosecond","visitTimeMicrosecond","TimeNanosecond","visitTimeNanosecond","visitDecimal","visitList","Struct","visitStruct","visitUnion","DenseUnion","visitDenseUnion","SparseUnion","visitSparseUnion","Dictionary","visitDictionary","visitInterval","IntervalDayTime","visitIntervalDayTime","IntervalYearMonth","visitIntervalYearMonth","visitFixedSizeList","visitMap","_node","typeId","SINGLE","DOUBLE","MICROSECOND","NANOSECOND","DAY","DAY_TIME","Dense","TypeComparator","compareFields","fields","others","every","f","compareField","compareConstructor","compareAny","compareInt","compareFloat","compareDate","compareTimestamp","timezone","compareTime","compareUnion","typeIds","compareInterval","indices","dictionary","comparer","toStringTag","ArrayType","Null$1","Int_","Int8Array","Int16Array","Uint32Array","Binary$1","Utf8$1","Bool$1","Decimal$1","Date_","Time_","Timestamp_","Interval_","child","valueType","valueField","List$1","join","Struct$1","Union_","typeIdToChildIndex","idx","FixedSizeBinary$1","FixedSizeList$1","Map_","keyType","Map_$1","getId","atomicDictionaryId","strideForType","nullCount","childData","floor","_nullCount","stride","nullBitmap","childStride","_sliceBuffers","clone","_sliceChildren","newLength","VALIDITY","TYPE","OFFSET","DATA","valueOffsetsOrChildren","valueToString","toPrimitive","JSON","stringify","createIsValidFunction","nullValues","fnBody","noNaNs","valueToCase","Function","roundLengthUpToNearest64Bytes","BPE","BufferBuilder","_resize","reservedLength","reservedByteLength","extra","reserved","array","sliceOrExtendArray","DataBufferBuilder","reserve","BitmapBufferBuilder","numValid","numInvalid","val","cur","OffsetsBufferBuilder","WideBufferBuilder","ArrayType64","_ArrayType64","buffer64","nulls","finished","_nulls","_isValid","queueingStrategy","highWaterMark","sizeProperty","numChunks","new","toVector","throughIterable","throughAsyncIterable","numChildren","_offsets","_typeIds","setValid","isValid","setValue","_setValue","valid","offsets","last","FixedWidthBuilder","opts","VariableWidthBuilder","_pendingLength","pending","_pending","current","_flush","pendingLength","_flushPending","BoolBuilder","NullBuilder","DateBuilder","DateDayBuilder","DateMillisecondBuilder","DecimalBuilder","DictionaryBuilder","dictionaryHashFunction","hashFn","_dictionaryOffset","_keysToIndices","valueToKey","keysToIndices","_dictionary","curr","concat","FixedSizeBinaryBuilder","f64","u32","uint16ToFloat64","h","expo","sigf","sign","NaN","float64ToUint16","FloatBuilder","Float16Builder","Float32Builder","Float64Builder","isArrowBigNumSymbol","for","BigNum","SignedBigNum","UnsignedBigNum","DecimalBigNum","bignumToNumber","bn","hi","lo","signed","words","number","bignumToString","bignumToBigInt","decimalToString","digits","base64","base32","checks","reverse","toJSON","valueOf","hint","TypedArray","BigIntArray","BN","num","IntBuilder","Int8Builder","Int16Builder","Int32Builder","Int64Builder","toBigInt","values64","Uint8Builder","Uint16Builder","Uint32Builder","Uint64Builder","memo","TimeBuilder","TimeSecondBuilder","TimeMillisecondBuilder","TimeMicrosecondBuilder","TimeNanosecondBuilder","TimestampBuilder","TimestampSecondBuilder","TimestampMillisecondBuilder","TimestampMicrosecondBuilder","TimestampNanosecondBuilder","IntervalBuilder","IntervalDayTimeBuilder","IntervalYearMonthBuilder","BinaryBuilder","Utf8Builder","Run","kParent","kRowIndex","kKeyToIdx","kIdxToVal","kCustomInspect","Row","parent","numKeys","ktoi","itov","getValue","getIndex","ki","vi","v","kr","vr","callbackfn","thisArg","str","defineProperties","MapRow","createRowProxy","getChildAt","StructRow","defineRowProxyProperties","findIndex","desc","row","getter","setter","hasOwnProperty","Proxy","getKey","RowProxyHandler","isExtensible","deleteProperty","preventExtensions","ownKeys","receiver","Reflect","tmp","clampRange","end","big0","isNaNFast","createElementComparator","search","typeofSearch","valueOfSearch","comparators","createSubElementsComparator","creatMapComparator","createArrayLikeComparator","createVectorComparator","createObjectComparator","compareArray","compareObject","vec","compareVector","lKeyItr","rKeyItr","rValItr","rVal","lKey","rKey","Chunked","vectors","calculateOffsets","_type","_chunks","_chunkOffsets","_length","_numChildren","selectChunkArgs","flatten","VectorName","chunk","isDictionary","_indices","_sliceInternal","columns","_children","vector","mid","isValidInternal","getInternal","self","indexOfInternal","toArray","arraySet","typedSet","chunkIndex","fromIndex","start","found","slices","chunkOffsets","chunkLength","chunkOffset","to","Column","_field","SingleChunkColumn","some","metadata","column","_chunk","selectArgs","Ctor","vals","_selectArgs","selectFieldArgs","_selectFieldArgs","_selectChunkArgs","res","selectVectorChildrenArgs","_selectVectorChildrenArgs","toKeysAndValues","entries","fieldIndex","valueIndex","generateDictionaryMap","compareSchemas","columnNames","names","columnIndices","curFields","mergeMaps","newFields","f2","newDictionaries","m1","m2","ListBuilder","_run","bind","FixedSizeListBuilder","childIndex","MapBuilder","StructBuilder","UnionBuilder","_valueToChildTypeId","childTypeId","SparseUnionBuilder","DenseUnionBuilder","SetVisitor","setEpochMsToMillisecondsLong","epochMs","setVariableWidthBytes","setDateDay","setEpochMsToDays","setDateMillisecond","setNumeric","setFloat16","setNumericX2","long","setTimestampSecond","setTimestampMillisecond","setTimestampMicrosecond","setEpochMsToMicrosecondsLong","setTimestampNanosecond","setEpochMsToNanosecondsLong","setTimeSecond","setTimeMillisecond","setTimeMicrosecond","setTimeNanosecond","setDenseUnion","setSparseUnion","setIntervalDayTime","setIntervalYearMonth","itr","_setStructVectorValue","_setStructArrayValue","_setStructObjectValue","newBuilder","getBuilderConstructor","defaultOptions","getChildOptions","T","setVisitor","Footer","Block","schemaOffset","dictionariesOffset","recordBatchesOffset","startFooter","addSchema","addDictionaries","addRecordBatches","endFooter","metaDataLength","_Block","File_.org","_Footer","Footer_","V4","recordBatches","dictionaryBatches","_recordBatches","_dictionaryBatches","buf","footer","getRootAsFooter","OffHeapFooter","startRecordBatchesVector","numRecordBatches","rb","FileBlock","startDictionariesVector","numDictionaries","db","dictionaryBatchesOffset","finishFooterBuffer","getRecordBatch","getDictionaryBatch","_footer","recordBatchesLength","dictionariesLength","fileBlock","createBlock","AsyncByteQueue","write","sync","ByteStream","ByteStreamSource","peek","AsyncByteStream","AsyncByteStreamSource","body","cancel","RandomAccessFile","readAt","getInt32","nBytes","AsyncRandomAccessFile","file","_handle","stat","bytesRead","intAsHex","kPowersOfTen","BaseInt64","L","R","product","lessThan","_times","_plus","out_buffer","fromString","out","posn","group","parseInt","substr","multiple","times","plus","left","right","this_high","other_high","negate","startsWith","Int128","L0","L1","L2","L3","R0","R1","R2","R3","multiply","sums","VectorLoader","nodesIndex","buffersIndex","nextFieldNode","readNullBitmap","readData","readOffsets","visitMany","readTypeIds","readDictionary","nextBufferRange","JSONVectorLoader","sources","isTimestamp","isInt","isTime","isDate","convertArray","isDecimal","isBinary","isFixedSizeBinary","joined","binaryDataFromJSON","isBool","isUtf8","startTypeIdsVector","createTypeIdsVector","indexType","recordBatchFromJSON","fieldNodesFromJSON","fieldNodes","validity","buffersFromJSON","BufferRegion","fieldChildrenFromJSON","fromJSON","customMetadataFromJSON","_metadata","indexTypeFromJSON","typeFromJSON","_Field","_Schema","_Message","_KeyValue","_FieldNode","_Endianness","_RecordBatch","_DictionaryBatch","header","_version","_headerType","_createHeader","_bodyLength","msg","message","messageHeaderFromJSON","_message","getRootAsMessage","decodeMessageHeader","isSchema","isRecordBatch","isDictionaryBatch","finishMessageBuffer","_nodes","_buffers","_id","_isDelta","decodeFieldChildren","childrenLength","decodeCustomMetadata","entry","customMetadataLength","customMetadata","decodeIndexType","decodeFieldType","typeIdsArray","typeAssembler","childOffsets","childrenVectorOffset","createChildrenVector","metadataOffset","createCustomMetadataVector","dictType","dictMeta","fieldOffsets","startFieldsVector","fieldsVectorOffset","createFieldsVector","platformIsLittleEndian","Big","_schema","fieldsLength","decodeSchemaFields","schemaFieldsFromJSON","recordBatch","startNodesVector","nodesVectorOffset","startBuffersVector","b_","buffersVectorOffset","batch","nodesLength","decodeFieldNodes","bufferRegions","buffersLength","decodeBuffers","dictionaryBatch","createFieldNode","createBuffer","setInt16","invalidMessageType","nullMessage","invalidMessageMetadata","expected","actual","invalidMessageBodyLength","MessageReader","readMetadataLength","readMetadata","throwIfNull","readMessage","PADDING","metadataLength","AsyncMessageReader","JSONMessageReader","_body","_batchIndex","_dictionaryIndex","flattenDataSources","MAGIC","checkForMagicArrowString","magicLength","magicAndPadding","magicX2AndPadding","VectorAssembler","_byteLength","_bufferRegions","assembler","vectorChildren","assembleResult","RangeError","isNull","addBuffer","_nullV","assembleFlatVector","assembleFlatListVector","firstOffset","lastOffset","assembleListVector","assembleNestedVector","maxChildTypeId","childLengths","shiftedOffsets","unshiftedOffsets","childLength","RecordBatchWriter","_position","_started","_sink","_dictionaryBlocks","_recordBatchBlocks","_dictionaryDeltaOffsets","autoDestroy","writeLegacyIpcFormat","_autoDestroy","_writeLegacyIpcFormat","writableStrategy","readableStrategy","writeAll","writeAllAsync","reset","sink","isWritableNodeStream","objectMode","_writeFooter","compareTo","_writeSchema","payload","Table","_InternalEmptyPlaceholderRecordBatch","_writeRecordBatch","flatbufferSize","prefixSize","nPaddingBytes","_write","of","_writePadding","_writeMessage","assemble","metadata.RecordBatch","_writeDictionaries","_writeBodyBuffers","metadata.DictionaryBatch","padding","_writeDictionaryBatch","RecordBatchStreamWriter","writer","RecordBatchFileWriter","_writeMagic","noopBuf","nullBufs","bitmapLength","distributeVectorsIntoRecordBatches","vecs","batchArgs","numBatches","batchLength","numColumns","Number","POSITIVE_INFINITY","distributeChildData","uniformlyDistributeChunksAcrossRecordBatches","_changeLengthAndBackfillNullBitmap","BaseVector","_bindDataAccessors","isConcatSpreadable","BinaryVector","BoolVector","vectorFromValuesWithType","DateVector","DateDayVector","DateMillisecondVector","DecimalVector","DictionaryVector","FixedSizeBinaryVector","FixedSizeListVector","FloatVector","ArrowType","vectorTypeToDataType","InputType","arrayTypeToDataType","convertTo16Bit","Float16Vector","Float32Vector","Float64Vector","typeCtor","dataCtor","ctor","IntervalVector","IntervalDayTimeVector","IntervalYearMonthVector","IntVector","is64bit","convert32To64Bit","Int8Vector","Int16Vector","Int32Vector","Int64Vector","_values64","Uint8Vector","Uint16Vector","Uint32Vector","Uint64Vector","ListVector","MapVector","NullVector","StructVector","_row","TimestampVector","TimestampSecondVector","TimestampMillisecondVector","TimestampMicrosecondVector","TimestampNanosecondVector","TimeVector","TimeSecondVector","TimeMillisecondVector","TimeMicrosecondVector","TimeNanosecondVector","UnionVector","DenseUnionVector","SparseUnionVector","Utf8Vector","partial0","partial2","GetVisitor","epochMillisecondsLongToMs","epochMillisecondsToDate","getVariableWidthBytes","getDateDay","epochDaysToMs","epochDaysToDate","getDateMillisecond","epochMillisecondsLongToDate","getNumeric","getFloat16","getBigInts","getTimestampSecond","getTimestampMillisecond","getTimestampMicrosecond","epochMicrosecondsLongToMs","getTimestampNanosecond","epochNanosecondsLongToMs","getTimeSecond","getTimeMillisecond","getTimeMicrosecond","getTimeNanosecond","getDenseUnion","getSparseUnion","getIntervalDayTime","getIntervalYearMonth","interval","int32s","_vector","decimal","IndexOfVisitor","indexOfValue","searchElement","indexOfNull","compare","indexOfUnion","IteratorVisitor","vectorIterator","getFn","getVisitor","nullByte","nullBit","nullableIterator","ToArrayVisitor","arrayOfVector","iteratorVisitor","variableWidthColumnErrorMessage","____","visitFields","newDataType","getVectorConstructor","transform","indexOfVisitor","toArrayVisitor","getByteWidth","byteWidthVisitor","wrapNullableSet","VectorCtor","fn.partial2","fn.partial0","partialType0","fromStruct","tableFromIterable","tableFromAsyncIterable","RecordBatchReader","isSync","open","opening","cols","selectColumnArgs","numCols","getColumnAt","getColumnIndex","nameToIndex","selectAt","columnName","oldToNew","newIdx","_f","_fs","fs","vs","batchData","ensureSameLengthData","_dictionaries","DictionaryCollector","collect","impl","_impl","isFile","isAsync","isStream","readRecordBatch","RecordBatchStreamReader","RecordBatchJSONReaderImpl","fromArrowJSON","AsyncRecordBatchFileReader","AsyncRecordBatchFileReaderImpl","AsyncRecordBatchStreamReader","AsyncRecordBatchStreamReaderImpl","fromFileHandle","RecordBatchFileReader","RecordBatchFileReaderImpl","fromAsyncByteStream","RecordBatchStreamReaderImpl","fromByteStream","readAllSync","readAllAsync","RecordBatchReaderImpl","_recordBatchIndex","_loadVectors","_reader","shouldAutoDestroy","readSchema","_readNextMessageAndValidate","readMessageBody","_loadRecordBatch","_loadDictionaryBatch","_readFooter","_readDictionaryBatch","seek","BuilderTransform","_numChunks","_finished","_bufferedSize","builderOptions","_controller","_builder","_getSize","chunkByteLength","readableHighWaterMark","writableHighWaterMark","ReadableStream","pull","_maybeFlush","WritableStream","_writeValueAndReturnChunkSize","bufferedSize","controller","desiredSize","_enqueue","enqueue","Value","Literal","Equals","LTeq","GTeq","Not","ge","le","eq","Col","colidx","Predicate","expr","And","Or","ComparisonPredicate","_bindLitLit","_bindLitCol","_bindColLit","_bindColCol","CombinationPredicate","accum","_batch","rtrn","left_func","right_func","col","lit","col_func","lastDictionary","reverseLookup","lastKey","func","countBy","DataFrame","scan","scanReverse","predicate","FilteredDataFrame","batchIndex","numRows","count_by","countByteLength","ceil","log","counts","CountByResult","_predicate","isBound","and","bm","hwm","asyncIterableAsReadableDOMStream","iterableAsReadableDOMStream","queue","readable","ArrowTable","indexBuffer","columnsBuffer","styler","getCell","rowIndex","columnIndex","isBlankCell","headerRows","headerColumns","isIndexCell","isColumnsCell","classNames","content","dataColumnIndex","getContent","columnsTable","dataRowIndex","uuid","indexTable","displayValuesTable","dataTable","getColumnTypeId","nanosToDate","caption","rows","dataRows","dataColumns","columnTable","nanos","ComponentMessageType","Streamlit","levels","updates","to_null_out","accounted_for","$$scope","spread_props","create_if_block","renderData","width","disabled","spreadArgs","onRenderEvent","detail","RENDER_EVENT","setComponentReady","API_VERSION","registeredMessageListener","onMessageEvent","sendBackMsg","COMPONENT_READY","apiVersion","setFrameHeight","height","scrollHeight","lastFrameHeight","SET_FRAME_HEIGHT","setComponentValue","SET_COMPONENT_VALUE","onRenderMessage","dataframeArgs","argsDataframeToObject","eventData","dispatchEvent","argsDataframe","argsDataframeArrow","toArrowTable","fromEntries","df","postMessage","isStreamlitMessage","setStreamlitLifecycle","img","img_src_value","div","iterations","selectedImageUrl","imageUrls","currentSrc","ImageGallery"],"mappings":"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"}